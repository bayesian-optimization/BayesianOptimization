Search.setIndex({"alltitles": {"1. Simple Constrained Optimization": [[3, "1.-Simple-Constrained-Optimization"]], "1. Simple integer-valued function": [[7, "1.-Simple-integer-valued-function"]], "1. Specifying the function to be optimized": [[2, "1.-Specifying-the-function-to-be-optimized"]], "1. Suggest-Evaluate-Register Paradigm": [[1, "1.-Suggest-Evaluate-Register-Paradigm"]], "1.1 The maximize loop": [[1, "1.1-The-maximize-loop"]], "2. Advanced Constrained Optimization": [[3, "2.-Advanced-Constrained-Optimization"]], "2. Getting Started": [[2, "2.-Getting-Started"]], "2. Mixed-parameter optimization": [[7, "2.-Mixed-parameter-optimization"]], "2. Tuning the underlying Gaussian Process": [[1, "2.-Tuning-the-underlying-Gaussian-Process"]], "2.1 Changing bounds": [[2, "2.1-Changing-bounds"]], "2.1 Passing parameter to the GP": [[1, "2.1-Passing-parameter-to-the-GP"]], "2.1 Simple, single constraint": [[3, "2.1-Simple,-single-constraint"]], "2.2 Multiple Constraints": [[3, "2.2-Multiple-Constraints"]], "2.2 Tuning the alpha parameter": [[1, "2.2-Tuning-the-alpha-parameter"]], "2.3 Changing kernels": [[1, "2.3-Changing-kernels"]], "3. Categorical variables": [[7, "3.-Categorical-variables"]], "3. Guiding the optimization": [[2, "3.-Guiding-the-optimization"]], "4. Saving, loading and restarting": [[2, "4.-Saving,-loading-and-restarting"]], "4. Use in ML": [[7, "4.-Use-in-ML"]], "4.1 Saving progress": [[2, "4.1-Saving-progress"]], "4.2 Loading progress": [[2, "4.2-Loading-progress"]], "5. Defining your own Parameter": [[7, "5.-Defining-your-own-Parameter"]], "Acquisition Function \u201cExpected Improvement\u201d": [[5, "Acquisition-Function-%22Expected-Improvement%22"]], "Acquisition Function \u201cProbability of Improvement\u201d": [[5, "Acquisition-Function-%22Probability-of-Improvement%22"]], "Acquisition Function \u201cUpper Confidence Bound\u201d": [[5, "Acquisition-Function-%22Upper-Confidence-Bound%22"]], "Acquisition functions": [[0, null]], "Advanced tour of the Bayesian Optimization package": [[1, null]], "After five steps of GP (and two random points)": [[21, "After-five-steps-of-GP-(and-two-random-points)"]], "After four steps of GP (and two random points)": [[21, "After-four-steps-of-GP-(and-two-random-points)"]], "After one step of GP (and two random points)": [[21, "After-one-step-of-GP-(and-two-random-points)"]], "After seven steps of GP (and two random points)": [[21, "After-seven-steps-of-GP-(and-two-random-points)"]], "After six steps of GP (and two random points)": [[21, "After-six-steps-of-GP-(and-two-random-points)"]], "After three steps of GP (and two random points)": [[21, "After-three-steps-of-GP-(and-two-random-points)"]], "After two steps of GP (and two random points)": [[21, "After-two-steps-of-GP-(and-two-random-points)"]], "Background": [[4, "Background"]], "Basic tour of the Bayesian Optimization package": [[2, null]], "Basics": [[4, "Basics"]], "Bayesian Optimization": [[6, null]], "Citation": [[6, "citation"]], "Conda (via conda-forge)": [[6, "conda-via-conda-forge"]], "Constrained Optimization": [[3, null]], "Create a BayesianOptimization Object": [[21, "Create-a-BayesianOptimization-Object"]], "Exploitation vs Exploration": [[5, null]], "How does it work?": [[6, "how-does-it-work"]], "Installation": [[6, "installation"]], "Let\u2019s first define a couple functions to make plotting easier": [[21, "Let's-first-define-a-couple-functions-to-make-plotting-easier"]], "Next Steps": [[2, "Next-Steps"]], "Note": [[10, null], [12, null], [13, null], [15, null], [15, null]], "Observers Continued": [[1, "Observers-Continued"]], "Optimizing over non-float Parameters": [[7, null]], "Other": [[18, null]], "Parameters": [[4, "Parameters"]], "Plotting and visualizing the algorithm at each step": [[21, "Plotting-and-visualizing-the-algorithm-at-each-step"]], "Prefer exploitation (kappa=0.1)": [[5, "Prefer-exploitation-(kappa=0.1)"]], "Prefer exploitation (xi=0.0)": [[5, "Prefer-exploitation-(xi=0.0)"]], "Prefer exploitation (xi=1e-4)": [[5, "Prefer-exploitation-(xi=1e-4)"]], "Prefer exploration (kappa=10)": [[5, "Prefer-exploration-(kappa=10)"]], "Prefer exploration (xi=0.1)": [[5, "Prefer-exploration-(xi=0.1)"], [5, "id1"]], "Quick Index": [[6, "quick-index"]], "Sequential Domain Reduction": [[4, null]], "Simulation 2": [[3, "Simulation-2"]], "Stopping": [[21, "Stopping"]], "Target function": [[5, "Target-function"]], "Two random points": [[21, "Two-random-points"]], "Utility function for plotting": [[5, "Utility-function-for-plotting"]], "Visualization": [[21, null]], "Warning": [[14, null]], "bayes_opt.BayesianOptimization": [[14, null]], "bayes_opt.ConstraintModel": [[15, null]], "bayes_opt.SequentialDomainReductionTransformer": [[16, null]], "bayes_opt.TargetSpace": [[20, null]], "bayes_opt.acquisition": [[8, null]], "bayes_opt.acquisition.ConstantLiar": [[9, null]], "bayes_opt.acquisition.ExpectedImprovement": [[10, null]], "bayes_opt.acquisition.GPHedge": [[11, null]], "bayes_opt.acquisition.ProbabilityOfImprovement": [[12, null]], "bayes_opt.acquisition.UpperConfidenceBound": [[13, null]], "bayes_opt.exception": [[17, null]], "bayes_opt.parameter": [[19, null]], "pip (via PyPI)": [[6, "pip-via-pypi"]]}, "docurls": ["acquisition_functions.html", "advanced-tour.html", "basic-tour.html", "constraints.html", "domain_reduction.html", "exploitation_vs_exploration.html", "index.html", "parameter_types.html", "reference/acquisition.html", "reference/acquisition/ConstantLiar.html", "reference/acquisition/ExpectedImprovement.html", "reference/acquisition/GPHedge.html", "reference/acquisition/ProbabilityOfImprovement.html", "reference/acquisition/UpperConfidenceBound.html", "reference/bayes_opt.html", "reference/constraint.html", "reference/domain_reduction.html", "reference/exception.html", "reference/other.html", "reference/parameter.html", "reference/target_space.html", "visualization.html"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "indexentries": {"acquisition_function (bayes_opt.bayesianoptimization property)": [[14, "bayes_opt.BayesianOptimization.acquisition_function", false]], "acquisitionfunction (class in bayes_opt.acquisition)": [[8, "bayes_opt.acquisition.AcquisitionFunction", false]], "allowed() (bayes_opt.constraint.constraintmodel method)": [[15, "bayes_opt.constraint.ConstraintModel.allowed", false]], "approx() (bayes_opt.constraint.constraintmodel method)": [[15, "bayes_opt.constraint.ConstraintModel.approx", false]], "array_to_params() (bayes_opt.targetspace method)": [[20, "bayes_opt.TargetSpace.array_to_params", false]], "base_acq() (bayes_opt.acquisition.acquisitionfunction method)": [[8, "bayes_opt.acquisition.AcquisitionFunction.base_acq", false]], "base_acq() (bayes_opt.acquisition.constantliar method)": [[9, "bayes_opt.acquisition.ConstantLiar.base_acq", false]], "base_acq() (bayes_opt.acquisition.expectedimprovement method)": [[10, "bayes_opt.acquisition.ExpectedImprovement.base_acq", false]], "base_acq() (bayes_opt.acquisition.gphedge method)": [[11, "bayes_opt.acquisition.GPHedge.base_acq", false]], "base_acq() (bayes_opt.acquisition.probabilityofimprovement method)": [[12, "bayes_opt.acquisition.ProbabilityOfImprovement.base_acq", false]], "base_acq() (bayes_opt.acquisition.upperconfidencebound method)": [[13, "bayes_opt.acquisition.UpperConfidenceBound.base_acq", false]], "bayes_opt.acquisition": [[8, "module-bayes_opt.acquisition", false]], "bayes_opt.exception": [[17, "module-bayes_opt.exception", false]], "bayes_opt.parameter": [[19, "module-bayes_opt.parameter", false]], "bayesianoptimization (class in bayes_opt)": [[14, "bayes_opt.BayesianOptimization", false]], "bayesianoptimizationerror": [[17, "bayes_opt.exception.BayesianOptimizationError", false]], "bayesparameter (class in bayes_opt.parameter)": [[19, "bayes_opt.parameter.BayesParameter", false]], "bounds (bayes_opt.parameter.bayesparameter property)": [[19, "bayes_opt.parameter.BayesParameter.bounds", false]], "bounds (bayes_opt.targetspace property)": [[20, "bayes_opt.TargetSpace.bounds", false]], "calculate_bounds() (bayes_opt.targetspace method)": [[20, "bayes_opt.TargetSpace.calculate_bounds", false]], "categoricalparameter (class in bayes_opt.parameter)": [[19, "bayes_opt.parameter.CategoricalParameter", false]], "constantliar (class in bayes_opt.acquisition)": [[9, "bayes_opt.acquisition.ConstantLiar", false]], "constraint (bayes_opt.bayesianoptimization property)": [[14, "bayes_opt.BayesianOptimization.constraint", false]], "constraint (bayes_opt.targetspace property)": [[20, "bayes_opt.TargetSpace.constraint", false]], "constraint_values (bayes_opt.targetspace property)": [[20, "bayes_opt.TargetSpace.constraint_values", false]], "constraintmodel (class in bayes_opt.constraint)": [[15, "bayes_opt.constraint.ConstraintModel", false]], "constraintnotsupportederror": [[17, "bayes_opt.exception.ConstraintNotSupportedError", false]], "continuous_dimensions (bayes_opt.targetspace property)": [[20, "bayes_opt.TargetSpace.continuous_dimensions", false]], "decay_exploration() (bayes_opt.acquisition.expectedimprovement method)": [[10, "bayes_opt.acquisition.ExpectedImprovement.decay_exploration", false]], "decay_exploration() (bayes_opt.acquisition.probabilityofimprovement method)": [[12, "bayes_opt.acquisition.ProbabilityOfImprovement.decay_exploration", false]], "decay_exploration() (bayes_opt.acquisition.upperconfidencebound method)": [[13, "bayes_opt.acquisition.UpperConfidenceBound.decay_exploration", false]], "dim (bayes_opt.parameter.bayesparameter property)": [[19, "bayes_opt.parameter.BayesParameter.dim", false]], "dim (bayes_opt.parameter.categoricalparameter property)": [[19, "bayes_opt.parameter.CategoricalParameter.dim", false]], "dim (bayes_opt.parameter.floatparameter property)": [[19, "bayes_opt.parameter.FloatParameter.dim", false]], "dim (bayes_opt.parameter.intparameter property)": [[19, "bayes_opt.parameter.IntParameter.dim", false]], "dim (bayes_opt.targetspace property)": [[20, "bayes_opt.TargetSpace.dim", false]], "empty (bayes_opt.targetspace property)": [[20, "bayes_opt.TargetSpace.empty", false]], "eval() (bayes_opt.constraint.constraintmodel method)": [[15, "bayes_opt.constraint.ConstraintModel.eval", false]], "events (class in bayes_opt)": [[18, "bayes_opt.Events", false]], "expectedimprovement (class in bayes_opt.acquisition)": [[10, "bayes_opt.acquisition.ExpectedImprovement", false]], "fit() (bayes_opt.constraint.constraintmodel method)": [[15, "bayes_opt.constraint.ConstraintModel.fit", false]], "floatparameter (class in bayes_opt.parameter)": [[19, "bayes_opt.parameter.FloatParameter", false]], "gphedge (class in bayes_opt.acquisition)": [[11, "bayes_opt.acquisition.GPHedge", false]], "initialize() (bayes_opt.sequentialdomainreductiontransformer method)": [[16, "bayes_opt.SequentialDomainReductionTransformer.initialize", false]], "intparameter (class in bayes_opt.parameter)": [[19, "bayes_opt.parameter.IntParameter", false]], "is_constrained (bayes_opt.screenlogger property)": [[18, "bayes_opt.ScreenLogger.is_constrained", false]], "is_continuous (bayes_opt.parameter.bayesparameter property)": [[19, "bayes_opt.parameter.BayesParameter.is_continuous", false]], "is_continuous (bayes_opt.parameter.categoricalparameter property)": [[19, "bayes_opt.parameter.CategoricalParameter.is_continuous", false]], "is_continuous (bayes_opt.parameter.floatparameter property)": [[19, "bayes_opt.parameter.FloatParameter.is_continuous", false]], "is_continuous (bayes_opt.parameter.intparameter property)": [[19, "bayes_opt.parameter.IntParameter.is_continuous", false]], "is_numeric() (in module bayes_opt.parameter)": [[19, "bayes_opt.parameter.is_numeric", false]], "jsonlogger (class in bayes_opt)": [[18, "bayes_opt.JSONLogger", false]], "kernel_transform() (bayes_opt.parameter.bayesparameter method)": [[19, "bayes_opt.parameter.BayesParameter.kernel_transform", false]], "kernel_transform() (bayes_opt.parameter.categoricalparameter method)": [[19, "bayes_opt.parameter.CategoricalParameter.kernel_transform", false]], "kernel_transform() (bayes_opt.parameter.floatparameter method)": [[19, "bayes_opt.parameter.FloatParameter.kernel_transform", false]], "kernel_transform() (bayes_opt.parameter.intparameter method)": [[19, "bayes_opt.parameter.IntParameter.kernel_transform", false]], "kernel_transform() (bayes_opt.targetspace method)": [[20, "bayes_opt.TargetSpace.kernel_transform", false]], "keys (bayes_opt.targetspace property)": [[20, "bayes_opt.TargetSpace.keys", false]], "lb (bayes_opt.constraint.constraintmodel property)": [[15, "bayes_opt.constraint.ConstraintModel.lb", false]], "make_masks() (bayes_opt.targetspace method)": [[20, "bayes_opt.TargetSpace.make_masks", false]], "make_params() (bayes_opt.targetspace method)": [[20, "bayes_opt.TargetSpace.make_params", false]], "mask (bayes_opt.targetspace property)": [[20, "bayes_opt.TargetSpace.mask", false]], "masks (bayes_opt.targetspace property)": [[20, "bayes_opt.TargetSpace.masks", false]], "max (bayes_opt.bayesianoptimization property)": [[14, "bayes_opt.BayesianOptimization.max", false]], "max() (bayes_opt.targetspace method)": [[20, "bayes_opt.TargetSpace.max", false]], "maximize() (bayes_opt.bayesianoptimization method)": [[14, "bayes_opt.BayesianOptimization.maximize", false]], "model (bayes_opt.constraint.constraintmodel property)": [[15, "bayes_opt.constraint.ConstraintModel.model", false]], "module": [[8, "module-bayes_opt.acquisition", false], [17, "module-bayes_opt.exception", false], [19, "module-bayes_opt.parameter", false]], "notuniqueerror": [[17, "bayes_opt.exception.NotUniqueError", false]], "novalidpointregisterederror": [[17, "bayes_opt.exception.NoValidPointRegisteredError", false]], "params (bayes_opt.targetspace property)": [[20, "bayes_opt.TargetSpace.params", false]], "params_config (bayes_opt.targetspace property)": [[20, "bayes_opt.TargetSpace.params_config", false]], "params_to_array() (bayes_opt.targetspace method)": [[20, "bayes_opt.TargetSpace.params_to_array", false]], "predict() (bayes_opt.constraint.constraintmodel method)": [[15, "bayes_opt.constraint.ConstraintModel.predict", false]], "probabilityofimprovement (class in bayes_opt.acquisition)": [[12, "bayes_opt.acquisition.ProbabilityOfImprovement", false]], "probe() (bayes_opt.bayesianoptimization method)": [[14, "bayes_opt.BayesianOptimization.probe", false]], "probe() (bayes_opt.targetspace method)": [[20, "bayes_opt.TargetSpace.probe", false]], "random_sample() (bayes_opt.parameter.bayesparameter method)": [[19, "bayes_opt.parameter.BayesParameter.random_sample", false]], "random_sample() (bayes_opt.parameter.categoricalparameter method)": [[19, "bayes_opt.parameter.CategoricalParameter.random_sample", false]], "random_sample() (bayes_opt.parameter.intparameter method)": [[19, "bayes_opt.parameter.IntParameter.random_sample", false]], "random_sample() (bayes_opt.targetspace method)": [[20, "bayes_opt.TargetSpace.random_sample", false]], "register() (bayes_opt.bayesianoptimization method)": [[14, "bayes_opt.BayesianOptimization.register", false]], "register() (bayes_opt.targetspace method)": [[20, "bayes_opt.TargetSpace.register", false]], "res (bayes_opt.bayesianoptimization property)": [[14, "bayes_opt.BayesianOptimization.res", false]], "res() (bayes_opt.targetspace method)": [[20, "bayes_opt.TargetSpace.res", false]], "screenlogger (class in bayes_opt)": [[18, "bayes_opt.ScreenLogger", false]], "sequentialdomainreductiontransformer (class in bayes_opt)": [[16, "bayes_opt.SequentialDomainReductionTransformer", false]], "set_bounds() (bayes_opt.bayesianoptimization method)": [[14, "bayes_opt.BayesianOptimization.set_bounds", false]], "set_bounds() (bayes_opt.targetspace method)": [[20, "bayes_opt.TargetSpace.set_bounds", false]], "set_gp_params() (bayes_opt.bayesianoptimization method)": [[14, "bayes_opt.BayesianOptimization.set_gp_params", false]], "space (bayes_opt.bayesianoptimization property)": [[14, "bayes_opt.BayesianOptimization.space", false]], "suggest() (bayes_opt.acquisition.acquisitionfunction method)": [[8, "bayes_opt.acquisition.AcquisitionFunction.suggest", false]], "suggest() (bayes_opt.acquisition.constantliar method)": [[9, "bayes_opt.acquisition.ConstantLiar.suggest", false]], "suggest() (bayes_opt.acquisition.expectedimprovement method)": [[10, "bayes_opt.acquisition.ExpectedImprovement.suggest", false]], "suggest() (bayes_opt.acquisition.gphedge method)": [[11, "bayes_opt.acquisition.GPHedge.suggest", false]], "suggest() (bayes_opt.acquisition.probabilityofimprovement method)": [[12, "bayes_opt.acquisition.ProbabilityOfImprovement.suggest", false]], "suggest() (bayes_opt.acquisition.upperconfidencebound method)": [[13, "bayes_opt.acquisition.UpperConfidenceBound.suggest", false]], "suggest() (bayes_opt.bayesianoptimization method)": [[14, "bayes_opt.BayesianOptimization.suggest", false]], "target (bayes_opt.targetspace property)": [[20, "bayes_opt.TargetSpace.target", false]], "targetspace (class in bayes_opt)": [[20, "bayes_opt.TargetSpace", false]], "targetspaceemptyerror": [[17, "bayes_opt.exception.TargetSpaceEmptyError", false]], "to_float() (bayes_opt.parameter.bayesparameter method)": [[19, "bayes_opt.parameter.BayesParameter.to_float", false]], "to_float() (bayes_opt.parameter.categoricalparameter method)": [[19, "bayes_opt.parameter.CategoricalParameter.to_float", false]], "to_float() (bayes_opt.parameter.floatparameter method)": [[19, "bayes_opt.parameter.FloatParameter.to_float", false]], "to_float() (bayes_opt.parameter.intparameter method)": [[19, "bayes_opt.parameter.IntParameter.to_float", false]], "to_param() (bayes_opt.parameter.bayesparameter method)": [[19, "bayes_opt.parameter.BayesParameter.to_param", false]], "to_param() (bayes_opt.parameter.categoricalparameter method)": [[19, "bayes_opt.parameter.CategoricalParameter.to_param", false]], "to_param() (bayes_opt.parameter.floatparameter method)": [[19, "bayes_opt.parameter.FloatParameter.to_param", false]], "to_param() (bayes_opt.parameter.intparameter method)": [[19, "bayes_opt.parameter.IntParameter.to_param", false]], "to_string() (bayes_opt.parameter.bayesparameter method)": [[19, "bayes_opt.parameter.BayesParameter.to_string", false]], "to_string() (bayes_opt.parameter.categoricalparameter method)": [[19, "bayes_opt.parameter.CategoricalParameter.to_string", false]], "to_string() (bayes_opt.parameter.floatparameter method)": [[19, "bayes_opt.parameter.FloatParameter.to_string", false]], "transform() (bayes_opt.sequentialdomainreductiontransformer method)": [[16, "bayes_opt.SequentialDomainReductionTransformer.transform", false]], "ub (bayes_opt.constraint.constraintmodel property)": [[15, "bayes_opt.constraint.ConstraintModel.ub", false]], "update() (bayes_opt.jsonlogger method)": [[18, "bayes_opt.JSONLogger.update", false]], "update() (bayes_opt.screenlogger method)": [[18, "bayes_opt.ScreenLogger.update", false]], "upperconfidencebound (class in bayes_opt.acquisition)": [[13, "bayes_opt.acquisition.UpperConfidenceBound", false]], "verbose (bayes_opt.screenlogger property)": [[18, "bayes_opt.ScreenLogger.verbose", false]], "wrap_kernel() (in module bayes_opt.parameter)": [[19, "bayes_opt.parameter.wrap_kernel", false]]}, "objects": {"bayes_opt": [[14, 0, 1, 0, "BayesianOptimization", "Handle optimization of a target function over a specific target space."], [18, 0, 1, 0, "Events", "Define optimization events."], [18, 0, 1, 0, "JSONLogger", "Logger that outputs steps in JSON format."], [18, 0, 1, 0, "ScreenLogger", "Logger that outputs text, e.g. to log to a terminal."], [16, 0, 1, 0, "SequentialDomainReductionTransformer", "Reduce the searchable space."], [20, 0, 1, 0, "TargetSpace", "Holds the param-space coordinates (X) and target values (Y)."], [8, 4, 0, 1, "acquisition", ""], [17, 4, 0, 1, "exception", ""], [19, 4, 0, 1, "parameter", ""]], "bayes_opt.BayesianOptimization": [[14, 2, 1, 0, "acquisition_function", "Return the acquisition function associated with the optimizer."], [14, 2, 1, 0, "constraint", "Return the constraint associated with the optimizer, if any."], [14, 2, 1, 0, "max", "Get maximum target value found and corresponding parameters."], [14, 3, 1, 0, "maximize", "Maximize the given function over the target space."], [14, 3, 1, 0, "probe", "Evaluate the function at the given points."], [14, 3, 1, 0, "register", "Register an observation with known target."], [14, 2, 1, 0, "res", "Get all target values and constraint fulfillment for all parameters."], [14, 3, 1, 0, "set_bounds", "Modify the bounds of the search space."], [14, 3, 1, 0, "set_gp_params", "Set parameters of the internal Gaussian Process Regressor."], [14, 2, 1, 0, "space", "Return the target space associated with the optimizer."], [14, 3, 1, 0, "suggest", "Suggest a promising point to probe next."]], "bayes_opt.BayesianOptimization.__init__": [[14, 1, 2, 0, "acquisition_function", ""], [14, 1, 2, 0, "allow_duplicate_points", "If True, the optimizer will allow duplicate points to be registered. This behavior may be desired in high noise situations where repeatedly probing the same point will give different answers."], [14, 1, 2, 0, "bounds_transformer", "If provided, the transformation is applied to the bounds."], [14, 1, 2, 0, "constraint", "Note that the names of arguments of the constraint function and of f need to be the same."], [14, 1, 2, 0, "f", "Function to be maximized."], [14, 1, 2, 0, "pbounds", "Dictionary with parameters names as keys and a tuple with minimum and maximum values."], [14, 1, 2, 0, "random_state", "If the value is an integer, it is used as the seed for creating a numpy.random.RandomState."], [14, 1, 2, 0, "verbose", "The level of verbosity."]], "bayes_opt.BayesianOptimization.maximize": [[14, 1, 2, 0, "init_points", "Number of random points to probe before starting the optimization."], [14, 1, 2, 0, "n_iter", "Number of iterations where the method attempts to find the maximum value."]], "bayes_opt.BayesianOptimization.probe": [[14, 1, 2, 0, "lazy", "If True, the optimizer will evaluate the points when calling maximize()."], [14, 1, 2, 0, "params", "The parameters where the optimizer will evaluate the function."]], "bayes_opt.BayesianOptimization.register": [[14, 1, 2, 0, "constraint_value", "Value of the constraint function at the observation, if any."], [14, 1, 2, 0, "params", "The parameters associated with the observation."], [14, 1, 2, 0, "target", "Value of the target function at the observation."]], "bayes_opt.BayesianOptimization.set_bounds": [[14, 1, 2, 0, "new_bounds", "A dictionary with the parameter name and its new bounds"]], "bayes_opt.BayesianOptimization.set_gp_params": [[14, 1, 2, 0, "params", ""]], "bayes_opt.JSONLogger": [[18, 3, 1, 0, "update", "Handle incoming events."]], "bayes_opt.JSONLogger.__init__": [[18, 1, 2, 0, "path", "Path to the file to write to."], [18, 1, 2, 0, "reset", "Whether to overwrite the file if it already exists."]], "bayes_opt.JSONLogger.update": [[18, 1, 2, 0, "event", "One of the values associated with Events.OPTIMIZATION_START, Events.OPTIMIZATION_STEP or Events.OPTIMIZATION_END."], [18, 1, 2, 0, "instance", "The instance associated with the step."]], "bayes_opt.ScreenLogger": [[18, 2, 1, 0, "is_constrained", "Return whether the logger is constrained."], [18, 3, 1, 0, "update", "Handle incoming events."], [18, 2, 1, 0, "verbose", "Return the verbosity level."]], "bayes_opt.ScreenLogger.__init__": [[18, 1, 2, 0, "is_constrained", "Whether the logger is associated with a constrained optimization instance."], [18, 1, 2, 0, "verbose", "Verbosity level of the logger."]], "bayes_opt.ScreenLogger.update": [[18, 1, 2, 0, "event", "One of the values associated with Events.OPTIMIZATION_START, Events.OPTIMIZATION_STEP or Events.OPTIMIZATION_END."], [18, 1, 2, 0, "instance", "The instance associated with the step."]], "bayes_opt.SequentialDomainReductionTransformer": [[16, 3, 1, 0, "initialize", "Initialize all of the parameters."], [16, 3, 1, 0, "transform", "Transform the bounds of the target space."]], "bayes_opt.SequentialDomainReductionTransformer.__init__": [[16, 1, 2, 0, "eta", "Zooming parameter used to shrink the region of interest."], [16, 1, 2, 0, "gamma_osc", "Parameter used to scale (typically dampen) oscillations."], [16, 1, 2, 0, "gamma_pan", "Parameter used to scale (typically unitary) panning."], [16, 1, 2, 0, "minimum_window", "Minimum window size for each parameter."], [16, 1, 2, 0, "parameters", ""]], "bayes_opt.SequentialDomainReductionTransformer.initialize": [[16, 1, 2, 0, "target_space", "TargetSpace this DomainTransformer operates on."]], "bayes_opt.SequentialDomainReductionTransformer.transform": [[16, 1, 2, 0, "target_space", "TargetSpace this DomainTransformer operates on."]], "bayes_opt.TargetSpace": [[20, 3, 1, 0, "array_to_params", "Convert an array representation of parameters into a dict version."], [20, 2, 1, 0, "bounds", "Get the bounds of this TargetSpace."], [20, 3, 1, 0, "calculate_bounds", "Calculate the float bounds of the parameter space."], [20, 2, 1, 0, "constraint", "Get the constraint model."], [20, 2, 1, 0, "constraint_values", "Get the constraint values registered to this TargetSpace."], [20, 2, 1, 0, "continuous_dimensions", "Get the continuous parameters."], [20, 2, 1, 0, "dim", "Get the number of parameter names."], [20, 2, 1, 0, "empty", "Check if anything has been registered."], [20, 3, 1, 0, "kernel_transform", "Transform floating-point suggestions to values used in the kernel."], [20, 2, 1, 0, "keys", "Get the keys (or parameter names)."], [20, 3, 1, 0, "make_masks", "Create a dictionary of masks for the parameters."], [20, 3, 1, 0, "make_params", "Create a dictionary of parameters from a dictionary of bounds."], [20, 2, 1, 0, "mask", "Return a boolean array of valid points."], [20, 2, 1, 0, "masks", "Get the masks for the parameters."], [20, 3, 1, 0, "max", "Get maximum target value found and corresponding parameters."], [20, 2, 1, 0, "params", "Get the parameter values registered to this TargetSpace."], [20, 2, 1, 0, "params_config", "Get the parameters configuration."], [20, 3, 1, 0, "params_to_array", "Convert a dict representation of parameters into an array version."], [20, 3, 1, 0, "probe", "Evaluate the target function on a point and register the result."], [20, 3, 1, 0, "random_sample", "Sample a random point from within the bounds of the space."], [20, 3, 1, 0, "register", "Append a point and its target value to the known data."], [20, 3, 1, 0, "res", "Get all target values and constraint fulfillment for all parameters."], [20, 3, 1, 0, "set_bounds", "Change the lower and upper search bounds."], [20, 2, 1, 0, "target", "Get the target function values registered to this TargetSpace."]], "bayes_opt.TargetSpace.__init__": [[20, 1, 2, 0, "allow_duplicate_points", "If True, the optimizer will allow duplicate points to be registered. This behavior may be desired in high noise situations where repeatedly probing the same point will give different answers."], [20, 1, 2, 0, "constraint", ""], [20, 1, 2, 0, "pbounds", "Dictionary with parameters names as keys and a tuple with minimum and maximum values."], [20, 1, 2, 0, "random_state", "optionally specify a seed for a random number generator"], [20, 1, 2, 0, "target_func", "Function to be maximized."]], "bayes_opt.TargetSpace.array_to_params": [[20, 1, 2, 0, "x", "a single point, with len(x) == self.dim."]], "bayes_opt.TargetSpace.kernel_transform": [[20, 1, 2, 0, "value", ""]], "bayes_opt.TargetSpace.make_params": [[20, 1, 2, 0, "pbounds", "A dictionary with the parameter names as keys and a tuple with minimum and maximum values."]], "bayes_opt.TargetSpace.params_to_array": [[20, 1, 2, 0, "params", "a single point, with len(x) == self.dim."]], "bayes_opt.TargetSpace.probe": [[20, 1, 2, 0, "params", "a single point, with len(x) == self.dim"]], "bayes_opt.TargetSpace.random_sample": [[20, 1, 2, 0, "n_samples", "Number of samples to draw."], [20, 1, 2, 0, "random_state", "The random state to use for sampling."]], "bayes_opt.TargetSpace.register": [[20, 1, 2, 0, "constraint_value", "Constraint function value"], [20, 1, 2, 0, "params", "a single point, with len(x) == self.dim."], [20, 1, 2, 0, "target", "target function value"]], "bayes_opt.TargetSpace.set_bounds": [[20, 1, 2, 0, "new_bounds", "A dictionary with the parameter name and its new bounds"]], "bayes_opt.acquisition": [[8, 0, 1, 0, "AcquisitionFunction", "Base class for acquisition functions."], [9, 0, 1, 0, "ConstantLiar", "Constant Liar acquisition function."], [10, 0, 1, 0, "ExpectedImprovement", "Expected Improvement acqusition function."], [11, 0, 1, 0, "GPHedge", "GPHedge acquisition function."], [12, 0, 1, 0, "ProbabilityOfImprovement", "Probability of Improvement acqusition function."], [13, 0, 1, 0, "UpperConfidenceBound", "Upper Confidence Bound acquisition function."]], "bayes_opt.acquisition.AcquisitionFunction": [[8, 3, 1, 0, "base_acq", "Provide access to the base acquisition function."], [8, 3, 1, 0, "suggest", "Suggest a promising point to probe next."]], "bayes_opt.acquisition.AcquisitionFunction.__init__": [[8, 1, 2, 0, "random_state", "Set the random state for reproducibility."]], "bayes_opt.acquisition.AcquisitionFunction.base_acq": [[8, 1, 2, 0, "args", ""], [8, 1, 2, 0, "kwargs", ""]], "bayes_opt.acquisition.AcquisitionFunction.suggest": [[8, 1, 2, 0, "fit_gp", "Whether to fit the Gaussian Process to the target space. Set to False if the GP is already fitted."], [8, 1, 2, 0, "gp", "A fitted Gaussian Process."], [8, 1, 2, 0, "n_l_bfgs_b", "Number of starting points for the L-BFGS-B optimizer."], [8, 1, 2, 0, "n_random", "Number of random samples to use."], [8, 1, 2, 0, "target_space", "The target space to probe."]], "bayes_opt.acquisition.ConstantLiar": [[9, 3, 1, 0, "base_acq", "Calculate the acquisition function."], [9, 3, 1, 0, "suggest", "Suggest a promising point to probe next."]], "bayes_opt.acquisition.ConstantLiar.__init__": [[9, 1, 2, 0, "atol", "Absolute tolerance to eliminate a dummy point."], [9, 1, 2, 0, "base_acquisition", "The acquisition function to use."], [9, 1, 2, 0, "random_state", "Set the random state for reproducibility."], [9, 1, 2, 0, "rtol", "Relative tolerance to eliminate a dummy point."], [9, 1, 2, 0, "strategy", "Strategy to use for the constant liar."]], "bayes_opt.acquisition.ConstantLiar.base_acq": [[9, 1, 2, 0, "args", ""], [9, 1, 2, 0, "kwargs", ""]], "bayes_opt.acquisition.ConstantLiar.suggest": [[9, 1, 2, 0, "fit_gp", "Whether to fit the Gaussian Process to the target space. Set to False if the GP is already fitted."], [9, 1, 2, 0, "gp", "A fitted Gaussian Process."], [9, 1, 2, 0, "n_l_bfgs_b", "Number of starting points for the L-BFGS-B optimizer."], [9, 1, 2, 0, "n_random", "Number of random samples to use."], [9, 1, 2, 0, "target_space", "The target space to probe."]], "bayes_opt.acquisition.ExpectedImprovement": [[10, 3, 1, 0, "base_acq", "Calculate the expected improvement."], [10, 3, 1, 0, "decay_exploration", "Decay xi by a constant rate."], [10, 3, 1, 0, "suggest", "Suggest a promising point to probe next."]], "bayes_opt.acquisition.ExpectedImprovement.__init__": [[10, 1, 2, 0, "exploration_decay", "Decay rate for xi."], [10, 1, 2, 0, "exploration_decay_delay", ""], [10, 1, 2, 0, "random_state", "Set the random state for reproducibility."], [10, 1, 2, 0, "xi", "Governs the exploration/exploitation tradeoff."]], "bayes_opt.acquisition.ExpectedImprovement.base_acq": [[10, 1, 2, 0, "mean", "Mean of the predictive distribution."], [10, 1, 2, 0, "std", "Standard deviation of the predictive distribution."]], "bayes_opt.acquisition.ExpectedImprovement.suggest": [[10, 1, 2, 0, "fit_gp", "Whether to fit the Gaussian Process to the target space. Set to False if the GP is already fitted."], [10, 1, 2, 0, "gp", "A fitted Gaussian Process."], [10, 1, 2, 0, "n_l_bfgs_b", "Number of starting points for the L-BFGS-B optimizer."], [10, 1, 2, 0, "n_random", "Number of random samples to use."], [10, 1, 2, 0, "target_space", "The target space to probe."]], "bayes_opt.acquisition.GPHedge": [[11, 3, 1, 0, "base_acq", "Raise an error, since the base acquisition function is ambiguous."], [11, 3, 1, 0, "suggest", "Suggest a promising point to probe next."]], "bayes_opt.acquisition.GPHedge.__init__": [[11, 1, 2, 0, "base_acquisitions", "Sequence of base acquisition functions."], [11, 1, 2, 0, "random_state", "Set the random state for reproducibility."]], "bayes_opt.acquisition.GPHedge.base_acq": [[11, 1, 2, 0, "args", ""], [11, 1, 2, 0, "kwargs", ""]], "bayes_opt.acquisition.GPHedge.suggest": [[11, 1, 2, 0, "fit_gp", "Whether to fit the Gaussian Process to the target space. Set to False if the GP is already fitted."], [11, 1, 2, 0, "gp", "A fitted Gaussian Process."], [11, 1, 2, 0, "n_l_bfgs_b", "Number of starting points for the L-BFGS-B optimizer."], [11, 1, 2, 0, "n_random", "Number of random samples to use."], [11, 1, 2, 0, "target_space", "The target space to probe."]], "bayes_opt.acquisition.ProbabilityOfImprovement": [[12, 3, 1, 0, "base_acq", "Calculate the probability of improvement."], [12, 3, 1, 0, "decay_exploration", "Decay xi by a constant rate."], [12, 3, 1, 0, "suggest", "Suggest a promising point to probe next."]], "bayes_opt.acquisition.ProbabilityOfImprovement.__init__": [[12, 1, 2, 0, "exploration_decay", "Decay rate for xi."], [12, 1, 2, 0, "exploration_decay_delay", "Delay for decay."], [12, 1, 2, 0, "random_state", "Set the random state for reproducibility."], [12, 1, 2, 0, "xi", "Governs the exploration/exploitation tradeoff."]], "bayes_opt.acquisition.ProbabilityOfImprovement.base_acq": [[12, 1, 2, 0, "mean", "Mean of the predictive distribution."], [12, 1, 2, 0, "std", "Standard deviation of the predictive distribution."]], "bayes_opt.acquisition.ProbabilityOfImprovement.suggest": [[12, 1, 2, 0, "fit_gp", "Whether to fit the Gaussian Process to the target space. Set to False if the GP is already fitted."], [12, 1, 2, 0, "gp", "A fitted Gaussian Process."], [12, 1, 2, 0, "n_l_bfgs_b", "Number of starting points for the L-BFGS-B optimizer."], [12, 1, 2, 0, "n_random", "Number of random samples to use."], [12, 1, 2, 0, "target_space", "The target space to probe."]], "bayes_opt.acquisition.UpperConfidenceBound": [[13, 3, 1, 0, "base_acq", "Calculate the upper confidence bound."], [13, 3, 1, 0, "decay_exploration", "Decay kappa by a constant rate."], [13, 3, 1, 0, "suggest", "Suggest a promising point to probe next."]], "bayes_opt.acquisition.UpperConfidenceBound.__init__": [[13, 1, 2, 0, "exploration_decay", "Decay rate for kappa."], [13, 1, 2, 0, "exploration_decay_delay", "Delay for decay."], [13, 1, 2, 0, "kappa", "Governs the exploration/exploitation tradeoff."], [13, 1, 2, 0, "random_state", "Set the random state for reproducibility."]], "bayes_opt.acquisition.UpperConfidenceBound.base_acq": [[13, 1, 2, 0, "mean", "Mean of the predictive distribution."], [13, 1, 2, 0, "std", "Standard deviation of the predictive distribution."]], "bayes_opt.acquisition.UpperConfidenceBound.suggest": [[13, 1, 2, 0, "fit_gp", "Whether to fit the Gaussian Process to the target space. Set to False if the GP is already fitted."], [13, 1, 2, 0, "gp", "A fitted Gaussian Process."], [13, 1, 2, 0, "n_l_bfgs_b", "Number of starting points for the L-BFGS-B optimizer."], [13, 1, 2, 0, "n_random", "Number of random samples to use."], [13, 1, 2, 0, "target_space", "The target space to probe."]], "bayes_opt.constraint": [[15, 0, 1, 0, "ConstraintModel", "Model constraints using GP regressors."]], "bayes_opt.constraint.ConstraintModel": [[15, 3, 1, 0, "allowed", "Check whether constraint_values fulfills the specified limits."], [15, 3, 1, 0, "approx", "Approximate the constraint function using the internal GPR model."], [15, 3, 1, 0, "eval", "Evaluate the constraint function."], [15, 3, 1, 0, "fit", "Fit internal GPRs to the data."], [15, 2, 1, 0, "lb", "Return lower bounds."], [15, 2, 1, 0, "model", "Return GP regressors of the constraint function."], [15, 3, 1, 0, "predict", "Calculate the probability that the constraint is fulfilled at X."], [15, 2, 1, 0, "ub", "Return upper bounds."]], "bayes_opt.constraint.ConstraintModel.__init__": [[15, 1, 2, 0, "fun", "The constraint function."], [15, 1, 2, 0, "lb", "The lower bound on the constraints."], [15, 1, 2, 0, "random_state", "Random state to use."], [15, 1, 2, 0, "transform", ""], [15, 1, 2, 0, "ub", "The upper bound on the constraints."]], "bayes_opt.constraint.ConstraintModel.allowed": [[15, 1, 2, 0, "constraint_values", "The values of the constraint function."]], "bayes_opt.constraint.ConstraintModel.approx": [[15, 1, 2, 0, "X", "Parameters for which to estimate the constraint function value."]], "bayes_opt.constraint.ConstraintModel.eval": [[15, 1, 2, "bayes_opt.constraint.ConstraintModel.eval", "kwargs", "Evaluate the constraint function."]], "bayes_opt.constraint.ConstraintModel.fit": [[15, 1, 2, 0, "X", "Parameters of the constraint function."], [15, 1, 2, 0, "Y", "Values of the constraint function."]], "bayes_opt.constraint.ConstraintModel.predict": [[15, 1, 2, 0, "X", "Parameters for which to predict the probability of constraint fulfilment."]], "bayes_opt.exception": [[17, 5, 1, 0, "BayesianOptimizationError", "Base class for exceptions in the Bayesian Optimization."], [17, 5, 1, 0, "ConstraintNotSupportedError", "Raised when constrained optimization is not supported."], [17, 5, 1, 0, "NoValidPointRegisteredError", "Raised when an acquisition function depends on previous points but none are registered."], [17, 5, 1, 0, "NotUniqueError", "A point is non-unique."], [17, 5, 1, 0, "TargetSpaceEmptyError", "Raised when the target space is empty."]], "bayes_opt.parameter": [[19, 0, 1, 0, "BayesParameter", "Base class for Bayesian optimization parameters."], [19, 0, 1, 0, "CategoricalParameter", "A parameter with categorical values."], [19, 0, 1, 0, "FloatParameter", "A parameter with float values."], [19, 0, 1, 0, "IntParameter", "A parameter with int values."], [19, 6, 1, 0, "is_numeric", "Check if a value is numeric."], [19, 6, 1, 0, "wrap_kernel", "Wrap a kernel to transform input data before passing it to the kernel."]], "bayes_opt.parameter.BayesParameter": [[19, 2, 1, 0, "bounds", "The bounds of the parameter in float space."], [19, 2, 1, 0, "dim", "The dimensionality of the parameter."], [19, 2, 1, 0, "is_continuous", "Whether the parameter is continuous."], [19, 3, 1, 0, "kernel_transform", "Transform a parameter value for use in a kernel."], [19, 3, 1, 0, "random_sample", "Generate random samples from the parameter."], [19, 3, 1, 0, "to_float", "Convert a parameter value to a float."], [19, 3, 1, 0, "to_param", "Convert a float value to a parameter."], [19, 3, 1, 0, "to_string", "Represent a parameter value as a string."]], "bayes_opt.parameter.BayesParameter.__init__": [[19, 1, 2, 0, "bounds", ""], [19, 1, 2, 0, "name", "The name of the parameter."]], "bayes_opt.parameter.BayesParameter.kernel_transform": [[19, 1, 2, 0, "value", "The value(s) to transform, should be a float."]], "bayes_opt.parameter.BayesParameter.random_sample": [[19, 1, 2, 0, "n_samples", "The number of samples to generate."], [19, 1, 2, 0, "random_state", "The random state to use for sampling."]], "bayes_opt.parameter.BayesParameter.to_float": [[19, 1, 2, 0, "value", "The value to convert, should be the canonical representation of the parameter."]], "bayes_opt.parameter.BayesParameter.to_param": [[19, 1, 2, 0, "value", "The value to convert, should be a float."]], "bayes_opt.parameter.BayesParameter.to_string": [[19, 1, 2, 0, "str_len", "The maximum length of the string representation."], [19, 1, 2, 0, "value", "The value to represent."]], "bayes_opt.parameter.CategoricalParameter": [[19, 2, 1, 0, "dim", "The dimensionality of the parameter."], [19, 2, 1, 0, "is_continuous", "Whether the parameter is continuous."], [19, 3, 1, 0, "kernel_transform", "Transform a parameter value for use in a kernel."], [19, 3, 1, 0, "random_sample", "Generate random float-format samples from the parameter."], [19, 3, 1, 0, "to_float", "Convert a parameter value to a float."], [19, 3, 1, 0, "to_param", "Convert a float value to a parameter."], [19, 3, 1, 0, "to_string", "Represent a parameter value as a string."]], "bayes_opt.parameter.CategoricalParameter.__init__": [[19, 1, 2, 0, "categories", "The categories of the parameter."], [19, 1, 2, 0, "name", "The name of the parameter."]], "bayes_opt.parameter.CategoricalParameter.kernel_transform": [[19, 1, 2, 0, "value", "The value(s) to transform, should be a float."]], "bayes_opt.parameter.CategoricalParameter.random_sample": [[19, 1, 2, 0, "n_samples", "The number of samples to generate."], [19, 1, 2, 0, "random_state", "The random state to use for sampling."]], "bayes_opt.parameter.CategoricalParameter.to_float": [[19, 1, 2, 0, "value", "The value to convert, should be the canonical representation of the parameter."]], "bayes_opt.parameter.CategoricalParameter.to_param": [[19, 1, 2, 0, "value", "The value to convert, should be a float."]], "bayes_opt.parameter.CategoricalParameter.to_string": [[19, 1, 2, 0, "str_len", "The maximum length of the string representation."], [19, 1, 2, 0, "value", "The value to represent."]], "bayes_opt.parameter.FloatParameter": [[19, 2, 1, 0, "dim", "The dimensionality of the parameter."], [19, 2, 1, 0, "is_continuous", "Whether the parameter is continuous."], [19, 3, 1, 0, "kernel_transform", "Transform a parameter value for use in a kernel."], [19, 3, 1, 0, "to_float", "Convert a parameter value to a float."], [19, 3, 1, 0, "to_param", "Convert a float value to a parameter."], [19, 3, 1, 0, "to_string", "Represent a parameter value as a string."]], "bayes_opt.parameter.FloatParameter.__init__": [[19, 1, 2, 0, "bounds", "The bounds of the parameter."], [19, 1, 2, 0, "name", "The name of the parameter."]], "bayes_opt.parameter.FloatParameter.kernel_transform": [[19, 1, 2, 0, "value", "The value(s) to transform, should be a float."]], "bayes_opt.parameter.FloatParameter.to_float": [[19, 1, 2, 0, "value", "The value to convert, should be the canonical representation of the parameter."]], "bayes_opt.parameter.FloatParameter.to_param": [[19, 1, 2, 0, "value", "The value to convert, should be a float."]], "bayes_opt.parameter.FloatParameter.to_string": [[19, 1, 2, 0, "str_len", "The maximum length of the string representation."], [19, 1, 2, 0, "value", "The value to represent."]], "bayes_opt.parameter.IntParameter": [[19, 2, 1, 0, "dim", "The dimensionality of the parameter."], [19, 2, 1, 0, "is_continuous", "Whether the parameter is continuous."], [19, 3, 1, 0, "kernel_transform", "Transform a parameter value for use in a kernel."], [19, 3, 1, 0, "random_sample", "Generate random samples from the parameter."], [19, 3, 1, 0, "to_float", "Convert a parameter value to a float."], [19, 3, 1, 0, "to_param", "Convert a float value to a parameter."]], "bayes_opt.parameter.IntParameter.__init__": [[19, 1, 2, 0, "bounds", "The bounds of the parameter."], [19, 1, 2, 0, "name", "The name of the parameter."]], "bayes_opt.parameter.IntParameter.kernel_transform": [[19, 1, 2, 0, "value", "The value(s) to transform, should be a float."]], "bayes_opt.parameter.IntParameter.random_sample": [[19, 1, 2, 0, "n_samples", "The number of samples to generate."], [19, 1, 2, 0, "random_state", "The random state to use for sampling."]], "bayes_opt.parameter.IntParameter.to_float": [[19, 1, 2, 0, "value", "The value to convert, should be the canonical representation of the parameter."]], "bayes_opt.parameter.IntParameter.to_param": [[19, 1, 2, 0, "value", "The value to convert, should be a float."]], "bayes_opt.parameter.is_numeric": [[19, 1, 2, 0, "value", ""]], "bayes_opt.parameter.wrap_kernel": [[19, 1, 2, 0, "kernel", "The kernel to wrap."], [19, 1, 2, 0, "transform", "The transformation function to apply to the input data."]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "parameter", "Python parameter"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "module", "Python module"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:parameter", "2": "py:property", "3": "py:method", "4": "py:module", "5": "py:exception", "6": "py:function"}, "terms": {"": [0, 1, 3, 4, 5, 6, 7, 9, 19], "0": [0, 1, 2, 3, 4, 7, 16, 20, 21], "00": 7, "000000000116973": 3, "0002287496346898": 2, "0008684793556073": 3, "005532": 2, "008": 7, "0084": 2, "0087879313090253": 3, "009985740060171": 1, "01": [0, 7, 21], "012177": 7, "015": 2, "0154397119682423": 2, "01589": 7, "016": [0, 2], "02": 7, "021": 21, "021127762033562": 3, "02272": 2, "024": 0, "025": 0, "026": 0, "02644400210430190": 6, "027": 0, "02816": 2, "0288343947238228": 2, "029": 2, "03061": 7, "033": 21, "034": 2, "03463": 19, "039": 0, "043": 2, "045": 2, "04749": 2, "05": 9, "052": 7, "053787": 7, "0583506": 7, "0587256": 7, "06": [6, 7], "06468": 7, "069": 2, "06916": 2, "07374": 2, "076": 0, "07993": 2, "08": 9, "0889271": 7, "089558": 7, "092074": 7, "093": 2, "0x23439267280": 4, "0x23439267fd0": 4, "1": [0, 4, 16, 20, 21], "10": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 21], "100": [0, 3, 20], "1000": [0, 3, 7], "10000": [0, 5, 8, 9, 10, 11, 12, 13, 21], "1009": 11, "109": 21, "10_000": [8, 9, 10, 11, 12, 13], "11": [1, 2, 3, 4, 7, 21], "1108": 6, "1166": 2, "119714": 7, "12": [1, 2, 3, 7, 21], "1206357": 7, "125728": 7, "13": [0, 1, 2, 3, 7, 21], "132": 0, "135": 2, "135455292718879": 2, "137": 7, "1392349": 7, "1396": 2, "13961016009280103": 2, "14": [1, 2, 3, 7, 21], "141769": 1, "15": [0, 1, 2, 3, 7, 21], "1501": 2, "154": [7, 21], "158": 21, "16": [0, 1, 2, 3, 5, 7, 21], "161": 7, "165955": 7, "168": 2, "1697": 7, "17": [2, 3, 7], "173": 0, "175": 2, "18": [1, 2, 7], "1805": 19, "186": 2, "1860045642089614": 2, "19": [2, 6, 7], "193": 2, "1948749": 1, "1_000": 0, "1d": 20, "1e": [0, 1, 7, 9], "2": [0, 4, 5, 13, 14, 15, 18, 20, 21], "20": [0, 2, 4, 6, 7, 21], "2002": [4, 6], "2014": [3, 6], "2017": 21, "2020": 6, "2032449": 7, "2094": 21, "21": [2, 7], "2122": 21, "213867": 7, "2146": 7, "2152": 7, "2153": 7, "2164322": 7, "218182": 7, "218693": 7, "22": 7, "2249733": 7, "229": 2, "23": 7, "230305457787476": 3, "235835023240657": 2, "2361": [0, 7], "2362": 7, "24": [2, 7], "247113": 7, "25": [7, 14], "26": 7, "2625": 7, "266": 2, "267": [0, 7], "2682240": 7, "27": [7, 21], "271": 2, "28": 7, "286": 1, "2864": 7, "29": 7, "2975037081163068": 3, "298": 7, "298167": 1, "3": [0, 3, 4, 5, 21], "30": [0, 7, 21], "301617813728339": 2, "302": 2, "31": 7, "32": 7, "321554535694256": 7, "3219469": 1, "3219469606529486": [1, 2], "322": [2, 7], "328297354179696": 1, "33": 7, "331911": 1, "331911981189704": 1, "33253689": 20, "3338": 2, "3361": 7, "339072": 7, "34": 1, "3452580": 7, "3464": 7, "35": [2, 6, 7], "352913": 7, "3585570": 7, "36": 7, "360726": 7, "37": 7, "3718": 7, "372": 7, "3725022": 7, "374": 21, "3763326769822668": 1, "377351": 7, "378": 2, "38": 7, "380": 6, "39": [1, 2, 3, 7], "4": [0, 1, 3, 4, 20, 21], "40": 7, "41": 7, "4118274": 7, "413": 7, "4178": 2, "418942": 7, "42": [0, 5, 7], "428": 7, "43": 7, "4366": 7, "44": 7, "4406489": 7, "446": 2, "45": [0, 7], "4572": 7, "46": 7, "4600371": 7, "4649": 7, "47": 7, "48": 2, "4854116": 7, "4868": 7, "4882": 7, "49": 7, "4937": 7, "4938459": 7, "4946": 7, "497": 1, "4977": 7, "498": 7, "4981209": 7, "499": 7, "4999": 7, "5": [0, 1, 2, 3, 4, 5, 9, 14, 20, 21], "50": [4, 5], "5034": 7, "5044": 2, "5063": 7, "5081": 7, "5096": 7, "5097": 7, "51": 7, "511": 0, "517960": 7, "5192": 7, "5204": 7, "521": 7, "523": 0, "5233": 7, "5235": 7, "525": 0, "5279": 7, "53": 7, "5328": 7, "533137": 7, "5355": 7, "5358": 7, "5386": 7, "54": 7, "5401": 7, "5405": 7, "5412": 7, "5418": 7, "5419": 11, "542": 7, "5426": 0, "5427": 7, "543264": 7, "5436849": 7, "5442": 7, "5443": 7, "54488318": 20, "55": 20, "559031075654336": 1, "56": 7, "560384": 7, "565": 2, "57": 7, "5721": 0, "574376": 7, "576": [13, 21], "58": 7, "582": [2, 21], "5822074982517598": 2, "6": [0, 1, 2, 3, 4, 5, 7, 20, 21], "60": 7, "61": 7, "615": 7, "6164": 2, "617": 0, "6373": 7, "6407143853831352": 7, "641": 7, "6432": 7, "6434939": 7, "64727683929071": 3, "648372": 7, "651": 2, "652553": 7, "6535": [2, 7], "6549696": 7, "6550869": 7, "66": 2, "6605": 2, "6627": 7, "663312": 7, "6644394": 7, "674": 7, "69": 7, "7": [0, 1, 2, 3, 4, 5, 7, 16, 21], "70": 7, "705": 21, "707136686093495": 1, "709177": 7, "71": 7, "7133425": 7, "7146": 2, "7342": 0, "7368226": 7, "74": 7, "740988": 7, "741717": 7, "7419056": 7, "743433": 7, "743751": 7, "7449728": 7, "746": 21, "7473": 7, "749": 7, "75": 7, "750594563473972": 1, "7529885": 7, "755390": 7, "758": 2, "775": 21, "779531005607566": 2, "78": 2, "780621": 7, "781": 1, "7821": 2, "7852": 7, "7861845912690544": 1, "7862": 1, "787692": 7, "7935035": 7, "7985": 0, "8": [0, 1, 2, 3, 4, 5, 7, 9, 21], "80": 3, "8007": 7, "801": 0, "8025": 7, "813": 2, "819": 21, "8198": 21, "82": 0, "820073": 7, "8275": 7, "827713": 7, "829779": 7, "83": 2, "8336": 7, "834": 2, "8340440094051482": 2, "8358733": 7, "8427": 2, "8458666395359906": 2, "846": 2, "853": 7, "854": 2, "857": 0, "8600832617014085": 1, "87": 7, "8731": 1, "875": 0, "88": 7, "8809": 0, "8830942": 1, "8877": 0, "8917": 2, "892371": 7, "9": [0, 1, 2, 3, 4, 5, 7, 16, 20, 21], "9021640": 1, "905925": 7, "9083667381450318": 1, "915481333972961": 1, "918642": 7, "9203": 7, "9227": 0, "9261486197444082": 1, "9266": 2, "932": 0, "934": 0, "937": 6, "9421": 2, "9434": 2, "945": 6, "9471": 2, "95": [0, 21], "953": 0, "953302": 1, "954": 0, "955": 0, "9600": [0, 21], "961": 0, "962": 0, "964": 0, "965222": 1, "966506881014352": 2, "967": 2, "9686133847781613": 1, "9709879": 7, "9734131381980626": 3, "974": 2, "975": 0, "9757": 2, "976": 2, "9763198875239296": 1, "976674": 7, "9778": 2, "979183535803597": 1, "981065": 7, "9819": 2, "986": 7, "987234": 5, "9874217": 7, "9876938": 1, "988": 2, "9885278383464513": 1, "9892216": 7, "9897298": 7, "99": [0, 7], "9912": 2, "9913127": 1, "9917667": 7, "9926": 7, "992664": 7, "9928960": 7, "9943696": 7, "9944598": 7, "9945010": 7, "995": 2, "9950290": 7, "9950794": 7, "995643": 1, "9958": 0, "997": 2, "9970839": 7, "9970984": 7, "9971028": 7, "9973": 0, "998": 21, "9980810": 7, "9986856": 7, "9987136": 7, "9988": 2, "998856": 7, "999625": 7, "999635": 7, "9996360060323246": 1, "99963711795217": 2, "9997": 2, "999771": 7, "9999891845990944": 3, "A": [3, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21], "And": 1, "As": [0, 2, 6, 7], "At": [2, 6, 11], "By": [1, 2], "For": [0, 1, 2, 3, 6, 7, 11], "If": [0, 1, 2, 6, 7, 9, 10, 12, 13, 14, 15, 16, 20], "In": [0, 1, 3, 7, 14, 15, 20, 21], "It": [2, 4, 7, 9, 21], "NOT": 1, "On": [4, 6, 16], "One": [0, 1, 7, 8, 18], "Or": 2, "That": 15, "The": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "Then": 11, "There": [2, 3, 4, 7], "These": 4, "To": [2, 3, 6, 7], "Will": 1, "_": 1, "__init__": [0, 7], "_default_cell_s": 7, "_fit_gp": [0, 7, 21], "_get_acq": [0, 21], "_gp": [0, 3, 5, 7, 14, 21], "_kei": 20, "_space": [0, 7, 21], "a_": 3, "ab": [7, 11, 19], "abc": [14, 15, 16, 20], "abl": [2, 3, 21], "about": [2, 6, 7], "abov": [1, 3], "absolut": 9, "abstract": [8, 19], "accept": 0, "access": [0, 2, 3, 8], "accommod": 7, "accordingli": 3, "account": [2, 6], "acklei": 4, "acq": [0, 1, 3, 21], "acq_i": 11, "acquisit": [1, 2, 3, 6, 7, 14, 17, 20, 21], "acquisition_funct": [0, 1, 5, 7, 14, 21], "acquisition_function_": 0, "acquisitionfunct": [0, 1, 8, 9, 11, 14], "acqusit": [10, 12], "across": 5, "action": 7, "activ": 6, "actual": [3, 4, 7], "ad": 0, "add": 7, "addit": [3, 6], "addition": [0, 3, 6, 21], "adequ": [2, 6], "adjust": [0, 10, 12, 13], "admit": 7, "admittedli": 3, "advanc": [2, 6], "advantag": 4, "after": [0, 4, 7, 11, 14], "again": 9, "aid": 6, "al": [3, 11], "albeit": [2, 6], "alert": 2, "algorithm": [1, 2, 6, 9], "align": 7, "all": [0, 1, 2, 7, 8, 14, 16, 20], "alloc": 11, "allow": [2, 3, 7, 14, 15, 20, 21], "allow_duplicate_point": [3, 14, 20], "alon": 8, "along": 3, "alpha": [0, 5, 7, 21], "alreadi": [3, 8, 9, 10, 11, 12, 13, 18], "also": [0, 2, 7, 10], "alter": 2, "altern": 1, "alwai": [0, 7, 8, 9], "ambigu": 11, "amort": 20, "an": [0, 1, 2, 3, 4, 6, 7, 11, 14, 17, 18, 20], "ani": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20], "anisotrop": 7, "anoth": [1, 3, 7], "answer": [14, 20], "anyth": [6, 20], "append": 20, "appli": [4, 10, 12, 13, 14, 19], "applicap": 0, "approach": [3, 7], "appropri": 7, "approx": [3, 15], "approxim": [3, 15], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 11, 15, 17, 20], "area": [3, 7], "area_of_triangl": 7, "arg": [8, 9, 11], "arg1": 4, "arg2": 4, "argmax": [0, 21], "argument": [0, 3, 14, 15], "around": [1, 4, 5], "arrai": [0, 3, 7, 15, 20, 21], "array_param": 7, "array_to_param": 20, "articl": 6, "arxiv": [11, 19], "assert": [0, 20], "assess": 3, "associ": [1, 2, 14, 18], "assum": [3, 15], "async_optim": 1, "asynchron": 9, "atleast_2d": [0, 7], "atol": 9, "attempt": [2, 6, 14], "author": [4, 6], "automat": [3, 10, 12, 13], "avail": 2, "avoid": 3, "awai": 0, "awar": [2, 7], "ax": [0, 3, 7], "ax2": 0, "axi": [0, 4, 7, 21], "b": [4, 7, 8, 9, 10, 11, 12, 13], "back": [1, 2], "bad": 3, "balanc": [2, 6, 21], "base": [0, 3, 4, 6, 7, 8, 9, 11, 14, 16, 17, 19], "base_acq": [0, 8, 9, 10, 11, 12, 13], "base_acquisit": [9, 11], "basic": [6, 8], "basicobserv": 1, "bayes_opt": [0, 1, 2, 3, 4, 5, 7, 18, 21], "bayesian": [3, 7, 8, 11, 14, 15, 17, 19, 21], "bayesian_optim": 18, "bayesianoptim": [0, 1, 2, 3, 4, 5, 6, 7, 18], "bayesianoptimizationerror": 17, "bayesparamet": [7, 19, 20], "bbox_to_anchor": [0, 21], "becaus": 3, "becom": [0, 2, 6], "been": [3, 7, 9, 20], "befor": [2, 3, 7, 14, 19], "begin": 0, "behav": 18, "behavior": [3, 8, 14, 20], "being": [1, 7, 21], "below": [2, 3, 6, 7], "benefici": 1, "best": [0, 1, 2, 3, 6, 21], "better": 1, "between": [2, 3, 6, 7, 21], "bewar": 2, "bfg": [8, 9, 10, 11, 12, 13], "bin": 7, "bit": 3, "black": 3, "black_box_funct": [1, 2], "black_box_function_no_constraint": 3, "black_box_function_with_constraint": 3, "blackbox": 1, "block": 6, "blocki": 7, "bo": [2, 5, 7], "bo_cont": 7, "bo_disc": 7, "bold": 21, "booktitl": 6, "bool": [0, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20], "boolean": 20, "borderaxespad": [0, 21], "both": [3, 4, 7, 20], "bottom": 3, "bound": [1, 3, 4, 6, 7, 13, 14, 15, 16, 19, 20, 21], "bound_transform": 4, "boundari": 20, "bounds_transform": [4, 14], "bounds_transformers_iter": 4, "boundsmap": 20, "box": [0, 2], "brochu": 11, "brows": 2, "bug": 6, "build": 6, "built": [0, 2, 4, 6], "c": [0, 3, 5, 6, 7, 15, 21], "c_": 3, "c_1": 3, "c_2": 3, "c_est": 3, "c_label": 3, "c_n": 3, "c_pbound": 7, "c_pred": 7, "cach": 20, "calcul": [4, 9, 10, 12, 13, 15, 20], "calculate_bound": 20, "call": [0, 1, 2, 3, 9, 10, 12, 13, 14], "callabl": [14, 15, 19, 20], "callback": 1, "can": [0, 1, 2, 3, 4, 6, 7, 8, 18, 20, 21], "candid": 11, "canon": [7, 19], "cardin": 7, "care": 7, "carri": 1, "case": [0, 1, 2, 3, 7, 15, 21], "catch_warn": 0, "categor": [6, 19], "categori": [7, 19], "categorical_optim": 7, "categoricalparamet": 19, "caveat": 2, "cdf": [10, 12], "cell": 7, "central": 6, "certain": [2, 3, 6], "cf": 7, "chang": [0, 6, 20], "charg": 1, "cheap": [0, 3], "cheaper": [2, 6], "check": [3, 6, 15, 19, 20], "checkout": [1, 2], "chemistri": 1, "choos": 21, "chosen": 2, "cite": 6, "class": [0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "clear": [1, 2], "close": [2, 3, 6, 21], "cm": [3, 7], "cmap": [3, 7], "co": [3, 4, 7], "code": 3, "codifi": 3, "collect": [7, 14, 15, 16, 20], "color": [0, 21], "com": 6, "combin": [0, 1, 2, 3, 6, 8], "come": 0, "common": [2, 6], "compar": 7, "complet": [1, 4, 14, 15, 16], "complex": 3, "comput": [0, 2, 3, 6], "concaten": [0, 21], "concurr": 1, "condit": [3, 15, 20], "confid": [0, 2, 6, 13, 21], "configur": [3, 20], "consequ": 3, "conserv": 21, "consid": [0, 3, 7, 10], "constant": [9, 10, 12, 13, 20], "constantliar": 8, "constitut": 3, "constrain": [0, 2, 6, 15, 17, 18], "constrained_layout": 3, "constraint": [0, 6, 7, 14, 15, 20], "constraint_funct": 3, "constraint_function_2_dim": 3, "constraint_limit": 3, "constraint_low": 3, "constraint_upp": 3, "constraint_valu": [14, 15, 20], "constraint_vbound": 3, "constraintmodel": [3, 14, 20], "constraintnotsupportederror": [0, 17], "construct": [2, 3, 6, 7, 21], "contain": [3, 17], "continu": [7, 19, 20], "continuous_dimens": 20, "continuous_optim": 7, "contour": 3, "contourf": [3, 7], "contract": 4, "contrast": 7, "control": [1, 2, 6, 21], "converg": 4, "convert": [19, 20], "coolwarm": [3, 7], "coordin": 20, "copi": 9, "core": 1, "correct": 6, "correspond": [2, 6, 7, 14, 20, 21], "cost": [0, 2, 4, 6], "could": [0, 1, 2, 3], "cours": 2, "cov": 0, "cover": 2, "craig": [4, 6, 16], "creat": [3, 4, 7, 14, 20], "cross": 6, "cumul": 11, "cunningham": 6, "current": [0, 21], "custom": [7, 17], "d": [0, 21], "d_pbound": 7, "d_pred": 7, "dampen": 16, "daniel": 6, "data": [7, 15, 19, 20, 21], "dataset": 7, "date": 4, "dc": 15, "deal": [1, 6, 7], "decai": [10, 12, 13], "decay_explor": [10, 12, 13], "decent": 7, "decid": 7, "deeper": 0, "def": [0, 1, 2, 3, 4, 5, 7, 20, 21], "default": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20], "default_ev": 1, "defin": [1, 3, 4, 18], "definit": 0, "degre": 7, "delai": [12, 13], "demonstr": 3, "denot": 7, "depend": [0, 1, 2, 17], "describ": [2, 3, 6], "design": [2, 6], "desir": [3, 14, 20], "despit": 7, "detail": 6, "determin": [2, 6, 8], "develop": 6, "deviat": [0, 7, 10, 12, 13], "dict": [14, 16, 20], "dictat": [0, 8], "dictionari": [2, 14, 20], "differ": [0, 1, 3, 14, 20, 21], "dim": [0, 7, 19, 20], "dimens": 20, "dimension": [3, 7, 15, 19], "directli": [0, 1, 3], "dirichlet": 7, "disallow": 3, "disclaim": 2, "discourag": [8, 9], "discret": [1, 7], "discrete_optim": 7, "discretized_funct": 7, "discuss": [2, 6], "disregard": 0, "distanc": 7, "distinct": [3, 7], "distribut": [1, 2, 6, 9, 10, 12, 13, 21], "diversifi": 2, "divid": 0, "do": [0, 1, 2, 3, 6, 7], "doc": 1, "document": 4, "doe": [0, 1, 2, 7, 15, 20], "doi": 6, "domain": [3, 6, 16], "domaintransform": [14, 16], "don": [1, 2, 15], "done": 7, "dot": 3, "draw": 20, "drawn": 20, "dtype": [4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20], "due": [3, 21], "dummi": 9, "duplic": [3, 14, 20], "dure": 2, "dynam": 6, "e": [2, 3, 4, 7, 14, 18, 21], "each": [2, 3, 6, 7, 10, 11, 12, 13, 16], "earlier": 18, "easi": 0, "easiest": 2, "easili": 7, "ec": [0, 21], "eddi": 6, "edgecolor": 3, "eduardo": 6, "ei": [0, 2, 6, 10], "eipu": 0, "either": 21, "element": 7, "elif": 7, "elimin": 9, "els": [0, 3], "elsevi": 6, "embed": 3, "emploi": [2, 3, 6], "empti": [17, 20], "encod": 7, "encourag": 0, "end": [1, 10, 12, 13], "endeavor": [2, 6], "eng": 6, "engin": 6, "enhanc": 7, "enough": [0, 2], "ensur": 7, "ensure_rng": 7, "enter": 21, "enum": 18, "enumer": 2, "equal": [0, 3, 7], "equilater": 7, "equival": 7, "errat": 1, "error": [3, 11], "estim": [0, 3, 15], "et": [3, 11], "eta": [4, 16], "etc": 1, "eval": 15, "evalu": [0, 2, 3, 8, 9, 11, 14, 15, 20], "even": [0, 1, 3, 7], "event": [1, 2, 7, 18], "everi": [2, 4], "exactli": 2, "exampl": [0, 1, 2, 3, 4, 6, 7, 15, 16, 20, 21], "except": [3, 4, 7], "execut": 1, "exemplifi": 6, "exist": [2, 18], "exp": [0, 4, 5, 21], "expect": [0, 2, 6, 7, 10, 11], "expectedimprov": [0, 5, 7, 8], "expectedimprovementperunitcost": 0, "expens": [0, 2, 3, 4, 6], "experi": [0, 1], "experiment": 7, "explicitli": 3, "exploit": [2, 6, 10, 12, 13, 21], "explor": [0, 2, 6, 10, 12, 13, 21], "exploration_decai": [0, 10, 12, 13], "exploration_decay_delai": [0, 10, 12, 13], "extend": 7, "extra": 1, "extract": 3, "f": [0, 1, 2, 3, 4, 5, 7, 14, 21], "f1": 7, "f2": 7, "f_target": 7, "fact": 7, "factor": 0, "fall": 3, "fals": [3, 7, 8, 9, 10, 11, 12, 13, 14, 18, 20], "fashion": [1, 6], "fc": [0, 21], "feasibl": 3, "featur": [2, 6, 7], "feel": 2, "fernando": 6, "few": [0, 2, 3, 6, 7, 21], "fig": [0, 3, 7, 21], "figsiz": [0, 3, 5, 7, 21], "figur": [0, 3, 5, 21], "file": [2, 6, 18], "fill": [0, 21], "fill_between": [5, 7], "filterwarn": 7, "final": 6, "find": [0, 1, 2, 3, 6, 7, 14, 15], "fire": [1, 2], "first": 2, "fit": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 21], "fit_gp": [0, 8, 9, 10, 11, 12, 13], "fix": [0, 7], "fixedperimetertriangleparamet": 7, "flatten": [0, 5, 21], "flexibl": [1, 6], "float": [4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20], "float64": 1, "floatparamet": 19, "fly": 3, "folder": [1, 2], "follow": [0, 2, 3, 6, 7, 8, 21], "fontdict": [0, 21], "fontsiz": [0, 21], "form": [3, 7], "format": [0, 1, 2, 18, 19, 21], "found": [1, 2, 3, 4, 6, 14, 20], "frac": [10, 12, 21], "free": [1, 21], "from": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 18, 19, 20, 21], "fromit": 4, "fulfil": [0, 3, 14, 15, 20], "fun": [3, 15], "function": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20], "fundament": 21, "further": [0, 7, 21], "g": [0, 7, 14, 18, 21], "gain": 11, "gamma_": 4, "gamma_osc": 16, "gamma_pan": 16, "gardner": [3, 6], "gardner2014bayesian": 6, "garrido": [6, 7], "garrido2020d": 6, "gaussian": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 21], "gaussian_process": 7, "gaussianprocessregressor": [8, 9, 10, 11, 12, 13, 15], "gener": [2, 3, 7, 14, 19, 20], "get": [0, 1, 3, 14, 20, 21], "get_legend_handles_label": 0, "gif": [2, 6], "github": 6, "give": [1, 14, 20, 21], "given": [1, 3, 7, 14, 15], "global": [2, 6], "go": [1, 3, 6, 7, 21], "gold": [0, 21], "good": [2, 3], "govern": [10, 12, 13], "gp": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15], "gphedg": 8, "gpr": 15, "gradient": [0, 7], "greedi": 0, "greedyacquisit": 0, "green": 3, "grid": [0, 3, 7, 21], "gridspec": [0, 21], "group": 8, "grow": [2, 6, 21], "gt": [3, 4], "guess": [0, 21], "guid": [1, 3, 14], "guidanc": 2, "ha": [2, 3, 4, 7, 20, 21], "handl": [1, 3, 7, 14, 18], "happen": 2, "hard": [2, 6], "hashabl": 1, "hasn": 1, "hault": 1, "have": [1, 2, 3, 4, 7, 9, 15, 21], "heavili": 4, "height_ratio": [0, 21], "help": 2, "here": [0, 1, 2, 3, 21], "hern": 6, "hern\u00e1ndez": 7, "high": [2, 6, 14, 20], "higher": [0, 10, 12, 13], "hold": 20, "hone": 3, "hood": 7, "hot": 7, "how": [0, 1, 2, 3, 4, 7, 21], "howev": [1, 2, 7], "http": [6, 11, 19], "hyper": 1, "hyperparamet": 7, "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "icml": 6, "idea": [2, 3, 6], "ident": 4, "ignor": [0, 1, 7], "illustr": 3, "implement": [0, 2, 6, 8], "impli": 3, "import": [0, 1, 2, 3, 4, 5, 6, 7, 21], "improv": [0, 1, 2, 6, 7, 10, 12], "includ": 9, "incom": 18, "increas": [1, 7], "independ": [3, 15], "individu": 15, "inequ": 6, "inf": 3, "infeas": 3, "infer": [2, 6], "inform": [2, 4, 6, 11, 14, 19, 21], "ingredi": [1, 2], "inher": 7, "init_point": [0, 1, 2, 3, 4, 7, 14, 21], "initi": [2, 4, 16, 21], "inlin": 21, "inproceed": 6, "input": [7, 19], "instanc": [1, 2, 3, 18], "instanti": [1, 2], "instead": 7, "int": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20], "int_": 15, "integ": [6, 14, 19], "intend": 14, "intent": 2, "interest": [0, 3, 4, 16, 21], "intern": [1, 2, 3, 6, 7, 14, 15], "interv": [0, 21], "interven": 0, "intparamet": [7, 19], "invari": 7, "invers": 7, "investig": 0, "invok": [1, 2], "is_constrain": [7, 18], "is_continu": [7, 19], "is_numer": 19, "isn": 3, "isotrop": 7, "issu": 6, "iter": [0, 1, 2, 4, 6, 7, 11, 14, 16, 21], "its": [0, 1, 2, 6, 7, 14, 20, 21], "j": [3, 6], "jacob": 6, "john": 6, "join": 7, "joint": 15, "journal": 6, "json": 18, "jsonlogg": [2, 18], "just": [2, 7, 21], "k": [0, 4, 7, 16, 21], "k1": 7, "k2": 7, "kappa": [1, 13, 21], "keepdim": 7, "kei": [2, 14, 15, 20], "kenneth": 6, "kernel": [7, 19, 20], "kernel_transform": [7, 19, 20], "keyword": 3, "kick": 21, "kilian": 6, "know": [2, 3, 6], "known": [2, 3, 6, 7, 14, 20, 21], "kusner": 6, "kwarg": [4, 8, 9, 11, 15], "l": [8, 9, 10, 11, 12, 13], "label": [0, 3, 4, 7, 21], "labels2": 0, "labels_bot": 3, "labels_top": 3, "ladislav": 7, "lambda": [0, 20], "languag": 1, "larger": 21, "last": [1, 3], "last_x": 0, "later": 0, "lazi": [2, 14], "lazili": 2, "lb": [3, 15], "lbl": 7, "learn": [1, 3, 6, 7], "left": [1, 10, 12, 15], "legend": [0, 4, 21], "len": [0, 2, 4, 7, 20, 21], "len_each": 7, "length": [7, 19], "length_scal": 7, "leq": [3, 15], "less": [9, 21], "let": [0, 1, 3, 4, 6, 7], "level": [0, 14, 18], "liar": 9, "lie": [2, 3], "like": [0, 1, 2, 3, 7, 9, 21], "lim": 3, "limit": [3, 15], "line": 0, "linear": 4, "lines2": 0, "linewidth": [0, 21], "linspac": [0, 3, 5, 7, 21], "list": [1, 2, 4, 14, 15, 20], "listen": [1, 2], "literatur": 1, "ljust": 7, "ll": 4, "load": 0, "load_breast_canc": 7, "load_log": 2, "lobato": [6, 7], "loc": [0, 21], "local": 21, "log": [1, 2, 18], "log10_c": 7, "log_loss": 7, "logger": [2, 7, 18], "long": 1, "longest": 7, "look": [1, 2, 3, 6, 7], "loop": 14, "loss": 7, "low": [3, 15], "lower": [3, 4, 9, 10, 12, 13, 15, 20], "lt": 4, "luksan": 7, "machin": [1, 6, 7], "magnitud": [3, 10], "mai": [1, 2, 3, 14, 20], "main": 2, "make": [6, 14], "make_mask": 20, "make_param": 20, "make_plot_f": 7, "mani": [0, 2, 8], "manual": 14, "map": [7, 14, 16, 20], "markeredgecolor": [0, 21], "markeredgewidth": [0, 21], "markerfacecolor": [0, 21], "markers": [0, 21], "mask": [3, 20], "match": [2, 15], "matern": [1, 7], "mathcal": 15, "mathemat": 3, "matplotlib": [0, 3, 4, 5, 7, 21], "matrix": 0, "matt": 6, "matter": 7, "max": [0, 1, 2, 3, 7, 9, 10, 12, 14, 20, 21], "max_": 3, "maxim": [0, 2, 3, 4, 5, 7, 14, 20, 21], "maxima": [3, 21], "maximum": [0, 2, 3, 6, 7, 9, 14, 15, 19, 20, 21], "mayb": [1, 7], "mean": [0, 2, 3, 5, 7, 9, 10, 12, 13, 14, 15], "mechan": 0, "merch": 6, "merch\u00e1n": 7, "meshgrid": [3, 7], "meta": 8, "method": [0, 1, 2, 4, 6, 7, 9, 10, 12, 13, 14], "metric": 7, "might": [0, 1, 2, 3, 7], "min": [3, 7, 9], "minim": [2, 6], "minima": 21, "minimum": [2, 3, 9, 14, 16, 20, 21], "minimum_window": [4, 16], "minut": 0, "misc": 6, "model": [3, 6, 7, 14, 15, 20], "model_select": 7, "modifi": [3, 8, 14], "modul": [8, 17], "moment": 14, "month": 6, "more": [0, 1, 2, 4, 5, 6, 11, 14, 19, 21], "most": [0, 2, 4, 5, 6, 7, 8], "msg": 0, "mu": [0, 10, 12, 13, 15, 21], "much": [1, 2, 3], "multi": 3, "multipl": [8, 9, 15, 21], "multivari": 0, "multivariate_norm": 0, "must": [0, 2, 3], "mutat": 4, "mutating_optim": 4, "my_callback": 1, "my_observ": 1, "n": [2, 3, 4, 6, 7, 15, 16], "n_constraint": [3, 15], "n_featur": 15, "n_iter": [0, 1, 2, 3, 4, 5, 7, 14, 21], "n_l_bfgs_b": [0, 8, 9, 10, 11, 12, 13], "n_plots_per_row": 3, "n_random": [0, 8, 9, 10, 11, 12, 13], "n_restarts_optim": 1, "n_sampl": [7, 15, 19, 20], "name": [3, 7, 14, 15, 19, 20], "nan": 3, "nativ": 2, "natur": [2, 3, 7], "nb": 7, "ndarrai": [8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20], "ndarrrai": 15, "ndez": 6, "nearest": 7, "necessari": 21, "need": [1, 2, 3, 4, 6, 7, 14, 15], "neurocomput": 6, "new": [2, 14, 16, 20], "new_bound": [2, 14, 20], "new_optim": 2, "next": [0, 1, 3, 6, 8, 9, 10, 11, 12, 13, 14, 21], "next_point": 1, "next_point_to_prob": 1, "nielen": 6, "nogueira": 6, "nois": [1, 14, 20], "noisi": 0, "non": [3, 4, 6, 17], "none": [0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "nonetheless": 2, "nonlinearconstraint": [3, 14], "noreturn": 11, "normal": [0, 3, 7, 10, 12], "note": [3, 5, 14, 19, 20], "notebook": [0, 2, 3, 6, 7, 8, 15, 16], "notic": [1, 21], "notuniqueerror": [17, 20], "novalidpointregisterederror": 17, "now": [1, 2, 3, 4], "np": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21], "nu": 7, "number": [2, 3, 6, 8, 9, 10, 11, 12, 13, 14, 19, 20, 21], "numer": [7, 19], "numpi": [0, 3, 4, 5, 7, 14, 21], "nut": 1, "o": 18, "object": [1, 2, 3, 4, 20], "observ": [0, 2, 3, 6, 14, 21], "obtain": [2, 21], "obviou": 4, "obvious": 2, "occasion": [3, 14, 20], "off": [10, 12, 13, 21], "often": 2, "ok": 3, "one": [0, 3, 4, 7, 8], "ones": [2, 7], "onli": [2, 3, 4, 7, 14, 21], "onto": [2, 4], "open": 6, "oper": [0, 3, 9, 16], "opt": 0, "optim": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "optimization_end": [7, 18], "optimization_start": [1, 7, 18], "optimization_step": [1, 2, 7, 18], "option": [1, 7, 14, 20], "orang": 0, "order": [0, 2, 3, 14, 15], "org": [11, 19], "origin": 3, "osc": 4, "oscil": [4, 16], "other": [0, 2, 3, 6, 7, 14, 20], "otherwis": 14, "our": [0, 1, 2, 3, 4, 7, 21], "out": [0, 1, 2, 5, 6], "output": [2, 7, 18], "over": [0, 1, 2, 6, 14], "overal": 15, "overwrit": [0, 18], "own": [1, 8], "p": [6, 7, 15], "p1": 20, "p2": 20, "p_allow": 3, "p_c": 0, "packag": [0, 3, 4, 6, 7, 21], "page": 6, "pain": 3, "pan": [4, 16], "paper": 3, "paradigm": 2, "parallel": 8, "param": [0, 1, 2, 3, 4, 5, 7, 14, 20, 21], "paramet": [0, 2, 3, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21], "params_config": 20, "params_svm": 7, "params_to_arrai": [7, 20], "particular": [0, 1, 2, 8], "particularli": [1, 2, 4, 6], "pass": [2, 19], "path": [2, 18], "pathlik": 18, "pbound": [1, 2, 3, 4, 5, 7, 14, 20], "pdf": 10, "peak": 5, "per": 0, "perform": [0, 1, 2, 4, 7], "perimet": 7, "permut": 7, "phase": 4, "phi": [10, 12], "pi": 4, "pictur": [2, 6], "place": 3, "pleas": [2, 6], "plot": [0, 3, 4, 7], "plot_bo": 5, "plot_constrained_opt": 3, "plot_gp": [0, 21], "plt": [0, 3, 4, 5, 7, 21], "poi": 12, "point": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 20], "poli": 7, "polici": 0, "poly2": 7, "poly3": 7, "portfolio": 11, "posit": [10, 12], "possibl": [2, 6], "posterior": [0, 2, 6, 21], "potenti": 7, "pr": 15, "practic": [0, 21], "predict": [0, 1, 3, 5, 7, 9, 10, 12, 13, 15, 21], "predict_proba": 7, "prefer": [3, 10, 12, 13], "present": [6, 15, 20], "pretti": [3, 7, 21], "previou": 17, "previous": [2, 6, 7, 8, 9, 20], "print": [0, 1, 2, 3, 7], "prior": 0, "probabilityofimprov": [5, 8, 10], "probabl": [0, 3, 7, 10, 12, 15], "probe": [1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 20, 21], "problem": [1, 2, 3, 4, 6, 7, 8], "proce": 3, "procedur": 21, "process": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 21], "produc": 7, "product": 15, "progress": 1, "project": 6, "promis": [8, 9, 10, 11, 12, 13, 14], "proper": [2, 6], "properti": [2, 3, 7, 14, 15, 18, 19, 20], "provid": [3, 8, 14, 16], "proxi": [2, 6], "public": 6, "publish": 6, "pure": 6, "purpl": [0, 21], "purpos": [2, 7], "push": 0, "py": 1, "pyplot": [0, 3, 4, 5, 7, 21], "python": 6, "q": 6, "quadrat": 3, "qualiti": 1, "quick": 4, "quickli": 3, "quit": [0, 4, 21], "r": [0, 3, 6, 21], "rais": [0, 3, 10, 11, 12, 15, 17, 20], "random": [0, 1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20], "random_sampl": [7, 19, 20], "random_st": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21], "randomli": 7, "randomst": [8, 9, 10, 11, 12, 13, 14, 15, 19, 20], "rang": [0, 1, 3, 4, 5, 7, 21], "rate": [10, 12, 13], "rbf": 7, "re": [0, 1, 2, 3, 7, 14, 20, 21], "read": 3, "real": 2, "realiz": 2, "reason": 3, "receiv": 0, "recent": [0, 4], "recreat": 1, "red": [3, 5], "reduc": [0, 4, 10, 12, 13, 16], "reduct": [6, 16], "refer": [2, 3, 4, 6], "reformul": 3, "region": [2, 3, 4, 6, 7, 16], "regist": [3, 9, 14, 17, 20], "regress": 1, "regressor": [3, 14, 15], "rel": [4, 9], "reli": 7, "remov": 0, "repeat": 1, "repeatedli": [3, 14, 20], "report": 20, "repres": [7, 19], "represent": [7, 19, 20], "reproduc": [8, 9, 10, 11, 12, 13], "requir": [0, 2, 4, 6, 7], "rerun": 3, "research": 6, "reset": 18, "reshap": [0, 3, 5, 7, 21], "respect": [3, 15], "restart": 18, "restrict": 21, "result": [1, 3, 7, 18, 20], "return": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "return_cov": 0, "return_std": [0, 5, 7, 21], "reward": 11, "right": [10, 12, 15], "rightarrow": 1, "ro": 7, "robust": [4, 6, 16], "round": 7, "routin": [4, 14], "row": 3, "rtol": 9, "rtype": [10, 12, 13], "rule": 7, "run": [0, 1, 3, 7, 20], "sai": 0, "same": [3, 7, 9, 14, 15, 16, 20], "sampl": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 19, 20], "samples_": 7, "satisfi": 20, "scale": [7, 16], "scatter": [3, 5, 7], "scenario": 2, "scheme": [4, 6, 16], "scikit": 1, "scipi": 3, "screenlogg": [7, 18], "script": [1, 6], "search": [4, 6, 14, 20], "searchabl": 16, "section": 6, "see": [0, 2, 3, 4, 6, 7, 8, 11, 14, 15, 16, 19], "seed": [5, 14, 20], "seem": [3, 7], "seen": [2, 4, 6, 20], "select": [0, 11, 20], "self": [0, 1, 7, 20], "sens": [2, 6], "sequenc": [11, 14, 16, 19, 20], "sequenti": [16, 21], "sequentialdomainreductiontransform": 4, "sequentialdomaintransform": 6, "serv": 2, "server": 1, "set": [0, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 21], "set_aspect": [3, 7], "set_bound": [2, 14, 20], "set_gp_param": [1, 7, 14], "set_titl": [3, 7], "set_xlabel": [0, 7, 21], "set_xlim": [0, 21], "set_xtick": 7, "set_ylabel": [0, 7, 21], "set_ylim": [0, 21], "set_ytick": 7, "setup": 3, "sever": 0, "shape": [0, 3, 7, 15, 20], "sharei": 7, "sharex": 7, "shift": 4, "shortest": 7, "should": [1, 2, 3, 6, 7, 15, 19, 21], "shouldn": 2, "show": [3, 5, 7], "showcas": 0, "shrink": [4, 16], "shrinkag": 4, "side": 7, "sigma": [0, 5, 10, 12, 13, 15, 21], "sign": 3, "significantli": 7, "silent": [2, 3], "similar": [3, 7, 10, 18], "similarli": [3, 7], "simpl": [0, 4, 6, 16], "simplefilt": 0, "simpli": [1, 3, 15], "simul": [1, 4, 6, 16], "sin": [3, 7], "sinc": [0, 1, 3, 9, 11], "singl": 20, "situat": [0, 1, 2, 3, 6, 14, 20], "size": [0, 3, 7, 16, 21], "skip": 0, "sklearn": 7, "slightli": 3, "so": [1, 2, 3, 6, 7], "softwar": 6, "sole": 0, "solut": [1, 3, 7], "solv": 3, "some": [0, 2, 3], "sometim": 7, "somewhat": 0, "sort": 7, "sortingfixedperimetertriangleparamet": 7, "sourc": 6, "space": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21], "special": 0, "specif": [0, 1, 2, 3, 7, 14], "specifi": [1, 7, 15, 20], "sped": 6, "spiral": 7, "spread": 5, "sqrt": [4, 7], "squar": 0, "squeez": 3, "standard": [0, 3, 4, 7, 10, 12, 13], "standard_optim": 4, "stander": [4, 6, 16], "start": [1, 3, 4, 8, 9, 10, 11, 12, 13, 14, 21], "state": [8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20], "statement": 0, "std": [0, 7, 10, 12, 13], "step": [0, 1, 4, 6, 8, 11, 18], "still": [2, 6, 7], "stop": 1, "store": [2, 3, 7], "str": [7, 9, 14, 16, 18, 19, 20], "str_": 7, "str_len": [7, 19], "strategi": [2, 6, 9], "string": [7, 19], "stringifi": 7, "stuck": 21, "sub": 7, "subclass": [7, 8], "subj": 3, "submodul": 2, "subplot": [0, 3, 7, 21], "subscrib": [1, 2, 7], "subscript": 1, "succes": 21, "suggest": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20], "suit": [2, 6], "suitabl": 8, "sum": 7, "super": [0, 7], "super_acq": 0, "suppli": 7, "support": [0, 17], "suppress": 7, "suptitl": [0, 21], "sure": 14, "surfac": 1, "surrog": 3, "surrogate_object": 3, "svc": 7, "svm": 7, "swapax": 3, "switch": 3, "symmetri": 7, "t": [1, 2, 3, 15], "take": [0, 1, 2, 3, 6, 14, 15], "target": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21], "target_func": 20, "target_funct": 3, "target_function_1d": 7, "target_spac": [0, 8, 9, 10, 11, 12, 13, 16], "target_vbound": 3, "targetspac": [8, 9, 10, 11, 12, 13, 14, 16], "targetspaceemptyerror": 17, "techniqu": [2, 4, 6], "tell": 1, "termin": 18, "test": 21, "test_siz": 7, "text": [3, 10, 12, 13, 15, 18], "thei": [1, 8, 20], "them": [2, 3], "therefor": [2, 4, 6], "thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 20, 21], "thing": [0, 1], "think": [1, 2], "third": 7, "thompson": 0, "thompsonsampl": 0, "three": [4, 7], "through": 0, "ththe": 7, "thu": 3, "tight_layout": 7, "tild": 15, "time": [1, 2, 3, 4, 20], "tip": [2, 6], "titl": [3, 4, 6], "to_float": [7, 19], "to_param": [7, 19], "to_str": [7, 19], "toler": 9, "too": [0, 21], "tool": [2, 6], "top": 3, "tour": 6, "trade": [10, 12, 13, 21], "tradeoff": [10, 12, 13], "train_test_split": 7, "transform": [4, 7, 14, 15, 16, 19, 20], "tri": [3, 7], "triangl": 7, "true": [0, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 18, 20, 21], "try": [3, 7, 15, 21], "tune": [2, 6], "tupl": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20], "twinx": 0, "two": [3, 4, 7], "ty": 2, "type": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20], "typeerror": 15, "typic": [3, 4, 7, 16], "u": [0, 6, 21], "ub": 15, "ucb": [2, 6, 13, 21], "uncertainti": [1, 21], "under": [6, 7], "understand": [1, 6, 8], "unev": 21, "unfeas": 3, "uniformli": 7, "uniqu": [17, 20], "unit": 0, "unitari": 16, "unknown": [2, 6, 21], "unnecessari": 3, "unpack": 3, "unseed": 14, "until": 3, "up": [0, 3, 4, 6, 15], "updat": [1, 3, 4, 11, 18], "upon": [2, 6], "upper": [2, 4, 6, 13, 15, 20, 21], "upperconfidencebound": [1, 5, 8, 21], "url": 6, "us": [0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21], "usag": [2, 6], "use": 2, "usecas": 7, "user": [2, 7, 21], "usual": [0, 3], "util": [0, 2, 7, 21], "utility_funct": 21, "valid": [6, 7, 20], "valu": [0, 1, 2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20], "valueerror": [10, 12], "variabl": [4, 6, 21], "varianc": [9, 15], "variou": 0, "vector": 20, "verbos": [1, 2, 3, 4, 5, 7, 14, 18], "veri": [0, 1, 2, 6], "version": [0, 7, 20], "via": [2, 3, 7], "violat": 3, "visual": [3, 6], "vmax": [3, 7], "vmin": [3, 7], "volum": 6, "wa": [1, 21], "wai": [2, 3, 7, 8], "want": [1, 2, 3, 6, 7], "warn": [0, 7], "we": [0, 1, 2, 3, 4, 6, 7, 15, 21], "weinberg": 6, "well": [3, 7, 14, 15], "were": 3, "what": [0, 1, 2, 3, 6], "whatev": 1, "when": [1, 2, 3, 4, 6, 7, 14, 17], "whenev": [1, 3, 7], "where": [0, 1, 2, 3, 4, 6, 7, 10, 12, 14, 20], "wheter": 15, "whether": [3, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19], "which": [0, 2, 3, 4, 6, 7, 14, 15, 21], "while": [0, 1, 2, 7], "white": 3, "whole": 5, "why": [1, 7], "window": 16, "wish": 2, "within": [7, 20], "without": [2, 7], "word": 3, "work": [0, 1, 2, 3, 7, 16, 21], "worker": 9, "wors": 3, "worst": 3, "worth": [2, 6], "would": [0, 3, 7], "wrap": 19, "wrap_kernel": 19, "wrapper": 1, "write": [0, 3, 18], "written": 1, "x": [0, 1, 2, 3, 4, 5, 7, 10, 12, 13, 15, 20, 21], "x1": 7, "x2": 7, "x_": 3, "x_i": [3, 7], "x_max_bound": 4, "x_min_bound": 4, "x_ob": [0, 21], "x_reduc": 0, "x_train": 7, "x_train_": 0, "x_val": 7, "xi": [0, 7, 10, 12], "xu": 6, "xy": 3, "y": [0, 1, 2, 3, 4, 7, 15, 20, 21], "y_": [3, 10, 12], "y_cov": 0, "y_j": [3, 7], "y_max": [10, 12], "y_mean": [0, 7], "y_ob": [0, 21], "y_sampl": 0, "y_sample_argmax": 0, "y_std": 7, "y_train": 7, "y_val": 7, "year": 6, "yet": [8, 9], "yield": [14, 15], "you": [0, 1, 2, 3, 6, 7, 8, 14], "your": [0, 1, 2, 3, 6, 8], "yourself": 3, "z": [3, 7], "z1": 7, "z2": 7, "z_est": 3, "z_mask": 3, "zhixiang": 6, "zip": 7, "zoom": [4, 16], "zorder": 5}, "titles": ["Acquisition functions", "Advanced tour of the Bayesian Optimization package", "Basic tour of the Bayesian Optimization package", "Constrained Optimization", "Sequential Domain Reduction", "Exploitation vs Exploration", "Bayesian Optimization", "Optimizing over non-float Parameters", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bayes_opt.acquisition</span></code>", "<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bayes_opt.acquisition.ConstantLiar</span></code>", "<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bayes_opt.acquisition.ExpectedImprovement</span></code>", "<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bayes_opt.acquisition.GPHedge</span></code>", "<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bayes_opt.acquisition.ProbabilityOfImprovement</span></code>", "<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bayes_opt.acquisition.UpperConfidenceBound</span></code>", "<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bayes_opt.BayesianOptimization</span></code>", "<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bayes_opt.ConstraintModel</span></code>", "<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bayes_opt.SequentialDomainReductionTransformer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bayes_opt.exception</span></code>", "Other", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bayes_opt.parameter</span></code>", "<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bayes_opt.TargetSpace</span></code>", "Visualization"], "titleterms": {"": 21, "0": 5, "1": [1, 2, 3, 5, 7], "10": 5, "1e": 5, "2": [1, 2, 3, 7], "3": [1, 2, 7], "4": [2, 5, 7], "5": 7, "The": 1, "acquisit": [0, 5, 8, 9, 10, 11, 12, 13], "advanc": [1, 3], "after": 21, "algorithm": 21, "alpha": 1, "background": 4, "basic": [2, 4], "bayes_opt": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20], "bayesian": [1, 2, 6], "bayesianoptim": [14, 21], "bound": [2, 5], "categor": 7, "chang": [1, 2], "citat": 6, "conda": 6, "confid": 5, "constantliar": 9, "constrain": 3, "constraint": 3, "constraintmodel": 15, "continu": 1, "coupl": 21, "creat": 21, "defin": [7, 21], "doe": 6, "domain": 4, "each": 21, "easier": 21, "evalu": 1, "except": 17, "expect": 5, "expectedimprov": 10, "exploit": 5, "explor": 5, "first": 21, "five": 21, "float": 7, "forg": 6, "four": 21, "function": [0, 2, 5, 7, 21], "gaussian": 1, "get": 2, "gp": [1, 21], "gphedg": 11, "guid": 2, "how": 6, "improv": 5, "index": 6, "instal": 6, "integ": 7, "kappa": 5, "kernel": 1, "let": 21, "load": 2, "loop": 1, "make": 21, "maxim": 1, "mix": 7, "ml": 7, "multipl": 3, "next": 2, "non": 7, "note": [10, 12, 13, 15], "object": 21, "observ": 1, "one": 21, "optim": [1, 2, 3, 6, 7], "other": 18, "over": 7, "own": 7, "packag": [1, 2], "paradigm": 1, "paramet": [1, 4, 7, 19], "pass": 1, "pip": 6, "plot": [5, 21], "point": 21, "prefer": 5, "probabilityofimprov": 12, "probabl": 5, "process": 1, "progress": 2, "pypi": 6, "quick": 6, "random": 21, "reduct": 4, "regist": 1, "restart": 2, "save": 2, "sequenti": 4, "sequentialdomainreductiontransform": 16, "seven": 21, "simpl": [3, 7], "simul": 3, "singl": 3, "six": 21, "specifi": 2, "start": 2, "step": [2, 21], "stop": 21, "suggest": 1, "target": 5, "targetspac": 20, "three": 21, "tour": [1, 2], "tune": 1, "two": 21, "underli": 1, "upper": 5, "upperconfidencebound": 13, "us": 7, "util": 5, "v": 5, "valu": 7, "variabl": 7, "via": 6, "visual": 21, "warn": 14, "work": 6, "xi": 5, "your": 7}})