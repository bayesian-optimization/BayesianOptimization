Search.setIndex({"alltitles": {"1. Simple Constrained Optimization": [[3, "1.-Simple-Constrained-Optimization"]], "1. Specifying the function to be optimized": [[2, "1.-Specifying-the-function-to-be-optimized"]], "1. Suggest-Evaluate-Register Paradigm": [[1, "1.-Suggest-Evaluate-Register-Paradigm"]], "1.1 The maximize loop": [[1, "1.1-The-maximize-loop"]], "2. Advanced Constrained Optimization": [[3, "2.-Advanced-Constrained-Optimization"]], "2. Dealing with discrete parameters": [[1, "2.-Dealing-with-discrete-parameters"]], "2. Getting Started": [[2, "2.-Getting-Started"]], "2.1 Changing bounds": [[2, "2.1-Changing-bounds"]], "2.1 Simple, single constraint": [[3, "2.1-Simple,-single-constraint"]], "2.2 Multiple Constraints": [[3, "2.2-Multiple-Constraints"]], "3. Guiding the optimization": [[2, "3.-Guiding-the-optimization"]], "3. Tuning the underlying Gaussian Process": [[1, "3.-Tuning-the-underlying-Gaussian-Process"]], "3.1 Passing parameter to the GP": [[1, "3.1-Passing-parameter-to-the-GP"]], "3.2 Tuning the alpha parameter": [[1, "3.2-Tuning-the-alpha-parameter"]], "3.3 Changing kernels": [[1, "3.3-Changing-kernels"]], "4. Saving, loading and restarting": [[2, "4.-Saving,-loading-and-restarting"]], "4.1 Saving progress": [[2, "4.1-Saving-progress"]], "4.2 Loading progress": [[2, "4.2-Loading-progress"]], "Acquisition Function \u201cExpected Improvement\u201d": [[5, "Acquisition-Function-%22Expected-Improvement%22"]], "Acquisition Function \u201cProbability of Improvement\u201d": [[5, "Acquisition-Function-%22Probability-of-Improvement%22"]], "Acquisition Function \u201cUpper Confidence Bound\u201d": [[5, "Acquisition-Function-%22Upper-Confidence-Bound%22"]], "Acquisition functions": [[0, null]], "Advanced tour of the Bayesian Optimization package": [[1, null]], "After five steps of GP (and two random points)": [[18, "After-five-steps-of-GP-(and-two-random-points)"]], "After four steps of GP (and two random points)": [[18, "After-four-steps-of-GP-(and-two-random-points)"]], "After one step of GP (and two random points)": [[18, "After-one-step-of-GP-(and-two-random-points)"]], "After seven steps of GP (and two random points)": [[18, "After-seven-steps-of-GP-(and-two-random-points)"]], "After six steps of GP (and two random points)": [[18, "After-six-steps-of-GP-(and-two-random-points)"]], "After three steps of GP (and two random points)": [[18, "After-three-steps-of-GP-(and-two-random-points)"]], "After two steps of GP (and two random points)": [[18, "After-two-steps-of-GP-(and-two-random-points)"]], "Background": [[4, "Background"]], "Basic tour of the Bayesian Optimization package": [[2, null]], "Basics": [[4, "Basics"]], "Bayesian Optimization": [[6, null]], "Citation": [[6, "citation"]], "Conda (via conda-forge)": [[6, "conda-via-conda-forge"]], "Constrained Optimization": [[3, null]], "Create a BayesianOptimization Object": [[18, "Create-a-BayesianOptimization-Object"]], "Exploitation vs Exploration": [[5, null]], "How does it work?": [[6, "how-does-it-work"]], "Installation": [[6, "installation"]], "Let\u2019s first define a couple functions to make plotting easier": [[18, "Let's-first-define-a-couple-functions-to-make-plotting-easier"]], "Next Steps": [[2, "Next-Steps"]], "Note": [[9, null], [11, null], [12, null], [14, null], [14, null]], "Observers Continued": [[1, "Observers-Continued"]], "Other": [[16, null]], "Parameters": [[4, "Parameters"]], "Plotting and visualizing the algorithm at each step": [[18, "Plotting-and-visualizing-the-algorithm-at-each-step"]], "Prefer exploitation (kappa=0.1)": [[5, "Prefer-exploitation-(kappa=0.1)"]], "Prefer exploitation (xi=0.0)": [[5, "Prefer-exploitation-(xi=0.0)"]], "Prefer exploitation (xi=1e-4)": [[5, "Prefer-exploitation-(xi=1e-4)"]], "Prefer exploration (kappa=10)": [[5, "Prefer-exploration-(kappa=10)"]], "Prefer exploration (xi=0.1)": [[5, "Prefer-exploration-(xi=0.1)"], [5, "id1"]], "Quick Index": [[6, "quick-index"]], "Sequential Domain Reduction": [[4, null]], "Simulation 2": [[3, "Simulation-2"]], "Stopping": [[18, "Stopping"]], "Target function": [[5, "Target-function"]], "Two random points": [[18, "Two-random-points"]], "Utility function for plotting": [[5, "Utility-function-for-plotting"]], "Visualization": [[18, null]], "Warning": [[13, null]], "bayes_opt.BayesianOptimization": [[13, null]], "bayes_opt.ConstraintModel": [[14, null]], "bayes_opt.SequentialDomainReductionTransformer": [[15, null]], "bayes_opt.TargetSpace": [[17, null]], "bayes_opt.acquisition": [[7, null]], "bayes_opt.acquisition.ConstantLiar": [[8, null]], "bayes_opt.acquisition.ExpectedImprovement": [[9, null]], "bayes_opt.acquisition.GPHedge": [[10, null]], "bayes_opt.acquisition.ProbabilityOfImprovement": [[11, null]], "bayes_opt.acquisition.UpperConfidenceBound": [[12, null]], "pip (via PyPI)": [[6, "pip-via-pypi"]]}, "docurls": ["acquisition_functions.html", "advanced-tour.html", "basic-tour.html", "constraints.html", "domain_reduction.html", "exploitation_vs_exploration.html", "index.html", "reference/acquisition.html", "reference/acquisition/ConstantLiar.html", "reference/acquisition/ExpectedImprovement.html", "reference/acquisition/GPHedge.html", "reference/acquisition/ProbabilityOfImprovement.html", "reference/acquisition/UpperConfidenceBound.html", "reference/bayes_opt.html", "reference/constraint.html", "reference/domain_reduction.html", "reference/other.html", "reference/target_space.html", "visualization.html"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "indexentries": {"acquisition_function (bayes_opt.bayesianoptimization property)": [[13, "bayes_opt.BayesianOptimization.acquisition_function", false]], "acquisitionfunction (class in bayes_opt.acquisition)": [[7, "bayes_opt.acquisition.AcquisitionFunction", false]], "allowed() (bayes_opt.constraint.constraintmodel method)": [[14, "bayes_opt.constraint.ConstraintModel.allowed", false]], "approx() (bayes_opt.constraint.constraintmodel method)": [[14, "bayes_opt.constraint.ConstraintModel.approx", false]], "array_to_params() (bayes_opt.targetspace method)": [[17, "bayes_opt.TargetSpace.array_to_params", false]], "base_acq() (bayes_opt.acquisition.acquisitionfunction method)": [[7, "bayes_opt.acquisition.AcquisitionFunction.base_acq", false]], "base_acq() (bayes_opt.acquisition.constantliar method)": [[8, "bayes_opt.acquisition.ConstantLiar.base_acq", false]], "base_acq() (bayes_opt.acquisition.expectedimprovement method)": [[9, "bayes_opt.acquisition.ExpectedImprovement.base_acq", false]], "base_acq() (bayes_opt.acquisition.gphedge method)": [[10, "bayes_opt.acquisition.GPHedge.base_acq", false]], "base_acq() (bayes_opt.acquisition.probabilityofimprovement method)": [[11, "bayes_opt.acquisition.ProbabilityOfImprovement.base_acq", false]], "base_acq() (bayes_opt.acquisition.upperconfidencebound method)": [[12, "bayes_opt.acquisition.UpperConfidenceBound.base_acq", false]], "bayes_opt.acquisition": [[7, "module-bayes_opt.acquisition", false]], "bayesianoptimization (class in bayes_opt)": [[13, "bayes_opt.BayesianOptimization", false]], "bounds (bayes_opt.targetspace property)": [[17, "bayes_opt.TargetSpace.bounds", false]], "constantliar (class in bayes_opt.acquisition)": [[8, "bayes_opt.acquisition.ConstantLiar", false]], "constraint (bayes_opt.bayesianoptimization property)": [[13, "bayes_opt.BayesianOptimization.constraint", false]], "constraint (bayes_opt.targetspace property)": [[17, "bayes_opt.TargetSpace.constraint", false]], "constraint_values (bayes_opt.targetspace property)": [[17, "bayes_opt.TargetSpace.constraint_values", false]], "constraintmodel (class in bayes_opt.constraint)": [[14, "bayes_opt.constraint.ConstraintModel", false]], "decay_exploration() (bayes_opt.acquisition.expectedimprovement method)": [[9, "bayes_opt.acquisition.ExpectedImprovement.decay_exploration", false]], "decay_exploration() (bayes_opt.acquisition.probabilityofimprovement method)": [[11, "bayes_opt.acquisition.ProbabilityOfImprovement.decay_exploration", false]], "decay_exploration() (bayes_opt.acquisition.upperconfidencebound method)": [[12, "bayes_opt.acquisition.UpperConfidenceBound.decay_exploration", false]], "dim (bayes_opt.targetspace property)": [[17, "bayes_opt.TargetSpace.dim", false]], "empty (bayes_opt.targetspace property)": [[17, "bayes_opt.TargetSpace.empty", false]], "eval() (bayes_opt.constraint.constraintmodel method)": [[14, "bayes_opt.constraint.ConstraintModel.eval", false]], "events (class in bayes_opt)": [[16, "bayes_opt.Events", false]], "expectedimprovement (class in bayes_opt.acquisition)": [[9, "bayes_opt.acquisition.ExpectedImprovement", false]], "fit() (bayes_opt.constraint.constraintmodel method)": [[14, "bayes_opt.constraint.ConstraintModel.fit", false]], "gphedge (class in bayes_opt.acquisition)": [[10, "bayes_opt.acquisition.GPHedge", false]], "initialize() (bayes_opt.sequentialdomainreductiontransformer method)": [[15, "bayes_opt.SequentialDomainReductionTransformer.initialize", false]], "is_constrained (bayes_opt.screenlogger property)": [[16, "bayes_opt.ScreenLogger.is_constrained", false]], "jsonlogger (class in bayes_opt)": [[16, "bayes_opt.JSONLogger", false]], "keys (bayes_opt.targetspace property)": [[17, "bayes_opt.TargetSpace.keys", false]], "lb (bayes_opt.constraint.constraintmodel property)": [[14, "bayes_opt.constraint.ConstraintModel.lb", false]], "mask (bayes_opt.targetspace property)": [[17, "bayes_opt.TargetSpace.mask", false]], "max (bayes_opt.bayesianoptimization property)": [[13, "bayes_opt.BayesianOptimization.max", false]], "max() (bayes_opt.targetspace method)": [[17, "bayes_opt.TargetSpace.max", false]], "maximize() (bayes_opt.bayesianoptimization method)": [[13, "bayes_opt.BayesianOptimization.maximize", false]], "model (bayes_opt.constraint.constraintmodel property)": [[14, "bayes_opt.constraint.ConstraintModel.model", false]], "module": [[7, "module-bayes_opt.acquisition", false]], "params (bayes_opt.targetspace property)": [[17, "bayes_opt.TargetSpace.params", false]], "params_to_array() (bayes_opt.targetspace method)": [[17, "bayes_opt.TargetSpace.params_to_array", false]], "predict() (bayes_opt.constraint.constraintmodel method)": [[14, "bayes_opt.constraint.ConstraintModel.predict", false]], "probabilityofimprovement (class in bayes_opt.acquisition)": [[11, "bayes_opt.acquisition.ProbabilityOfImprovement", false]], "probe() (bayes_opt.bayesianoptimization method)": [[13, "bayes_opt.BayesianOptimization.probe", false]], "probe() (bayes_opt.targetspace method)": [[17, "bayes_opt.TargetSpace.probe", false]], "random_sample() (bayes_opt.targetspace method)": [[17, "bayes_opt.TargetSpace.random_sample", false]], "register() (bayes_opt.bayesianoptimization method)": [[13, "bayes_opt.BayesianOptimization.register", false]], "register() (bayes_opt.targetspace method)": [[17, "bayes_opt.TargetSpace.register", false]], "res (bayes_opt.bayesianoptimization property)": [[13, "bayes_opt.BayesianOptimization.res", false]], "res() (bayes_opt.targetspace method)": [[17, "bayes_opt.TargetSpace.res", false]], "screenlogger (class in bayes_opt)": [[16, "bayes_opt.ScreenLogger", false]], "sequentialdomainreductiontransformer (class in bayes_opt)": [[15, "bayes_opt.SequentialDomainReductionTransformer", false]], "set_bounds() (bayes_opt.bayesianoptimization method)": [[13, "bayes_opt.BayesianOptimization.set_bounds", false]], "set_bounds() (bayes_opt.targetspace method)": [[17, "bayes_opt.TargetSpace.set_bounds", false]], "set_gp_params() (bayes_opt.bayesianoptimization method)": [[13, "bayes_opt.BayesianOptimization.set_gp_params", false]], "space (bayes_opt.bayesianoptimization property)": [[13, "bayes_opt.BayesianOptimization.space", false]], "suggest() (bayes_opt.acquisition.acquisitionfunction method)": [[7, "bayes_opt.acquisition.AcquisitionFunction.suggest", false]], "suggest() (bayes_opt.acquisition.constantliar method)": [[8, "bayes_opt.acquisition.ConstantLiar.suggest", false]], "suggest() (bayes_opt.acquisition.expectedimprovement method)": [[9, "bayes_opt.acquisition.ExpectedImprovement.suggest", false]], "suggest() (bayes_opt.acquisition.gphedge method)": [[10, "bayes_opt.acquisition.GPHedge.suggest", false]], "suggest() (bayes_opt.acquisition.probabilityofimprovement method)": [[11, "bayes_opt.acquisition.ProbabilityOfImprovement.suggest", false]], "suggest() (bayes_opt.acquisition.upperconfidencebound method)": [[12, "bayes_opt.acquisition.UpperConfidenceBound.suggest", false]], "suggest() (bayes_opt.bayesianoptimization method)": [[13, "bayes_opt.BayesianOptimization.suggest", false]], "target (bayes_opt.targetspace property)": [[17, "bayes_opt.TargetSpace.target", false]], "targetspace (class in bayes_opt)": [[17, "bayes_opt.TargetSpace", false]], "transform() (bayes_opt.sequentialdomainreductiontransformer method)": [[15, "bayes_opt.SequentialDomainReductionTransformer.transform", false]], "ub (bayes_opt.constraint.constraintmodel property)": [[14, "bayes_opt.constraint.ConstraintModel.ub", false]], "update() (bayes_opt.jsonlogger method)": [[16, "bayes_opt.JSONLogger.update", false]], "update() (bayes_opt.screenlogger method)": [[16, "bayes_opt.ScreenLogger.update", false]], "upperconfidencebound (class in bayes_opt.acquisition)": [[12, "bayes_opt.acquisition.UpperConfidenceBound", false]], "verbose (bayes_opt.screenlogger property)": [[16, "bayes_opt.ScreenLogger.verbose", false]]}, "objects": {"bayes_opt": [[13, 0, 1, 0, "BayesianOptimization", "Handle optimization of a target function over a specific target space."], [16, 0, 1, 0, "Events", "Define optimization events."], [16, 0, 1, 0, "JSONLogger", "Logger that outputs steps in JSON format."], [16, 0, 1, 0, "ScreenLogger", "Logger that outputs text, e.g. to log to a terminal."], [15, 0, 1, 0, "SequentialDomainReductionTransformer", "Reduce the searchable space."], [17, 0, 1, 0, "TargetSpace", "Holds the param-space coordinates (X) and target values (Y)."], [7, 4, 0, 1, "acquisition", ""]], "bayes_opt.BayesianOptimization": [[13, 2, 1, 0, "acquisition_function", "Return the acquisition function associated with the optimizer."], [13, 2, 1, 0, "constraint", "Return the constraint associated with the optimizer, if any."], [13, 2, 1, 0, "max", "Get maximum target value found and corresponding parameters."], [13, 3, 1, 0, "maximize", "Maximize the given function over the target space."], [13, 3, 1, 0, "probe", "Evaluate the function at the given points."], [13, 3, 1, 0, "register", "Register an observation with known target."], [13, 2, 1, 0, "res", "Get all target values and constraint fulfillment for all parameters."], [13, 3, 1, 0, "set_bounds", "Modify the bounds of the search space."], [13, 3, 1, 0, "set_gp_params", "Set parameters of the internal Gaussian Process Regressor."], [13, 2, 1, 0, "space", "Return the target space associated with the optimizer."], [13, 3, 1, 0, "suggest", "Suggest a promising point to probe next."]], "bayes_opt.BayesianOptimization.__init__": [[13, 1, 2, "bayes_opt.BayesianOptimization", "acquisition_function", "Handle optimization of a target function over a specific target space."], [13, 1, 2, 0, "allow_duplicate_points", "If True, the optimizer will allow duplicate points to be registered. This behavior may be desired in high noise situations where repeatedly probing the same point will give different answers."], [13, 1, 2, 0, "bounds_transformer", "If provided, the transformation is applied to the bounds."], [13, 1, 2, 0, "constraint", "Note that the names of arguments of the constraint function and of f need to be the same."], [13, 1, 2, 0, "f", "Function to be maximized."], [13, 1, 2, 0, "pbounds", "Dictionary with parameters names as keys and a tuple with minimum and maximum values."], [13, 1, 2, 0, "random_state", "If the value is an integer, it is used as the seed for creating a numpy.random.RandomState."], [13, 1, 2, 0, "verbose", "The level of verbosity."]], "bayes_opt.BayesianOptimization.maximize": [[13, 1, 2, 0, "init_points", "Number of random points to probe before starting the optimization."], [13, 1, 2, 0, "n_iter", "Number of iterations where the method attempts to find the maximum value."]], "bayes_opt.BayesianOptimization.probe": [[13, 1, 2, 0, "lazy", "If True, the optimizer will evaluate the points when calling maximize()."], [13, 1, 2, 0, "params", "The parameters where the optimizer will evaluate the function."]], "bayes_opt.BayesianOptimization.register": [[13, 1, 2, 0, "constraint_value", "Value of the constraint function at the observation, if any."], [13, 1, 2, 0, "params", "The parameters associated with the observation."], [13, 1, 2, 0, "target", "Value of the target function at the observation."]], "bayes_opt.BayesianOptimization.set_bounds": [[13, 1, 2, 0, "new_bounds", "A dictionary with the parameter name and its new bounds"]], "bayes_opt.BayesianOptimization.set_gp_params": [[13, 1, 2, "bayes_opt.BayesianOptimization.set_gp_params", "params", "Set parameters of the internal Gaussian Process Regressor."]], "bayes_opt.JSONLogger": [[16, 3, 1, 0, "update", "Handle incoming events."]], "bayes_opt.JSONLogger.__init__": [[16, 1, 2, 0, "path", "Path to the file to write to."], [16, 1, 2, 0, "reset", "Whether to overwrite the file if it already exists."]], "bayes_opt.JSONLogger.update": [[16, 1, 2, 0, "event", "One of the values associated with Events.OPTIMIZATION_START, Events.OPTIMIZATION_STEP or Events.OPTIMIZATION_END."], [16, 1, 2, 0, "instance", "The instance associated with the step."]], "bayes_opt.ScreenLogger": [[16, 2, 1, 0, "is_constrained", "Return whether the logger is constrained."], [16, 3, 1, 0, "update", "Handle incoming events."], [16, 2, 1, 0, "verbose", "Return the verbosity level."]], "bayes_opt.ScreenLogger.__init__": [[16, 1, 2, 0, "is_constrained", "Whether the logger is associated with a constrained optimization instance."], [16, 1, 2, 0, "verbose", "Verbosity level of the logger."]], "bayes_opt.ScreenLogger.update": [[16, 1, 2, 0, "event", "One of the values associated with Events.OPTIMIZATION_START, Events.OPTIMIZATION_STEP or Events.OPTIMIZATION_END."], [16, 1, 2, 0, "instance", "The instance associated with the step."]], "bayes_opt.SequentialDomainReductionTransformer": [[15, 3, 1, 0, "initialize", "Initialize all of the parameters."], [15, 3, 1, 0, "transform", "Transform the bounds of the target space."]], "bayes_opt.SequentialDomainReductionTransformer.__init__": [[15, 1, 2, 0, "eta", "Zooming parameter used to shrink the region of interest."], [15, 1, 2, 0, "gamma_osc", "Parameter used to scale (typically dampen) oscillations."], [15, 1, 2, 0, "gamma_pan", "Parameter used to scale (typically unitary) panning."], [15, 1, 2, 0, "minimum_window", "Minimum window size for each parameter."]], "bayes_opt.SequentialDomainReductionTransformer.initialize": [[15, 1, 2, 0, "target_space", "TargetSpace this DomainTransformer operates on."]], "bayes_opt.SequentialDomainReductionTransformer.transform": [[15, 1, 2, 0, "target_space", "TargetSpace this DomainTransformer operates on."]], "bayes_opt.TargetSpace": [[17, 3, 1, 0, "array_to_params", "Convert an array representation of parameters into a dict version."], [17, 2, 1, 0, "bounds", "Get the bounds of this TargetSpace."], [17, 2, 1, 0, "constraint", "Get the constraint model."], [17, 2, 1, 0, "constraint_values", "Get the constraint values registered to this TargetSpace."], [17, 2, 1, 0, "dim", "Get the number of parameter names."], [17, 2, 1, 0, "empty", "Check if anything has been registered."], [17, 2, 1, 0, "keys", "Get the keys (or parameter names)."], [17, 2, 1, 0, "mask", "Return a boolean array of valid points."], [17, 3, 1, 0, "max", "Get maximum target value found and corresponding parameters."], [17, 2, 1, 0, "params", "Get the parameter values registered to this TargetSpace."], [17, 3, 1, 0, "params_to_array", "Convert a dict representation of parameters into an array version."], [17, 3, 1, 0, "probe", "Evaluate the target function on a point and register the result."], [17, 3, 1, 0, "random_sample", "Sample a random point from within the bounds of the space."], [17, 3, 1, 0, "register", "Append a point and its target value to the known data."], [17, 3, 1, 0, "res", "Get all target values and constraint fulfillment for all parameters."], [17, 3, 1, 0, "set_bounds", "Change the lower and upper search bounds."], [17, 2, 1, 0, "target", "Get the target function values registered to this TargetSpace."]], "bayes_opt.TargetSpace.__init__": [[17, 1, 2, 0, "allow_duplicate_points", "If True, the optimizer will allow duplicate points to be registered. This behavior may be desired in high noise situations where repeatedly probing the same point will give different answers."], [17, 1, 2, "bayes_opt.TargetSpace", "constraint", "Holds the param-space coordinates (X) and target values (Y)."], [17, 1, 2, 0, "pbounds", "Dictionary with parameters names as keys and a tuple with minimum and maximum values."], [17, 1, 2, 0, "random_state", "optionally specify a seed for a random number generator"], [17, 1, 2, 0, "target_func", "Function to be maximized."]], "bayes_opt.TargetSpace.array_to_params": [[17, 1, 2, 0, "x", "a single point, with len(x) == self.dim."]], "bayes_opt.TargetSpace.params_to_array": [[17, 1, 2, 0, "params", "a single point, with len(x) == self.dim."]], "bayes_opt.TargetSpace.probe": [[17, 1, 2, 0, "params", "a single point, with len(x) == self.dim"]], "bayes_opt.TargetSpace.register": [[17, 1, 2, 0, "constraint_value", "Constraint function value"], [17, 1, 2, 0, "params", "a single point, with len(x) == self.dim."], [17, 1, 2, 0, "target", "target function value"]], "bayes_opt.TargetSpace.set_bounds": [[17, 1, 2, 0, "new_bounds", "A dictionary with the parameter name and its new bounds"]], "bayes_opt.acquisition": [[7, 0, 1, 0, "AcquisitionFunction", "Base class for acquisition functions."], [8, 0, 1, 0, "ConstantLiar", "Constant Liar acquisition function."], [9, 0, 1, 0, "ExpectedImprovement", "Expected Improvement acqusition function."], [10, 0, 1, 0, "GPHedge", "GPHedge acquisition function."], [11, 0, 1, 0, "ProbabilityOfImprovement", "Probability of Improvement acqusition function."], [12, 0, 1, 0, "UpperConfidenceBound", "Upper Confidence Bound acquisition function."]], "bayes_opt.acquisition.AcquisitionFunction": [[7, 3, 1, 0, "base_acq", "Provide access to the base acquisition function."], [7, 3, 1, 0, "suggest", "Suggest a promising point to probe next."]], "bayes_opt.acquisition.AcquisitionFunction.__init__": [[7, 1, 2, 0, "random_state", "Set the random state for reproducibility."]], "bayes_opt.acquisition.AcquisitionFunction.base_acq": [[7, 1, 2, "bayes_opt.acquisition.AcquisitionFunction.base_acq", "args", "Provide access to the base acquisition function."], [7, 1, 2, "bayes_opt.acquisition.AcquisitionFunction.base_acq", "kwargs", "Provide access to the base acquisition function."]], "bayes_opt.acquisition.AcquisitionFunction.suggest": [[7, 1, 2, 0, "fit_gp", "Whether to fit the Gaussian Process to the target space. Set to False if the GP is already fitted."], [7, 1, 2, 0, "gp", "A fitted Gaussian Process."], [7, 1, 2, 0, "n_l_bfgs_b", "Number of starting points for the L-BFGS-B optimizer."], [7, 1, 2, 0, "n_random", "Number of random samples to use."], [7, 1, 2, 0, "target_space", "The target space to probe."]], "bayes_opt.acquisition.ConstantLiar": [[8, 3, 1, 0, "base_acq", "Calculate the acquisition function."], [8, 3, 1, 0, "suggest", "Suggest a promising point to probe next."]], "bayes_opt.acquisition.ConstantLiar.__init__": [[8, 1, 2, 0, "atol", "Absolute tolerance to eliminate a dummy point."], [8, 1, 2, 0, "base_acquisition", "The acquisition function to use."], [8, 1, 2, 0, "random_state", "Set the random state for reproducibility."], [8, 1, 2, 0, "rtol", "Relative tolerance to eliminate a dummy point."], [8, 1, 2, 0, "strategy", "Strategy to use for the constant liar."]], "bayes_opt.acquisition.ConstantLiar.base_acq": [[8, 1, 2, "bayes_opt.acquisition.ConstantLiar.base_acq", "args", "Calculate the acquisition function."], [8, 1, 2, "bayes_opt.acquisition.ConstantLiar.base_acq", "kwargs", "Calculate the acquisition function."]], "bayes_opt.acquisition.ConstantLiar.suggest": [[8, 1, 2, 0, "fit_gp", "Whether to fit the Gaussian Process to the target space. Set to False if the GP is already fitted."], [8, 1, 2, 0, "gp", "A fitted Gaussian Process."], [8, 1, 2, 0, "n_l_bfgs_b", "Number of starting points for the L-BFGS-B optimizer."], [8, 1, 2, 0, "n_random", "Number of random samples to use."], [8, 1, 2, 0, "target_space", "The target space to probe."]], "bayes_opt.acquisition.ExpectedImprovement": [[9, 3, 1, 0, "base_acq", "Calculate the expected improvement."], [9, 3, 1, 0, "decay_exploration", "Decay xi by a constant rate."], [9, 3, 1, 0, "suggest", "Suggest a promising point to probe next."]], "bayes_opt.acquisition.ExpectedImprovement.__init__": [[9, 1, 2, 0, "exploration_decay", "Decay rate for xi."], [9, 1, 2, 0, "exploration_decay_delay", ""], [9, 1, 2, 0, "random_state", "Set the random state for reproducibility."], [9, 1, 2, 0, "xi", "Governs the exploration/exploitation tradeoff."]], "bayes_opt.acquisition.ExpectedImprovement.base_acq": [[9, 1, 2, 0, "mean", "Mean of the predictive distribution."], [9, 1, 2, 0, "std", "Standard deviation of the predictive distribution."]], "bayes_opt.acquisition.ExpectedImprovement.suggest": [[9, 1, 2, 0, "fit_gp", "Whether to fit the Gaussian Process to the target space. Set to False if the GP is already fitted."], [9, 1, 2, 0, "gp", "A fitted Gaussian Process."], [9, 1, 2, 0, "n_l_bfgs_b", "Number of starting points for the L-BFGS-B optimizer."], [9, 1, 2, 0, "n_random", "Number of random samples to use."], [9, 1, 2, 0, "target_space", "The target space to probe."]], "bayes_opt.acquisition.GPHedge": [[10, 3, 1, 0, "base_acq", "Raise an error, since the base acquisition function is ambiguous."], [10, 3, 1, 0, "suggest", "Suggest a promising point to probe next."]], "bayes_opt.acquisition.GPHedge.__init__": [[10, 1, 2, 0, "base_acquisitions", "List of base acquisition functions."], [10, 1, 2, 0, "random_state", "Set the random state for reproducibility."]], "bayes_opt.acquisition.GPHedge.base_acq": [[10, 1, 2, "bayes_opt.acquisition.GPHedge.base_acq", "args", "Raise an error, since the base acquisition function is ambiguous."], [10, 1, 2, "bayes_opt.acquisition.GPHedge.base_acq", "kwargs", "Raise an error, since the base acquisition function is ambiguous."]], "bayes_opt.acquisition.GPHedge.suggest": [[10, 1, 2, 0, "fit_gp", "Whether to fit the Gaussian Process to the target space. Set to False if the GP is already fitted."], [10, 1, 2, 0, "gp", "A fitted Gaussian Process."], [10, 1, 2, 0, "n_l_bfgs_b", "Number of starting points for the L-BFGS-B optimizer."], [10, 1, 2, 0, "n_random", "Number of random samples to use."], [10, 1, 2, 0, "target_space", "The target space to probe."]], "bayes_opt.acquisition.ProbabilityOfImprovement": [[11, 3, 1, 0, "base_acq", "Calculate the probability of improvement."], [11, 3, 1, 0, "decay_exploration", "Decay xi by a constant rate."], [11, 3, 1, 0, "suggest", "Suggest a promising point to probe next."]], "bayes_opt.acquisition.ProbabilityOfImprovement.__init__": [[11, 1, 2, 0, "exploration_decay", "Decay rate for xi."], [11, 1, 2, 0, "exploration_decay_delay", "Delay for decay."], [11, 1, 2, 0, "random_state", "Set the random state for reproducibility."], [11, 1, 2, 0, "xi", "Governs the exploration/exploitation tradeoff."]], "bayes_opt.acquisition.ProbabilityOfImprovement.base_acq": [[11, 1, 2, 0, "mean", "Mean of the predictive distribution."], [11, 1, 2, 0, "std", "Standard deviation of the predictive distribution."]], "bayes_opt.acquisition.ProbabilityOfImprovement.suggest": [[11, 1, 2, 0, "fit_gp", "Whether to fit the Gaussian Process to the target space. Set to False if the GP is already fitted."], [11, 1, 2, 0, "gp", "A fitted Gaussian Process."], [11, 1, 2, 0, "n_l_bfgs_b", "Number of starting points for the L-BFGS-B optimizer."], [11, 1, 2, 0, "n_random", "Number of random samples to use."], [11, 1, 2, 0, "target_space", "The target space to probe."]], "bayes_opt.acquisition.UpperConfidenceBound": [[12, 3, 1, 0, "base_acq", "Calculate the upper confidence bound."], [12, 3, 1, 0, "decay_exploration", "Decay kappa by a constant rate."], [12, 3, 1, 0, "suggest", "Suggest a promising point to probe next."]], "bayes_opt.acquisition.UpperConfidenceBound.__init__": [[12, 1, 2, 0, "exploration_decay", "Decay rate for kappa."], [12, 1, 2, 0, "exploration_decay_delay", "Delay for decay."], [12, 1, 2, 0, "kappa", "Governs the exploration/exploitation tradeoff."], [12, 1, 2, 0, "random_state", "Set the random state for reproducibility."]], "bayes_opt.acquisition.UpperConfidenceBound.base_acq": [[12, 1, 2, 0, "mean", "Mean of the predictive distribution."], [12, 1, 2, 0, "std", "Standard deviation of the predictive distribution."]], "bayes_opt.acquisition.UpperConfidenceBound.suggest": [[12, 1, 2, 0, "fit_gp", "Whether to fit the Gaussian Process to the target space. Set to False if the GP is already fitted."], [12, 1, 2, 0, "gp", "A fitted Gaussian Process."], [12, 1, 2, 0, "n_l_bfgs_b", "Number of starting points for the L-BFGS-B optimizer."], [12, 1, 2, 0, "n_random", "Number of random samples to use."], [12, 1, 2, 0, "target_space", "The target space to probe."]], "bayes_opt.constraint": [[14, 0, 1, 0, "ConstraintModel", "Model constraints using GP regressors."]], "bayes_opt.constraint.ConstraintModel": [[14, 3, 1, 0, "allowed", "Check whether constraint_values fulfills the specified limits."], [14, 3, 1, 0, "approx", "Approximate the constraint function using the internal GPR model."], [14, 3, 1, 0, "eval", "Evaluate the constraint function."], [14, 3, 1, 0, "fit", "Fit internal GPRs to the data."], [14, 2, 1, 0, "lb", "Return lower bounds."], [14, 2, 1, 0, "model", "Return GP regressors of the constraint function."], [14, 3, 1, 0, "predict", "Calculate the probability that the constraint is fulfilled at X."], [14, 2, 1, 0, "ub", "Return upper bounds."]], "bayes_opt.constraint.ConstraintModel.__init__": [[14, 1, 2, 0, "fun", "The constraint function."], [14, 1, 2, 0, "lb", "The lower bound on the constraints."], [14, 1, 2, 0, "random_state", "Random state to use."], [14, 1, 2, 0, "ub", "The upper bound on the constraints."]], "bayes_opt.constraint.ConstraintModel.allowed": [[14, 1, 2, 0, "constraint_values", "The values of the constraint function."]], "bayes_opt.constraint.ConstraintModel.approx": [[14, 1, 2, 0, "X", "Parameters for which to estimate the constraint function value."]], "bayes_opt.constraint.ConstraintModel.eval": [[14, 1, 2, "bayes_opt.constraint.ConstraintModel.eval", "kwargs", "Evaluate the constraint function."]], "bayes_opt.constraint.ConstraintModel.fit": [[14, 1, 2, 0, "X", "Parameters of the constraint function."], [14, 1, 2, 0, "Y", "Values of the constraint function."]], "bayes_opt.constraint.ConstraintModel.predict": [[14, 1, 2, 0, "X", "Parameters for which to predict the probability of constraint fulfilment."]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "parameter", "Python parameter"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "module", "Python module"]}, "objtypes": {"0": "py:class", "1": "py:parameter", "2": "py:property", "3": "py:method", "4": "py:module"}, "terms": {"": [0, 1, 3, 4, 5, 6, 8], "0": [0, 1, 2, 3, 4, 15, 17, 18], "000000000116973": 3, "0002287496346898": 2, "0008684793556073": 3, "005532": 2, "0084": 2, "0087879313090253": 3, "01": [0, 18], "015": 2, "0154397119682423": 2, "016": [0, 2], "018": 1, "01894": 1, "019": 1, "02003": 1, "02025": 1, "021": 18, "021127762033562": 3, "022": 1, "02272": 2, "024": 0, "025": 0, "026": 0, "02617": 1, "02644400210430190": 6, "027": 0, "02816": 2, "0288343947238228": 2, "029": [1, 2], "033": 18, "034": 2, "0344": 1, "03683": 1, "039": 0, "043": [1, 2], "04359": 1, "045": 2, "04749": 2, "05": [1, 8], "057": 1, "05801": 1, "06": 6, "06199": 1, "065": 1, "069": 2, "06916": 2, "07374": 2, "076": 0, "07699": 1, "07993": 2, "08": [1, 8], "08078": 1, "0819533157901717": 1, "084": 1, "085": 1, "089": 1, "0929": 1, "093": [1, 2], "096": 1, "0x23439267280": 4, "0x23439267fd0": 4, "1": [0, 4, 15, 17, 18], "10": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 18], "100": [0, 3, 17], "1000": [0, 3], "10000": [0, 5, 7, 8, 9, 10, 11, 12, 18], "1009": 10, "1052": 1, "1071": 1, "109": 18, "10_000": [7, 8, 9, 10, 11, 12], "11": [1, 2, 3, 4, 18], "1108": 6, "1166": 2, "12": [1, 2, 3, 18], "13": [0, 1, 2, 3, 18], "132": 0, "133": 1, "135": 2, "135455292718879": 2, "1372": 1, "1396": 2, "13961016009280103": 2, "14": [1, 2, 3, 18], "15": [0, 1, 2, 3, 18], "1501": 2, "153": 1, "1538": 1, "154": 18, "158": 18, "16": [0, 1, 2, 3, 5, 18], "168": 2, "17": [1, 2, 3], "173": 0, "175": 2, "18": [1, 2], "184": 1, "186": 2, "1860045642089614": 2, "1865": 1, "188": 1, "19": [1, 2, 6], "193": 2, "1_000": 0, "1e": [0, 1, 8], "2": [0, 4, 5, 12, 13, 14, 16, 17, 18], "20": [0, 1, 2, 4, 18], "2002": [4, 6], "2014": [3, 6], "2017": 18, "2094": 18, "21": [1, 2], "2122": 18, "2165": 1, "2177": 1, "2187": 1, "22": 1, "22703572807626315": 1, "229": 2, "23": 1, "230305457787476": 3, "235835023240657": 2, "2361": 0, "237": 1, "24": [1, 2], "2488": 1, "25": [1, 13], "26": 1, "2606": 1, "266": 2, "267": 0, "269540259274744": 1, "27": [1, 18], "271": 2, "272": 1, "278": 1, "28": 1, "287": 1, "29": 1, "292": 1, "2948": 1, "296": 1, "2975037081163068": 3, "3": [0, 3, 4, 5, 18], "30": [0, 1, 18], "301617813728339": 2, "302": 2, "307": 1, "3202": 1, "3219469606529486": [1, 2], "322": [1, 2], "3319": 1, "331911981189704": 1, "33253689": 17, "3338": 2, "337": 1, "339": 1, "35": 2, "353": 1, "374": 18, "378": 2, "39": [1, 2, 3], "397": 1, "398": 1, "4": [0, 1, 3, 4, 17, 18], "406": 1, "4178": 2, "42": [0, 5], "4249238905875123": 1, "442": 1, "444": 1, "446": 2, "45": 0, "452": 1, "458": 1, "463": 1, "467": 1, "472": 1, "4758": 1, "477": 1, "48": 2, "4802": 1, "5": [0, 1, 2, 3, 4, 5, 8, 13, 17, 18], "50": [4, 5], "50219704520679": 1, "503835804889988": 1, "5044": 2, "511": 0, "512": 1, "514": 1, "518": 1, "523": 0, "525": 0, "534": 1, "535": 1, "5419": 10, "5426": 0, "54488318": 17, "55": 17, "556": 1, "558": 1, "562": 1, "565": 2, "5721": 0, "576": [12, 18], "579": 1, "582": [2, 18], "5822074982517598": 2, "59": 1, "599": 1, "6": [0, 1, 2, 3, 4, 5, 17, 18], "6032": 1, "615": 1, "616": 1, "6164": 2, "617": 0, "64727683929071": 3, "649": 1, "651": 2, "6535": 2, "658": 1, "66": 2, "6605": 2, "664242699361514": 1, "683": 1, "684": 1, "6926": 1, "694": 1, "7": [0, 1, 2, 3, 4, 5, 15, 18], "704": 1, "705": 18, "7146": 2, "7342": 0, "737": 1, "746": 18, "747604713731052": 1, "755": 1, "758": 2, "764": 1, "775": 18, "778": 1, "779531005607566": 2, "78": 2, "7821": 2, "783": 1, "7861845912690544": 1, "7862": 1, "7949": 1, "7985": 0, "8": [0, 1, 2, 3, 4, 5, 8, 18], "80": 3, "801": 0, "813": 2, "8131": 1, "819": 18, "8198": 18, "82": 0, "83": [1, 2], "834": 2, "8340440094051482": 2, "8427": 2, "8458666395359906": 2, "846": [1, 2], "851": 1, "854": [1, 2], "857": 0, "8586": 1, "861": 1, "863": 1, "872282989383577": 1, "875": 0, "8809": 0, "8877": 0, "8917": 2, "9": [0, 1, 2, 3, 4, 5, 15, 17, 18], "917": 1, "919": 1, "9227": 0, "925": 1, "9266": 2, "928": 1, "931": 1, "9313": 1, "932": 0, "934": 0, "935": 1, "937": 6, "941": 1, "9421": 2, "943": 1, "9434": 2, "945": 6, "9471": 2, "9475": 1, "95": [0, 18], "953": 0, "953072105336": 1, "954": 0, "955": 0, "957": 1, "96": 1, "9600": [0, 18], "9609778030491904": 1, "961": 0, "962": 0, "964": 0, "966": 1, "966506881014352": 2, "967": 2, "9682431497650823": 1, "969": 1, "971": 1, "973": 1, "9734131381980626": 3, "9737252084307952": 1, "974": 2, "975": 0, "9757": 2, "976": 2, "9778": 2, "9819": 2, "987": 1, "987234": 5, "988": 2, "99": 0, "9912": 2, "994467585936897": 1, "995": 2, "9958": 0, "997": 2, "9973": 0, "998": [1, 18], "9988": 2, "9991881984624875": 1, "99963711795217": 2, "9997": 2, "9999": 1, "9999891845990944": 3, "A": [3, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18], "And": 1, "As": [0, 2, 6], "At": [2, 6, 10], "By": [1, 2], "For": [0, 1, 2, 3, 6, 10], "If": [0, 1, 2, 6, 8, 9, 11, 12, 13, 14, 15, 17], "In": [0, 1, 3, 13, 14, 17, 18], "It": [2, 4, 8, 18], "NOT": 1, "On": [4, 6, 15], "One": [0, 1, 7, 16], "Or": 2, "That": 14, "The": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "Then": 10, "There": [1, 2, 3, 4], "These": 4, "To": [2, 3, 6], "Will": 1, "_": 1, "__init__": 0, "_fit_gp": [0, 18], "_get_acq": [0, 18], "_gp": [0, 3, 5, 13, 18], "_kei": 17, "_space": [0, 18], "a_": 3, "ab": 10, "abl": [2, 3, 18], "about": [2, 6], "abov": [1, 3], "absolut": 8, "abstract": 7, "accept": 0, "access": [0, 2, 3, 7], "accordingli": 3, "account": [2, 6], "acklei": 4, "acq": [0, 1, 3, 18], "acq_i": 10, "acquisit": [1, 2, 3, 6, 13, 17, 18], "acquisition_funct": [0, 1, 5, 13, 18], "acquisition_function_": 0, "acquisitionfunct": [0, 1, 7, 8, 10], "acqusit": [9, 11], "across": 5, "activ": 6, "actual": [3, 4], "ad": 0, "addit": [3, 6], "addition": [0, 3, 6, 18], "adequ": [1, 2, 6], "adjust": [0, 9, 11, 12], "admittedli": 3, "advanc": [2, 6], "advantag": 4, "after": [0, 4, 10, 13], "again": 8, "aid": 6, "al": [3, 10], "albeit": [2, 6], "alert": 2, "algorithm": [1, 2, 6, 8], "all": [0, 1, 2, 7, 13, 15, 17], "alloc": 10, "allow": [1, 2, 3, 13, 14, 17, 18], "allow_duplicate_point": [3, 13, 17], "alon": 7, "along": 3, "alpha": [0, 5, 18], "alphabet": 2, "alreadi": [3, 7, 8, 9, 10, 11, 12, 16], "also": [0, 2, 9], "alter": 2, "altern": 1, "alwai": [0, 7, 8], "ambigu": 10, "amort": 17, "an": [0, 1, 2, 3, 4, 6, 10, 13, 16, 17], "ani": [1, 2, 6, 13, 14], "anoth": [1, 3], "answer": [13, 17], "anyth": [6, 17], "append": 17, "appli": [4, 9, 11, 12, 13], "applicap": 0, "approach": 3, "approx": [3, 14], "approxim": [3, 14], "ar": [0, 1, 2, 3, 4, 5, 6, 10, 14, 17], "area": 3, "arg": [7, 8, 10], "arg1": 4, "arg2": 4, "argmax": [0, 18], "argument": [0, 3, 13, 14], "around": [1, 4, 5], "arrai": [0, 3, 14, 17, 18], "array_to_param": 17, "articl": 6, "arxiv": 10, "assert": [0, 1, 17], "assess": 3, "associ": [1, 2, 13, 16], "assum": [3, 14], "async_optim": 1, "asynchron": 8, "atleast_2d": 0, "atol": 8, "attempt": [2, 6, 13], "author": [4, 6], "automat": [3, 9, 11, 12], "avail": 2, "avoid": 3, "awai": 0, "awar": 2, "ax": [0, 3], "ax2": 0, "axi": [0, 4, 18], "b": [4, 7, 8, 9, 10, 11, 12], "back": [1, 2], "bad": 3, "balanc": [2, 6, 18], "base": [0, 3, 4, 6, 7, 8, 10, 13, 15], "base_acq": [0, 7, 8, 9, 10, 11, 12], "base_acquisit": [8, 10], "basic": [6, 7], "basicobserv": 1, "bayes_opt": [0, 1, 2, 3, 4, 5, 16, 18], "bayesian": [3, 7, 10, 13, 14, 18], "bayesian_optim": 16, "bayesianoptim": [0, 1, 2, 3, 4, 5, 6, 16], "bbox_to_anchor": [0, 18], "becaus": 3, "becom": [0, 2, 6], "been": [3, 8, 17], "befor": [2, 3, 13], "begin": 0, "behav": 16, "behavior": [3, 7, 13, 17], "being": [1, 18], "below": [1, 2, 3, 6], "benefici": 1, "best": [0, 1, 2, 3, 6, 18], "better": 1, "between": [2, 3, 6, 18], "bewar": 2, "bfg": [7, 8, 9, 10, 11, 12], "bit": 3, "black": 3, "black_box_funct": [1, 2], "black_box_function_no_constraint": 3, "black_box_function_with_constraint": 3, "blackbox": 1, "block": 6, "bo": [2, 5], "bold": 18, "booktitl": 6, "bool": [0, 7, 8, 9, 10, 11, 12, 13, 16, 17], "boolean": 17, "borderaxespad": [0, 18], "both": [3, 4, 17], "bottom": 3, "bound": [1, 3, 4, 6, 12, 13, 14, 15, 17, 18], "bound_transform": 4, "boundari": 17, "bounds_transform": [4, 13], "bounds_transformers_iter": 4, "box": [0, 2], "brochu": 10, "brows": 2, "bug": 6, "build": 6, "built": [0, 2, 4, 6], "byte": 16, "c": [0, 3, 5, 6, 14, 18], "c_": 3, "c_1": 3, "c_2": 3, "c_est": 3, "c_label": 3, "c_n": 3, "cach": 17, "calcul": [4, 8, 9, 11, 12, 14], "call": [0, 1, 2, 3, 8, 9, 11, 12, 13], "callabl": 14, "callback": 1, "can": [0, 1, 2, 3, 4, 6, 7, 16, 18], "candid": 10, "carri": 1, "case": [0, 1, 2, 3, 14, 18], "catch_warn": 0, "categor": 6, "caveat": 2, "cdf": [9, 11], "central": 6, "certain": [2, 3, 6], "chang": [0, 6, 17], "charg": 1, "cheap": [0, 3], "cheaper": [2, 6], "check": [3, 6, 14, 17], "checkout": [1, 2], "chemistri": 1, "choos": 18, "chosen": 2, "cite": 6, "class": [0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "clear": [1, 2], "close": [2, 3, 6, 18], "cm": 3, "cmap": 3, "co": [3, 4], "code": 3, "codifi": 3, "color": [0, 18], "com": 6, "combin": [0, 1, 2, 3, 6, 7], "come": 0, "common": [2, 6], "complet": [1, 4, 13, 14, 15], "complex": 3, "comput": [0, 2, 3, 6], "concaten": [0, 18], "concurr": 1, "condit": [3, 14, 17], "confid": [0, 2, 6, 12, 18], "configur": 3, "consequ": 3, "conserv": 18, "consid": [0, 3, 9], "constant": [8, 9, 11, 12, 17], "constantliar": 7, "constitut": 3, "constrain": [0, 2, 6, 14, 16], "constrained_layout": 3, "constraint": [0, 6, 13, 14, 17], "constraint_funct": 3, "constraint_function_2_dim": 3, "constraint_limit": 3, "constraint_low": 3, "constraint_upp": 3, "constraint_valu": [13, 14, 17], "constraint_vbound": 3, "constraintmodel": [3, 13, 17], "constraintnotsupportederror": 0, "construct": [2, 3, 6, 18], "contain": 3, "contour": 3, "contourf": 3, "contract": 4, "control": [1, 2, 6, 18], "converg": 4, "convert": 17, "coolwarm": 3, "coordin": 17, "copi": 8, "core": 1, "correct": 6, "correspond": [2, 6, 13, 17, 18], "cost": [0, 2, 4, 6], "could": [0, 1, 2, 3], "cours": 2, "cov": 0, "cover": 2, "craig": [4, 6, 15], "creat": [3, 4, 13], "cross": 6, "cumul": 10, "cunningham": 6, "current": [0, 18], "d": [0, 1, 18], "dampen": 15, "data": [14, 17, 18], "date": 4, "dc": 14, "deal": 6, "decai": [9, 11, 12], "decay_explor": [9, 11, 12], "deeper": 0, "def": [0, 1, 2, 3, 4, 5, 17, 18], "default": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "default_ev": 1, "defin": [1, 3, 4, 16], "definit": 0, "delai": [11, 12], "demonstr": 3, "depend": [0, 1, 2], "describ": [2, 3, 6], "design": [2, 6], "desir": [3, 13, 17], "detail": 6, "determin": [2, 6, 7], "develop": 6, "deviat": [0, 9, 11, 12], "dict": [13, 14, 15, 17], "dictat": [0, 7], "dictionari": [2, 13, 17], "differ": [0, 1, 3, 13, 17, 18], "dim": [0, 17], "dimens": 17, "dimension": [3, 14], "directli": [0, 1, 3], "disallow": 3, "disclaim": 2, "discourag": [7, 8], "discuss": [2, 6], "disregard": 0, "distinct": 3, "distribut": [1, 2, 6, 8, 9, 11, 12, 18], "diversifi": 2, "divid": 0, "do": [0, 1, 2, 3, 6], "doc": 1, "document": 4, "doe": [0, 1, 2, 14, 17], "doesn": 1, "doi": 6, "domain": [3, 6, 15], "domaintransform": [13, 15], "don": [1, 2, 14], "dot": 3, "dtype": 4, "due": [3, 18], "dummi": 8, "duplic": [3, 13, 17], "dure": 2, "dynam": 6, "e": [2, 3, 4, 13, 16, 18], "each": [2, 3, 6, 9, 10, 11, 12, 15], "earlier": 16, "easi": [0, 1], "easiest": 2, "ec": [0, 18], "eddi": 6, "edgecolor": 3, "ei": [0, 2, 6, 9], "eipu": 0, "either": 18, "elimin": 8, "els": [0, 3], "embed": 3, "emploi": [2, 3, 6], "empti": 17, "encourag": 0, "end": [1, 9, 11, 12], "endeavor": [2, 6], "eng": 6, "engin": 6, "enough": [0, 2], "enter": 18, "enum": 16, "enumer": 2, "equal": [0, 3], "errat": 1, "error": [3, 10], "estim": [0, 3, 14], "et": [3, 10], "eta": [4, 15], "etc": 1, "eval": 14, "evalu": [0, 2, 3, 7, 8, 10, 13, 14, 17], "even": [0, 1, 3], "event": [1, 2, 16], "everi": [2, 4], "exactli": 2, "exampl": [0, 1, 2, 3, 4, 6, 14, 15, 17, 18], "except": [3, 4], "execut": 1, "exemplifi": 6, "exist": [2, 16], "exp": [0, 4, 5, 18], "expect": [0, 2, 6, 9, 10], "expectedimprov": [0, 5, 7], "expectedimprovementperunitcost": 0, "expens": [0, 2, 3, 4, 6], "experi": [0, 1], "explicitli": 3, "exploit": [2, 6, 9, 11, 12, 18], "explor": [0, 2, 6, 9, 11, 12, 18], "exploration_decai": [0, 9, 11, 12], "exploration_decay_delai": [0, 9, 11, 12], "extra": 1, "extract": 3, "f": [0, 1, 2, 3, 4, 5, 13, 18], "factor": 0, "fall": 3, "fals": [3, 7, 8, 9, 10, 11, 12, 13, 16, 17], "fashion": [1, 6], "fc": [0, 18], "feasibl": 3, "featur": [2, 6], "feel": 2, "fernando": 6, "few": [0, 2, 3, 6, 18], "fig": [0, 3, 18], "figsiz": [0, 3, 5, 18], "figur": [0, 3, 5, 18], "file": [2, 6, 16], "fill": [0, 18], "fill_between": 5, "final": 6, "find": [0, 1, 2, 3, 6, 13, 14], "fire": [1, 2], "first": 2, "fit": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18], "fit_gp": [0, 7, 8, 9, 10, 11, 12], "fix": 0, "flatten": [0, 5, 18], "flexibl": [1, 6], "float": [4, 8, 9, 11, 12, 13, 14, 15, 17], "fly": 3, "folder": [1, 2], "follow": [0, 2, 3, 6, 7, 18], "fontdict": [0, 18], "fontsiz": [0, 18], "form": 3, "format": [0, 1, 2, 16, 18], "found": [1, 2, 3, 4, 6, 13, 17], "frac": [9, 11, 18], "free": [1, 18], "from": [0, 1, 2, 3, 4, 5, 8, 10, 11, 12, 16, 17, 18], "fromit": 4, "fulfil": [0, 3, 13, 14, 17], "fun": [3, 14], "func_with_discrete_param": 1, "function": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17], "function_to_be_optim": 1, "fundament": 18, "further": [0, 18], "g": [0, 13, 16, 18], "gain": 10, "gamma_": 4, "gamma_osc": 15, "gamma_pan": 15, "gardner": [3, 6], "gardner2014bayesian": 6, "gaussian": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 18], "gaussianprocessregressor": [7, 8, 9, 10, 11, 12], "gener": [2, 3, 13, 17], "get": [0, 1, 3, 13, 17, 18], "get_legend_handles_label": 0, "gif": [2, 6], "github": 6, "give": [1, 13, 17, 18], "given": [1, 3, 13, 14], "global": [2, 6], "go": [1, 3, 6, 18], "gold": [0, 18], "good": [2, 3], "got": 1, "govern": [9, 11, 12], "gp": [0, 7, 8, 9, 10, 11, 12, 13, 14], "gphedg": 7, "gpr": 14, "gradient": 0, "greedi": 0, "greedyacquisit": 0, "green": 3, "grid": [0, 3, 18], "gridspec": [0, 18], "group": 7, "grow": [2, 6, 18], "gt": [3, 4], "guess": [0, 18], "guid": [1, 3, 13], "guidanc": 2, "ha": [2, 3, 4, 17, 18], "handl": [1, 3, 13, 16], "happen": 2, "hard": [2, 6], "hashabl": 1, "hasn": 1, "hault": 1, "have": [1, 2, 3, 4, 8, 14, 18], "heavili": 4, "height_ratio": [0, 18], "help": 2, "here": [0, 1, 2, 3, 18], "high": [2, 6, 13, 17], "higher": [0, 9, 11, 12], "hold": 17, "hone": 3, "how": [0, 1, 2, 3, 4, 18], "howev": [1, 2], "http": [6, 10], "hyper": 1, "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "icml": 6, "idea": [2, 3, 6], "ident": 4, "ignor": [0, 1], "illustr": 3, "implement": [0, 2, 6, 7], "impli": 3, "import": [0, 1, 2, 3, 4, 5, 6, 18], "imposs": 1, "improv": [0, 1, 2, 6, 9, 11], "includ": 8, "incom": 16, "increas": 1, "independ": [3, 14], "individu": 14, "inequ": 6, "inf": 3, "infeas": 3, "infer": [2, 6], "inform": [2, 4, 6, 10, 13, 18], "ingredi": [1, 2], "init_point": [0, 1, 2, 3, 4, 13, 18], "initi": [4, 15, 18], "inlin": 18, "inproceed": 6, "instanc": [1, 2, 3, 16], "instanti": [1, 2], "int": [1, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17], "int_": 14, "integ": 13, "intend": 13, "intent": 2, "interest": [0, 3, 4, 15, 18], "intern": [1, 2, 3, 6, 13, 14], "interv": [0, 18], "interven": 0, "intuit": 1, "investig": 0, "invok": [1, 2], "is_constrain": 16, "isn": 3, "issu": 6, "iter": [0, 1, 2, 4, 6, 10, 13, 18], "its": [0, 1, 2, 6, 13, 17, 18], "j": [3, 6], "jacob": 6, "john": 6, "joint": 14, "journal": 6, "json": 16, "jsonlogg": [2, 16], "just": [2, 18], "k": [0, 4, 15, 18], "kappa": [1, 12, 18], "kei": [2, 13, 14, 17], "kenneth": 6, "keyword": 3, "kick": 18, "kilian": 6, "know": [2, 3, 6], "known": [2, 3, 6, 13, 17, 18], "kusner": 6, "kwarg": [4, 7, 8, 10, 14], "l": [7, 8, 9, 10, 11, 12], "label": [0, 3, 4, 18], "labels2": 0, "labels_bot": 3, "labels_top": 3, "lambda": [0, 17], "languag": 1, "larger": 18, "last": [1, 3], "last_x": 0, "later": 0, "lazi": [2, 13], "lazili": 2, "lb": [3, 14], "learn": [1, 3, 6], "left": [1, 9, 11, 14], "legend": [0, 4, 18], "len": [0, 2, 4, 17, 18], "leq": [3, 14], "less": [8, 18], "let": [0, 1, 3, 4, 6], "level": [0, 13, 16], "liar": 8, "lie": [2, 3], "like": [0, 1, 2, 3, 8, 18], "lim": 3, "limit": [3, 14], "line": 0, "linear": 4, "lines2": 0, "linewidth": [0, 18], "linspac": [0, 3, 5, 18], "list": [1, 2, 4, 10, 13, 15, 17], "listen": [1, 2], "literatur": 1, "ll": 4, "load": 0, "load_log": 2, "loc": [0, 18], "local": 18, "log": [1, 2, 16], "logger": [2, 16], "long": 1, "look": [1, 2, 3, 6], "loop": 13, "low": [3, 14], "lower": [3, 4, 8, 9, 11, 12, 14, 17], "lt": 4, "machin": [1, 6], "magnitud": [3, 9], "mai": [1, 2, 3, 13, 17], "main": 2, "make": [6, 13], "mani": [0, 2, 7], "manual": 13, "markeredgecolor": [0, 18], "markeredgewidth": [0, 18], "markerfacecolor": [0, 18], "markers": [0, 18], "mask": [3, 17], "match": 14, "matern": 1, "mathcal": 14, "mathemat": 3, "matplotlib": [0, 3, 4, 5, 18], "matrix": 0, "matt": 6, "max": [0, 1, 2, 3, 8, 9, 11, 13, 17, 18], "max_": 3, "maxim": [0, 2, 3, 4, 5, 13, 17, 18], "maxima": [3, 18], "maximum": [0, 2, 3, 6, 8, 13, 14, 17, 18], "mayb": 1, "mean": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14], "mechan": 0, "meshgrid": 3, "meta": 7, "method": [0, 1, 2, 4, 6, 8, 9, 11, 12, 13], "might": [0, 1, 2, 3], "min": [3, 8], "minim": [2, 6], "minima": 18, "minimum": [2, 3, 8, 13, 15, 17, 18], "minimum_window": [4, 15], "minut": 0, "misc": 6, "model": [3, 6, 13, 14, 17], "modifi": [3, 7, 13], "modul": 7, "moment": 13, "month": 6, "more": [0, 1, 2, 4, 5, 6, 10, 13, 18], "most": [0, 2, 4, 5, 6, 7], "msg": 0, "mu": [0, 9, 11, 12, 14, 18], "much": [1, 2, 3], "multi": 3, "multipl": [7, 8, 14, 18], "multivari": 0, "multivariate_norm": 0, "must": [0, 2, 3], "mutat": 4, "mutating_optim": 4, "my_callback": 1, "my_observ": 1, "n": [2, 3, 4, 14, 15], "n_constraint": [3, 14], "n_featur": 14, "n_iter": [0, 1, 2, 3, 4, 5, 13, 18], "n_l_bfgs_b": [0, 7, 8, 9, 10, 11, 12], "n_plots_per_row": 3, "n_random": [0, 7, 8, 9, 10, 11, 12], "n_restarts_optim": 1, "n_sampl": 14, "name": [3, 13, 14, 17], "nan": 3, "nativ": 2, "natur": [1, 2, 3], "ndarrai": [7, 8, 9, 10, 11, 12, 14, 15, 17], "ndarrrai": 14, "necess": 1, "necessari": 18, "need": [1, 2, 3, 4, 6, 13, 14], "new": [2, 13, 15, 17], "new_bound": [2, 13, 17], "new_optim": 2, "next": [0, 1, 3, 6, 7, 8, 9, 10, 11, 12, 13, 18], "next_point": 1, "next_point_to_prob": 1, "nielen": 6, "nogueira": 6, "nois": [1, 13, 17], "noisi": 0, "non": [3, 4], "none": [0, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18], "nonetheless": 2, "nonlinearconstraint": 3, "normal": [0, 3, 9, 11], "note": [3, 5, 13, 17], "notebook": [0, 2, 3, 6, 7, 14, 15], "notic": [1, 18], "notuniqueerror": 17, "now": [1, 2, 3, 4], "np": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18], "number": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18], "numpi": [0, 3, 4, 5, 13, 18], "nut": 1, "o": 16, "object": [1, 2, 3, 4], "observ": [0, 2, 3, 6, 13, 18], "obtain": [2, 18], "obviou": 4, "obvious": 2, "occasion": [3, 13, 17], "off": [9, 11, 12, 18], "often": 2, "ok": [1, 3], "one": [0, 3, 4, 7], "ones": 2, "onli": [1, 2, 3, 4, 13, 18], "onto": [2, 4], "open": 6, "oper": [0, 3, 8, 15], "opt": 0, "optim": [0, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "optimization_end": 16, "optimization_start": [1, 16], "optimization_step": [1, 2, 16], "option": [1, 13, 17], "orang": 0, "order": [0, 2, 3, 13, 14], "org": 10, "origin": 3, "osc": 4, "oscil": [4, 15], "other": [0, 2, 3, 6, 13, 17], "otherwis": 13, "our": [0, 1, 2, 3, 4, 18], "out": [0, 1, 2, 5, 6], "output": [2, 16], "over": [0, 1, 2, 6, 13], "overal": 14, "overwrit": [0, 16], "own": [1, 7], "p": [6, 14], "p1": 17, "p2": 17, "p_allow": 3, "p_c": 0, "packag": [0, 3, 4, 6, 18], "page": 6, "pain": 3, "pan": [4, 15], "paper": 3, "paradigm": 2, "parallel": 7, "param": [0, 1, 2, 3, 4, 5, 13, 17, 18], "paramet": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "params_to_arrai": 17, "particular": [0, 1, 2, 7], "particularli": [1, 2, 4, 6], "pass": 2, "path": [2, 16], "pathlik": 16, "pbound": [1, 2, 3, 4, 5, 13, 17], "pdf": 9, "peak": 5, "per": 0, "perform": [0, 1, 2, 4], "phase": 4, "phi": [9, 11], "pi": 4, "pictur": [2, 6], "place": 3, "pleas": [2, 6], "plot": [0, 3, 4], "plot_bo": 5, "plot_constrained_opt": 3, "plot_gp": [0, 18], "plt": [0, 3, 4, 5, 18], "poi": 11, "point": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17], "polici": 0, "portfolio": 10, "posit": [9, 11], "possibl": [2, 6], "posterior": [0, 2, 6, 18], "pr": 14, "practic": [0, 18], "predict": [0, 1, 3, 5, 8, 9, 11, 12, 14, 18], "prefer": [3, 9, 11, 12], "present": [6, 14, 17], "pretti": [3, 18], "previous": [2, 6, 7, 8, 17], "principl": 1, "print": [0, 1, 2, 3], "prior": 0, "probabilityofimprov": [5, 7, 9], "probabl": [0, 3, 9, 11, 14], "probe": [1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 17, 18], "problem": [1, 2, 3, 4, 6, 7], "proce": 3, "procedur": 18, "process": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 18], "product": 14, "progress": 1, "project": 6, "promis": [7, 8, 9, 10, 11, 12, 13], "proper": [2, 6], "properti": [2, 3, 13, 14, 16, 17], "provid": [3, 7, 13, 15], "proxi": [2, 6], "public": 6, "pure": 6, "purpl": [0, 18], "purpos": 2, "push": 0, "py": 1, "pyplot": [0, 3, 4, 5, 18], "python": 6, "q": 6, "quadrat": 3, "qualiti": 1, "quick": 4, "quickli": 3, "quit": [0, 4, 18], "r": [0, 3, 6, 18], "rais": [0, 3, 9, 10, 11, 14, 17], "random": [0, 1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17], "random_sampl": 17, "random_st": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18], "randomst": [7, 8, 9, 10, 11, 12, 13, 14, 17], "rang": [0, 1, 3, 4, 5, 18], "rate": [9, 11, 12], "re": [0, 1, 2, 3, 13, 17, 18], "read": 3, "real": 2, "realiz": 2, "reason": [1, 3], "receiv": 0, "recent": [0, 4], "recreat": 1, "red": [3, 5], "reduc": [0, 4, 9, 11, 12, 15], "reduct": [6, 15], "refer": [2, 3, 4, 6], "reformul": 3, "region": [2, 3, 4, 6, 15], "regist": [3, 8, 13, 17], "regress": 1, "regressor": [3, 13, 14], "rel": [4, 8], "remov": 0, "repeat": 1, "repeatedli": [3, 13, 17], "report": 17, "represent": 17, "reproduc": [7, 8, 9, 10, 11, 12], "requir": [0, 2, 4, 6], "rerun": 3, "research": 6, "reset": 16, "reshap": [0, 3, 5, 18], "respect": [3, 14], "restart": 16, "restrict": 18, "result": [1, 3, 16, 17], "return": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "return_cov": 0, "return_std": [0, 5, 18], "reward": 10, "right": [9, 11, 14], "rightarrow": 1, "robust": [4, 6, 15], "routin": [4, 13], "row": 3, "rtol": 8, "run": [0, 1, 3, 17], "sai": 0, "same": [3, 8, 13, 14, 15, 17], "sampl": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 17], "satisfi": 17, "scale": 15, "scatter": [3, 5], "scenario": 2, "scheme": [4, 6, 15], "scikit": 1, "scipi": 3, "screenlogg": 16, "script": [1, 6], "search": [4, 6, 13, 17], "searchabl": 15, "section": 6, "see": [0, 2, 3, 4, 6, 7, 10, 13, 14, 15], "seed": [5, 13, 17], "seem": 3, "seen": [2, 4, 6, 17], "select": [0, 10], "self": [0, 1, 17], "sens": [2, 6], "sequenti": [15, 18], "sequentialdomainreductiontransform": 4, "sequentialdomaintransform": 6, "serv": 2, "server": 1, "set": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 18], "set_aspect": 3, "set_bound": [2, 13, 17], "set_gp_param": [1, 13], "set_titl": 3, "set_xlabel": [0, 18], "set_xlim": [0, 18], "set_ylabel": [0, 18], "set_ylim": [0, 18], "setup": 3, "sever": 0, "shape": [0, 3, 14], "shift": 4, "should": [1, 2, 3, 6, 14, 18], "shouldn": 2, "show": [3, 5], "showcas": [0, 1], "shrink": [4, 15], "shrinkag": 4, "sigma": [0, 5, 9, 11, 12, 14, 18], "sign": 3, "silent": [2, 3], "similar": [3, 9, 16], "similarli": 3, "simpl": [0, 1, 4, 6, 15], "simplefilt": 0, "simpli": [1, 3, 14], "simul": [1, 4, 6, 15], "sin": 3, "sinc": [0, 1, 3, 8, 10], "singl": 17, "situat": [0, 1, 2, 3, 6, 13, 17], "size": [0, 3, 15, 18], "skip": 0, "slightli": 3, "so": [1, 2, 3, 6], "softwar": 6, "sole": 0, "solut": [1, 3], "solv": 3, "some": [0, 1, 2, 3], "somewhat": 0, "sourc": 6, "space": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18], "special": 0, "specif": [0, 1, 2, 3, 13], "specifi": [1, 14, 17], "sped": 6, "spread": 5, "sqrt": 4, "squar": 0, "squeez": 3, "standard": [0, 3, 4, 9, 11, 12], "standard_optim": 4, "stander": [4, 6, 15], "start": [1, 3, 4, 7, 8, 9, 10, 11, 12, 13, 18], "state": [7, 8, 9, 10, 11, 12, 13, 14, 16], "statement": 0, "std": [0, 9, 11, 12], "step": [0, 1, 4, 6, 7, 10, 16], "still": [2, 6], "stop": 1, "store": [2, 3], "str": [8, 15, 16, 17], "strategi": [2, 6, 8], "stuck": 18, "subclass": 7, "subj": 3, "submodul": 2, "subplot": [0, 3, 18], "subscrib": [1, 2], "subscript": 1, "succes": 18, "suggest": [0, 6, 7, 8, 9, 10, 11, 12, 13], "suit": [2, 6], "suitabl": 7, "super": 0, "super_acq": 0, "support": 0, "suptitl": [0, 18], "sure": 13, "surfac": 1, "surrog": 3, "surrogate_object": 3, "swapax": 3, "switch": 3, "t": [1, 2, 3, 14], "take": [0, 1, 2, 3, 6, 13, 14], "target": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18], "target_func": 17, "target_funct": 3, "target_spac": [0, 7, 8, 9, 10, 11, 12, 15], "target_vbound": 3, "targetspac": [7, 8, 9, 10, 11, 12, 13, 15], "techniqu": [2, 4, 6], "tell": 1, "termin": 16, "test": 18, "text": [3, 9, 11, 12, 14, 16], "thei": [1, 7, 17], "them": [2, 3], "therefor": [2, 4, 6], "thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18], "thing": [0, 1], "think": [1, 2], "thompson": 0, "thompsonsampl": 0, "three": 4, "through": 0, "thu": 3, "tild": 14, "time": [1, 2, 3, 4, 17], "tip": [2, 6], "titl": [3, 4, 6], "toler": 8, "too": [0, 18], "tool": [2, 6], "top": 3, "tour": 6, "trade": [9, 11, 12, 18], "tradeoff": [9, 11, 12], "transform": [4, 13, 15], "tri": 3, "true": [0, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18], "try": [3, 14, 18], "tune": [2, 6], "tupl": [13, 17], "twinx": 0, "two": [3, 4], "ty": 2, "type": [0, 1], "typeerror": 14, "typic": [3, 4, 15], "u": [0, 6, 18], "ub": 14, "ucb": [2, 6, 12, 18], "uncertainti": [1, 18], "under": 6, "understand": [1, 6, 7], "unev": 18, "unfeas": 3, "unfortun": 1, "uniqu": 17, "unit": 0, "unitari": 15, "unknown": [2, 6, 18], "unnecessari": 3, "unpack": 3, "unseed": 13, "until": 3, "up": [0, 3, 4, 6, 14], "updat": [1, 3, 4, 10, 16], "upon": [2, 6], "upper": [2, 4, 6, 12, 14, 17, 18], "upperconfidencebound": [1, 5, 7, 18], "url": 6, "us": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "usag": [2, 6], "use": 2, "user": [2, 18], "usual": [0, 3], "util": [0, 2, 18], "utility_funct": 18, "valid": [6, 17], "valu": [0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "valueerror": [9, 11], "variabl": [4, 18], "varianc": [8, 14], "variou": 0, "verbos": [1, 2, 3, 4, 5, 13, 16], "veri": [0, 1, 2, 6], "version": [0, 17], "via": [2, 3], "violat": 3, "visual": [3, 6], "vmax": 3, "vmin": 3, "volum": 6, "w": 1, "wa": [1, 18], "wai": [1, 2, 3, 7], "want": [1, 2, 3, 6], "warn": 0, "we": [0, 1, 2, 3, 4, 6, 14, 18], "weinberg": 6, "well": [3, 13, 14], "were": 3, "what": [0, 1, 2, 3, 6], "whatev": 1, "when": [1, 2, 3, 4, 6, 13], "whenev": [1, 3], "where": [0, 1, 2, 3, 4, 6, 9, 11, 13, 17], "wheter": 14, "whether": [3, 7, 8, 9, 10, 11, 12, 14, 16], "which": [0, 2, 3, 4, 6, 13, 14, 18], "while": [0, 1, 2], "white": 3, "whole": 5, "why": 1, "window": 15, "wish": 2, "within": 17, "without": 2, "word": 3, "work": [0, 1, 2, 3, 15, 18], "worker": 8, "wors": 3, "worst": 3, "worth": [2, 6], "would": [0, 3], "wrapper": 1, "write": [0, 3, 16], "written": 1, "x": [0, 1, 2, 3, 4, 5, 9, 11, 12, 14, 17, 18], "x_": 3, "x_i": 3, "x_max_bound": 4, "x_min_bound": 4, "x_ob": [0, 18], "x_reduc": 0, "x_train_": 0, "xi": [0, 9, 11], "xu": 6, "xy": 3, "y": [0, 1, 2, 3, 4, 14, 17, 18], "y_": [3, 9, 11], "y_cov": 0, "y_j": 3, "y_max": [9, 11], "y_mean": 0, "y_ob": [0, 18], "y_sampl": 0, "y_sample_argmax": 0, "year": 6, "yet": [1, 7, 8], "yield": [13, 14], "you": [0, 1, 2, 3, 6, 7, 13], "your": [0, 1, 2, 3, 6, 7], "yourself": 3, "z": 3, "z_est": 3, "z_mask": 3, "zhixiang": 6, "zoom": [4, 15], "zorder": 5}, "titles": ["Acquisition functions", "Advanced tour of the Bayesian Optimization package", "Basic tour of the Bayesian Optimization package", "Constrained Optimization", "Sequential Domain Reduction", "Exploitation vs Exploration", "Bayesian Optimization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bayes_opt.acquisition</span></code>", "<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bayes_opt.acquisition.ConstantLiar</span></code>", "<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bayes_opt.acquisition.ExpectedImprovement</span></code>", "<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bayes_opt.acquisition.GPHedge</span></code>", "<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bayes_opt.acquisition.ProbabilityOfImprovement</span></code>", "<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bayes_opt.acquisition.UpperConfidenceBound</span></code>", "<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bayes_opt.BayesianOptimization</span></code>", "<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bayes_opt.ConstraintModel</span></code>", "<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bayes_opt.SequentialDomainReductionTransformer</span></code>", "Other", "<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bayes_opt.TargetSpace</span></code>", "Visualization"], "titleterms": {"": 18, "0": 5, "1": [1, 2, 3, 5], "10": 5, "1e": 5, "2": [1, 2, 3], "3": [1, 2], "4": [2, 5], "The": 1, "acquisit": [0, 5, 7, 8, 9, 10, 11, 12], "advanc": [1, 3], "after": 18, "algorithm": 18, "alpha": 1, "background": 4, "basic": [2, 4], "bayes_opt": [7, 8, 9, 10, 11, 12, 13, 14, 15, 17], "bayesian": [1, 2, 6], "bayesianoptim": [13, 18], "bound": [2, 5], "chang": [1, 2], "citat": 6, "conda": 6, "confid": 5, "constantliar": 8, "constrain": 3, "constraint": 3, "constraintmodel": 14, "continu": 1, "coupl": 18, "creat": 18, "deal": 1, "defin": 18, "discret": 1, "doe": 6, "domain": 4, "each": 18, "easier": 18, "evalu": 1, "expect": 5, "expectedimprov": 9, "exploit": 5, "explor": 5, "first": 18, "five": 18, "forg": 6, "four": 18, "function": [0, 2, 5, 18], "gaussian": 1, "get": 2, "gp": [1, 18], "gphedg": 10, "guid": 2, "how": 6, "improv": 5, "index": 6, "instal": 6, "kappa": 5, "kernel": 1, "let": 18, "load": 2, "loop": 1, "make": 18, "maxim": 1, "multipl": 3, "next": 2, "note": [9, 11, 12, 14], "object": 18, "observ": 1, "one": 18, "optim": [1, 2, 3, 6], "other": 16, "packag": [1, 2], "paradigm": 1, "paramet": [1, 4], "pass": 1, "pip": 6, "plot": [5, 18], "point": 18, "prefer": 5, "probabilityofimprov": 11, "probabl": 5, "process": 1, "progress": 2, "pypi": 6, "quick": 6, "random": 18, "reduct": 4, "regist": 1, "restart": 2, "save": 2, "sequenti": 4, "sequentialdomainreductiontransform": 15, "seven": 18, "simpl": 3, "simul": 3, "singl": 3, "six": 18, "specifi": 2, "start": 2, "step": [2, 18], "stop": 18, "suggest": 1, "target": 5, "targetspac": 17, "three": 18, "tour": [1, 2], "tune": 1, "two": 18, "underli": 1, "upper": 5, "upperconfidencebound": 12, "util": 5, "v": 5, "via": 6, "visual": 18, "warn": 13, "work": 6, "xi": 5}})