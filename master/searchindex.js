Search.setIndex({"alltitles": {"1. Simple Constrained Optimization": [[4, "1.-Simple-Constrained-Optimization"]], "1. Specifying the function to be optimized": [[2, "1.-Specifying-the-function-to-be-optimized"]], "1. Suggest-Evaluate-Register Paradigm": [[1, "1.-Suggest-Evaluate-Register-Paradigm"]], "1.1 The maximize loop": [[1, "1.1-The-maximize-loop"]], "2. Advanced Constrained Optimization": [[4, "2.-Advanced-Constrained-Optimization"]], "2. Dealing with discrete parameters": [[1, "2.-Dealing-with-discrete-parameters"]], "2. Getting Started": [[2, "2.-Getting-Started"]], "2.1 Changing bounds": [[2, "2.1-Changing-bounds"]], "2.1 Simple, single constraint": [[4, "2.1-Simple,-single-constraint"]], "2.2 Multiple Constraints": [[4, "2.2-Multiple-Constraints"]], "3. Guiding the optimization": [[2, "3.-Guiding-the-optimization"]], "3. Tuning the underlying Gaussian Process": [[1, "3.-Tuning-the-underlying-Gaussian-Process"]], "3.1 Passing parameter to the GP": [[1, "3.1-Passing-parameter-to-the-GP"]], "3.2 Tuning the alpha parameter": [[1, "3.2-Tuning-the-alpha-parameter"]], "3.3 Changing kernels": [[1, "3.3-Changing-kernels"]], "4. Saving, loading and restarting": [[2, "4.-Saving,-loading-and-restarting"]], "4.1 Saving progress": [[2, "4.1-Saving-progress"]], "4.2 Loading progress": [[2, "4.2-Loading-progress"]], "Acquisition Function \u201cExpected Improvement\u201d": [[7, "Acquisition-Function-%22Expected-Improvement%22"]], "Acquisition Function \u201cProbability of Improvement\u201d": [[7, "Acquisition-Function-%22Probability-of-Improvement%22"]], "Acquisition Function \u201cUpper Confidence Bound\u201d": [[7, "Acquisition-Function-%22Upper-Confidence-Bound%22"]], "Acquisition Functions": [[3, "module-bayes_opt.acquisition"]], "Acquisition functions": [[0, null]], "Advanced tour of the Bayesian Optimization package": [[1, null]], "After five steps of GP (and two random points)": [[9, "After-five-steps-of-GP-(and-two-random-points)"]], "After four steps of GP (and two random points)": [[9, "After-four-steps-of-GP-(and-two-random-points)"]], "After one step of GP (and two random points)": [[9, "After-one-step-of-GP-(and-two-random-points)"]], "After seven steps of GP (and two random points)": [[9, "After-seven-steps-of-GP-(and-two-random-points)"]], "After six steps of GP (and two random points)": [[9, "After-six-steps-of-GP-(and-two-random-points)"]], "After three steps of GP (and two random points)": [[9, "After-three-steps-of-GP-(and-two-random-points)"]], "After two steps of GP (and two random points)": [[9, "After-two-steps-of-GP-(and-two-random-points)"]], "Background": [[5, "Background"]], "Basic tour of the Bayesian Optimization package": [[2, null]], "Basics": [[5, "Basics"]], "Bayesian Optimization": [[3, "bayesian-optimization"], [8, null]], "Citation": [[8, "citation"]], "Code Documentation": [[3, null]], "Conda (via conda-forge)": [[8, "conda-via-conda-forge"]], "Constrained Optimization": [[4, null]], "Constraints": [[3, "constraints"]], "Create a BayesianOptimization Object": [[9, "Create-a-BayesianOptimization-Object"]], "Domain reduction": [[3, "domain-reduction"]], "Example Notebooks:": [[6, null]], "Examples": [[6, null]], "Exploitation vs Exploration": [[7, null]], "How does it work?": [[8, "how-does-it-work"]], "Installation": [[8, "installation"]], "Let\u2019s first define a couple functions to make plotting easier": [[9, "Let's-first-define-a-couple-functions-to-make-plotting-easier"]], "Next Steps": [[2, "Next-Steps"]], "Observers Continued": [[1, "Observers-Continued"]], "Parameters": [[5, "Parameters"]], "Plotting and visualizing the algorithm at each step": [[9, "Plotting-and-visualizing-the-algorithm-at-each-step"]], "Prefer exploitation (kappa=0.1)": [[7, "Prefer-exploitation-(kappa=0.1)"]], "Prefer exploitation (xi=0.0)": [[7, "Prefer-exploitation-(xi=0.0)"]], "Prefer exploitation (xi=1e-4)": [[7, "Prefer-exploitation-(xi=1e-4)"]], "Prefer exploration (kappa=10)": [[7, "Prefer-exploration-(kappa=10)"]], "Prefer exploration (xi=0.1)": [[7, "Prefer-exploration-(xi=0.1)"], [7, "id1"]], "Quick Index": [[8, "quick-index"]], "Sequential Domain Reduction": [[5, null]], "Simulation 2": [[4, "Simulation-2"]], "Stopping": [[9, "Stopping"]], "Target Space": [[3, "target-space"]], "Target function": [[7, "Target-function"]], "Two random points": [[9, "Two-random-points"]], "Utility function for plotting": [[7, "Utility-function-for-plotting"]], "Visualization": [[9, null]], "pip (via PyPI)": [[8, "pip-via-pypi"]]}, "docurls": ["acquisition_functions.html", "advanced-tour.html", "basic-tour.html", "code_docs.html", "constraints.html", "domain_reduction.html", "examples.html", "exploitation_vs_exploration.html", "index.html", "visualization.html"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "indexentries": {"acquisition_function (bayes_opt.bayesianoptimization property)": [[3, "bayes_opt.BayesianOptimization.acquisition_function", false]], "acquisitionfunction (class in bayes_opt.acquisition)": [[3, "bayes_opt.acquisition.AcquisitionFunction", false]], "allowed() (bayes_opt.constraint.constraintmodel method)": [[3, "bayes_opt.constraint.ConstraintModel.allowed", false]], "approx() (bayes_opt.constraint.constraintmodel method)": [[3, "bayes_opt.constraint.ConstraintModel.approx", false]], "array_to_params() (bayes_opt.target_space.targetspace method)": [[3, "bayes_opt.target_space.TargetSpace.array_to_params", false]], "base_acq() (bayes_opt.acquisition.acquisitionfunction method)": [[3, "bayes_opt.acquisition.AcquisitionFunction.base_acq", false]], "base_acq() (bayes_opt.acquisition.constantliar method)": [[3, "bayes_opt.acquisition.ConstantLiar.base_acq", false]], "base_acq() (bayes_opt.acquisition.expectedimprovement method)": [[3, "bayes_opt.acquisition.ExpectedImprovement.base_acq", false]], "base_acq() (bayes_opt.acquisition.gphedge method)": [[3, "bayes_opt.acquisition.GPHedge.base_acq", false]], "base_acq() (bayes_opt.acquisition.probabilityofimprovement method)": [[3, "bayes_opt.acquisition.ProbabilityOfImprovement.base_acq", false]], "base_acq() (bayes_opt.acquisition.upperconfidencebound method)": [[3, "bayes_opt.acquisition.UpperConfidenceBound.base_acq", false]], "bayes_opt.acquisition": [[3, "module-bayes_opt.acquisition", false]], "bayesianoptimization (class in bayes_opt)": [[3, "bayes_opt.BayesianOptimization", false]], "bounds (bayes_opt.target_space.targetspace property)": [[3, "bayes_opt.target_space.TargetSpace.bounds", false]], "constantliar (class in bayes_opt.acquisition)": [[3, "bayes_opt.acquisition.ConstantLiar", false]], "constraint (bayes_opt.bayesianoptimization property)": [[3, "bayes_opt.BayesianOptimization.constraint", false]], "constraint (bayes_opt.target_space.targetspace property)": [[3, "bayes_opt.target_space.TargetSpace.constraint", false]], "constraint_values (bayes_opt.target_space.targetspace property)": [[3, "bayes_opt.target_space.TargetSpace.constraint_values", false]], "constraintmodel (class in bayes_opt.constraint)": [[3, "bayes_opt.constraint.ConstraintModel", false]], "decay_exploration() (bayes_opt.acquisition.expectedimprovement method)": [[3, "bayes_opt.acquisition.ExpectedImprovement.decay_exploration", false]], "decay_exploration() (bayes_opt.acquisition.probabilityofimprovement method)": [[3, "bayes_opt.acquisition.ProbabilityOfImprovement.decay_exploration", false]], "decay_exploration() (bayes_opt.acquisition.upperconfidencebound method)": [[3, "bayes_opt.acquisition.UpperConfidenceBound.decay_exploration", false]], "dim (bayes_opt.target_space.targetspace property)": [[3, "bayes_opt.target_space.TargetSpace.dim", false]], "empty (bayes_opt.target_space.targetspace property)": [[3, "bayes_opt.target_space.TargetSpace.empty", false]], "eval() (bayes_opt.constraint.constraintmodel method)": [[3, "bayes_opt.constraint.ConstraintModel.eval", false]], "expectedimprovement (class in bayes_opt.acquisition)": [[3, "bayes_opt.acquisition.ExpectedImprovement", false]], "fit() (bayes_opt.constraint.constraintmodel method)": [[3, "bayes_opt.constraint.ConstraintModel.fit", false]], "gphedge (class in bayes_opt.acquisition)": [[3, "bayes_opt.acquisition.GPHedge", false]], "initialize() (bayes_opt.domain_reduction.sequentialdomainreductiontransformer method)": [[3, "bayes_opt.domain_reduction.SequentialDomainReductionTransformer.initialize", false]], "keys (bayes_opt.target_space.targetspace property)": [[3, "bayes_opt.target_space.TargetSpace.keys", false]], "lb (bayes_opt.constraint.constraintmodel property)": [[3, "bayes_opt.constraint.ConstraintModel.lb", false]], "mask (bayes_opt.target_space.targetspace property)": [[3, "bayes_opt.target_space.TargetSpace.mask", false]], "max (bayes_opt.bayesianoptimization property)": [[3, "bayes_opt.BayesianOptimization.max", false]], "max() (bayes_opt.target_space.targetspace method)": [[3, "bayes_opt.target_space.TargetSpace.max", false]], "maximize() (bayes_opt.bayesianoptimization method)": [[3, "bayes_opt.BayesianOptimization.maximize", false], [3, "id0", false]], "model (bayes_opt.constraint.constraintmodel property)": [[3, "bayes_opt.constraint.ConstraintModel.model", false]], "module": [[3, "module-bayes_opt.acquisition", false]], "params (bayes_opt.target_space.targetspace property)": [[3, "bayes_opt.target_space.TargetSpace.params", false]], "params_to_array() (bayes_opt.target_space.targetspace method)": [[3, "bayes_opt.target_space.TargetSpace.params_to_array", false]], "predict() (bayes_opt.constraint.constraintmodel method)": [[3, "bayes_opt.constraint.ConstraintModel.predict", false]], "probabilityofimprovement (class in bayes_opt.acquisition)": [[3, "bayes_opt.acquisition.ProbabilityOfImprovement", false]], "probe() (bayes_opt.bayesianoptimization method)": [[3, "bayes_opt.BayesianOptimization.probe", false], [3, "id1", false]], "probe() (bayes_opt.target_space.targetspace method)": [[3, "bayes_opt.target_space.TargetSpace.probe", false]], "random_sample() (bayes_opt.target_space.targetspace method)": [[3, "bayes_opt.target_space.TargetSpace.random_sample", false]], "register() (bayes_opt.bayesianoptimization method)": [[3, "bayes_opt.BayesianOptimization.register", false]], "register() (bayes_opt.target_space.targetspace method)": [[3, "bayes_opt.target_space.TargetSpace.register", false]], "res (bayes_opt.bayesianoptimization property)": [[3, "bayes_opt.BayesianOptimization.res", false]], "res() (bayes_opt.target_space.targetspace method)": [[3, "bayes_opt.target_space.TargetSpace.res", false]], "sequentialdomainreductiontransformer (class in bayes_opt.domain_reduction)": [[3, "bayes_opt.domain_reduction.SequentialDomainReductionTransformer", false]], "set_bounds() (bayes_opt.bayesianoptimization method)": [[3, "bayes_opt.BayesianOptimization.set_bounds", false], [3, "id2", false]], "set_bounds() (bayes_opt.target_space.targetspace method)": [[3, "bayes_opt.target_space.TargetSpace.set_bounds", false]], "set_gp_params() (bayes_opt.bayesianoptimization method)": [[3, "bayes_opt.BayesianOptimization.set_gp_params", false]], "space (bayes_opt.bayesianoptimization property)": [[3, "bayes_opt.BayesianOptimization.space", false]], "suggest() (bayes_opt.acquisition.acquisitionfunction method)": [[3, "bayes_opt.acquisition.AcquisitionFunction.suggest", false]], "suggest() (bayes_opt.acquisition.constantliar method)": [[3, "bayes_opt.acquisition.ConstantLiar.suggest", false]], "suggest() (bayes_opt.acquisition.expectedimprovement method)": [[3, "bayes_opt.acquisition.ExpectedImprovement.suggest", false]], "suggest() (bayes_opt.acquisition.gphedge method)": [[3, "bayes_opt.acquisition.GPHedge.suggest", false]], "suggest() (bayes_opt.acquisition.probabilityofimprovement method)": [[3, "bayes_opt.acquisition.ProbabilityOfImprovement.suggest", false]], "suggest() (bayes_opt.acquisition.upperconfidencebound method)": [[3, "bayes_opt.acquisition.UpperConfidenceBound.suggest", false]], "suggest() (bayes_opt.bayesianoptimization method)": [[3, "bayes_opt.BayesianOptimization.suggest", false]], "target (bayes_opt.target_space.targetspace property)": [[3, "bayes_opt.target_space.TargetSpace.target", false]], "targetspace (class in bayes_opt.target_space)": [[3, "bayes_opt.target_space.TargetSpace", false]], "transform() (bayes_opt.domain_reduction.sequentialdomainreductiontransformer method)": [[3, "bayes_opt.domain_reduction.SequentialDomainReductionTransformer.transform", false]], "ub (bayes_opt.constraint.constraintmodel property)": [[3, "bayes_opt.constraint.ConstraintModel.ub", false]], "upperconfidencebound (class in bayes_opt.acquisition)": [[3, "bayes_opt.acquisition.UpperConfidenceBound", false]]}, "objects": {"bayes_opt": [[3, 0, 1, 0, "BayesianOptimization", "Handle optimization of a target function over a specific target space."], [3, 4, 0, 1, "acquisition", ""]], "bayes_opt.BayesianOptimization": [[3, 2, 1, 0, "acquisition_function", "Return the acquisition function associated with the optimizer."], [3, 2, 1, 0, "constraint", "Return the constraint associated with the optimizer, if any."], [3, 2, 1, 0, "max", "Get maximum target value found and corresponding parameters."], [3, 3, 1, "id0", "maximize", "Maximize the given function over the target space."], [3, 3, 1, "id1", "probe", "Evaluate the function at the given points."], [3, 3, 1, 0, "register", "Register an observation with known target."], [3, 2, 1, 0, "res", "Get all target values and constraint fulfillment for all parameters."], [3, 3, 1, "id2", "set_bounds", "Modify the bounds of the search space."], [3, 3, 1, 0, "set_gp_params", "Set parameters of the internal Gaussian Process Regressor."], [3, 2, 1, 0, "space", "Return the target space associated with the optimizer."], [3, 3, 1, 0, "suggest", "Suggest a promising point to probe next."]], "bayes_opt.BayesianOptimization.__init__": [[3, 1, 2, "bayes_opt.BayesianOptimization", "acquisition_function", "Handle optimization of a target function over a specific target space."], [3, 1, 2, 0, "allow_duplicate_points", "If True, the optimizer will allow duplicate points to be registered. This behavior may be desired in high noise situations where repeatedly probing the same point will give different answers."], [3, 1, 2, 0, "bounds_transformer", "If provided, the transformation is applied to the bounds."], [3, 1, 2, 0, "constraint", "constraint function and of f need to be the same."], [3, 1, 2, 0, "f", "Function to be maximized."], [3, 1, 2, 0, "pbounds", "Dictionary with parameters names as keys and a tuple with minimum and maximum values."], [3, 1, 2, 0, "random_state", "If the value is an integer, it is used as the seed for creating a numpy.random.RandomState."], [3, 1, 2, 0, "verbose", "The level of verbosity."]], "bayes_opt.BayesianOptimization.maximize": [[3, 1, 2, 0, "init_points", "Number of iterations before the explorations starts the exploration for the maximum."], [3, 1, 2, 0, "n_iter", "Number of iterations where the method attempts to find the maximum value."]], "bayes_opt.BayesianOptimization.probe": [[3, 1, 2, 0, "lazy", "If True, the optimizer will evaluate the points when calling maximize()."], [3, 1, 2, 0, "params", "The parameters where the optimizer will evaluate the function."]], "bayes_opt.BayesianOptimization.register": [[3, 1, 2, 0, "constraint_value", "Value of the constraint function at the observation, if any."], [3, 1, 2, 0, "params", "The parameters associated with the observation."], [3, 1, 2, 0, "target", "Value of the target function at the observation."]], "bayes_opt.BayesianOptimization.set_bounds": [[3, 1, 2, 0, "new_bounds", "A dictionary with the parameter name and its new bounds"]], "bayes_opt.BayesianOptimization.set_gp_params": [[3, 1, 2, "bayes_opt.BayesianOptimization.set_gp_params", "params", "Set parameters of the internal Gaussian Process Regressor."]], "bayes_opt.acquisition": [[3, 0, 1, 0, "AcquisitionFunction", "Base class for acquisition functions."], [3, 0, 1, 0, "ConstantLiar", "Constant Liar acquisition function."], [3, 0, 1, 0, "ExpectedImprovement", "Expected Improvement acqusition function."], [3, 0, 1, 0, "GPHedge", "GPHedge acquisition function."], [3, 0, 1, 0, "ProbabilityOfImprovement", "Probability of Improvement acqusition function."], [3, 0, 1, 0, "UpperConfidenceBound", "Upper Confidence Bound acquisition function."]], "bayes_opt.acquisition.AcquisitionFunction": [[3, 3, 1, 0, "base_acq", "Provide access to the base acquisition function."], [3, 3, 1, 0, "suggest", "Suggest a promising point to probe next."]], "bayes_opt.acquisition.AcquisitionFunction.__init__": [[3, 1, 2, 0, "random_state", "Set the random state for reproducibility."]], "bayes_opt.acquisition.AcquisitionFunction.base_acq": [[3, 1, 2, "bayes_opt.acquisition.AcquisitionFunction.base_acq", "args", "Provide access to the base acquisition function."], [3, 1, 2, "bayes_opt.acquisition.AcquisitionFunction.base_acq", "kwargs", "Provide access to the base acquisition function."]], "bayes_opt.acquisition.AcquisitionFunction.suggest": [[3, 1, 2, 0, "fit_gp", "Whether to fit the Gaussian Process to the target space. Set to False if the GP is already fitted."], [3, 1, 2, 0, "gp", "A fitted Gaussian Process."], [3, 1, 2, 0, "n_l_bfgs_b", "Number of starting points for the L-BFGS-B optimizer."], [3, 1, 2, 0, "n_random", "Number of random samples to use."], [3, 1, 2, 0, "target_space", "The target space to probe."]], "bayes_opt.acquisition.ConstantLiar": [[3, 3, 1, 0, "base_acq", "Calculate the acquisition function."], [3, 3, 1, 0, "suggest", "Suggest a promising point to probe next."]], "bayes_opt.acquisition.ConstantLiar.__init__": [[3, 1, 2, 0, "atol", "Absolute tolerance to eliminate a dummy point."], [3, 1, 2, 0, "base_acquisition", "The acquisition function to use."], [3, 1, 2, 0, "random_state", "Set the random state for reproducibility."], [3, 1, 2, 0, "rtol", "Relative tolerance to eliminate a dummy point."], [3, 1, 2, 0, "strategy", "Strategy to use for the constant liar."]], "bayes_opt.acquisition.ConstantLiar.base_acq": [[3, 1, 2, "bayes_opt.acquisition.ConstantLiar.base_acq", "args", "Calculate the acquisition function."], [3, 1, 2, "bayes_opt.acquisition.ConstantLiar.base_acq", "kwargs", "Calculate the acquisition function."]], "bayes_opt.acquisition.ConstantLiar.suggest": [[3, 1, 2, 0, "fit_gp", "Whether to fit the Gaussian Process to the target space. Set to False if the GP is already fitted."], [3, 1, 2, 0, "gp", "A fitted Gaussian Process."], [3, 1, 2, 0, "n_l_bfgs_b", "Number of starting points for the L-BFGS-B optimizer."], [3, 1, 2, 0, "n_random", "Number of random samples to use."], [3, 1, 2, 0, "target_space", "The target space to probe."]], "bayes_opt.acquisition.ExpectedImprovement": [[3, 3, 1, 0, "base_acq", "Calculate the expected improvement."], [3, 3, 1, 0, "decay_exploration", "Decay xi by a constant rate."], [3, 3, 1, 0, "suggest", "Suggest a promising point to probe next."]], "bayes_opt.acquisition.ExpectedImprovement.__init__": [[3, 1, 2, 0, "exploration_decay", "Decay rate for xi."], [3, 1, 2, 0, "exploration_decay_delay", ""], [3, 1, 2, 0, "random_state", "Set the random state for reproducibility."], [3, 1, 2, 0, "xi", "Governs the exploration/exploitation tradeoff."]], "bayes_opt.acquisition.ExpectedImprovement.base_acq": [[3, 1, 2, 0, "mean", "Mean of the predictive distribution."], [3, 1, 2, 0, "std", "Standard deviation of the predictive distribution."]], "bayes_opt.acquisition.ExpectedImprovement.suggest": [[3, 1, 2, 0, "fit_gp", "Whether to fit the Gaussian Process to the target space. Set to False if the GP is already fitted."], [3, 1, 2, 0, "gp", "A fitted Gaussian Process."], [3, 1, 2, 0, "n_l_bfgs_b", "Number of starting points for the L-BFGS-B optimizer."], [3, 1, 2, 0, "n_random", "Number of random samples to use."], [3, 1, 2, 0, "target_space", "The target space to probe."]], "bayes_opt.acquisition.GPHedge": [[3, 3, 1, 0, "base_acq", "Raise an error, since the base acquisition function is ambiguous."], [3, 3, 1, 0, "suggest", "Suggest a promising point to probe next."]], "bayes_opt.acquisition.GPHedge.__init__": [[3, 1, 2, 0, "base_acquisitions", "List of base acquisition functions."], [3, 1, 2, 0, "random_state", "Set the random state for reproducibility."]], "bayes_opt.acquisition.GPHedge.base_acq": [[3, 1, 2, "bayes_opt.acquisition.GPHedge.base_acq", "args", "Raise an error, since the base acquisition function is ambiguous."], [3, 1, 2, "bayes_opt.acquisition.GPHedge.base_acq", "kwargs", "Raise an error, since the base acquisition function is ambiguous."]], "bayes_opt.acquisition.GPHedge.suggest": [[3, 1, 2, 0, "fit_gp", "Whether to fit the Gaussian Process to the target space. Set to False if the GP is already fitted."], [3, 1, 2, 0, "gp", "A fitted Gaussian Process."], [3, 1, 2, 0, "n_l_bfgs_b", "Number of starting points for the L-BFGS-B optimizer."], [3, 1, 2, 0, "n_random", "Number of random samples to use."], [3, 1, 2, 0, "target_space", "The target space to probe."]], "bayes_opt.acquisition.ProbabilityOfImprovement": [[3, 3, 1, 0, "base_acq", "Calculate the probability of improvement."], [3, 3, 1, 0, "decay_exploration", "Decay xi by a constant rate."], [3, 3, 1, 0, "suggest", "Suggest a promising point to probe next."]], "bayes_opt.acquisition.ProbabilityOfImprovement.__init__": [[3, 1, 2, 0, "exploration_decay", "Decay rate for xi."], [3, 1, 2, 0, "exploration_decay_delay", "Delay for decay."], [3, 1, 2, 0, "random_state", "Set the random state for reproducibility."], [3, 1, 2, 0, "xi", "Governs the exploration/exploitation tradeoff."]], "bayes_opt.acquisition.ProbabilityOfImprovement.base_acq": [[3, 1, 2, 0, "mean", "Mean of the predictive distribution."], [3, 1, 2, 0, "std", "Standard deviation of the predictive distribution."]], "bayes_opt.acquisition.ProbabilityOfImprovement.suggest": [[3, 1, 2, 0, "fit_gp", "Whether to fit the Gaussian Process to the target space. Set to False if the GP is already fitted."], [3, 1, 2, 0, "gp", "A fitted Gaussian Process."], [3, 1, 2, 0, "n_l_bfgs_b", "Number of starting points for the L-BFGS-B optimizer."], [3, 1, 2, 0, "n_random", "Number of random samples to use."], [3, 1, 2, 0, "target_space", "The target space to probe."]], "bayes_opt.acquisition.UpperConfidenceBound": [[3, 3, 1, 0, "base_acq", "Calculate the upper confidence bound."], [3, 3, 1, 0, "decay_exploration", "Decay kappa by a constant rate."], [3, 3, 1, 0, "suggest", "Suggest a promising point to probe next."]], "bayes_opt.acquisition.UpperConfidenceBound.__init__": [[3, 1, 2, 0, "exploration_decay", "Decay rate for kappa."], [3, 1, 2, 0, "exploration_decay_delay", "Delay for decay."], [3, 1, 2, 0, "kappa", "Governs the exploration/exploitation tradeoff."], [3, 1, 2, 0, "random_state", "Set the random state for reproducibility."]], "bayes_opt.acquisition.UpperConfidenceBound.base_acq": [[3, 1, 2, 0, "mean", "Mean of the predictive distribution."], [3, 1, 2, 0, "std", "Standard deviation of the predictive distribution."]], "bayes_opt.acquisition.UpperConfidenceBound.suggest": [[3, 1, 2, 0, "fit_gp", "Whether to fit the Gaussian Process to the target space. Set to False if the GP is already fitted."], [3, 1, 2, 0, "gp", "A fitted Gaussian Process."], [3, 1, 2, 0, "n_l_bfgs_b", "Number of starting points for the L-BFGS-B optimizer."], [3, 1, 2, 0, "n_random", "Number of random samples to use."], [3, 1, 2, 0, "target_space", "The target space to probe."]], "bayes_opt.constraint": [[3, 0, 1, 0, "ConstraintModel", "Model constraints using GP regressors."]], "bayes_opt.constraint.ConstraintModel": [[3, 3, 1, 0, "allowed", "Check whether constraint_values fulfills the specified limits."], [3, 3, 1, 0, "approx", "Approximate the constraint function using the internal GPR model."], [3, 3, 1, 0, "eval", "Evaluate the constraint function."], [3, 3, 1, 0, "fit", "Fit internal GPRs to the data."], [3, 2, 1, 0, "lb", "Return lower bounds."], [3, 2, 1, 0, "model", "Return GP regressors of the constraint function."], [3, 3, 1, 0, "predict", "Calculate the probability that the constraint is fulfilled at X."], [3, 2, 1, 0, "ub", "Return upper bounds."]], "bayes_opt.constraint.ConstraintModel.__init__": [[3, 1, 2, 0, "fun", "The constraint function."], [3, 1, 2, 0, "lb", "The lower bound on the constraints."], [3, 1, 2, 0, "random_state", "Random state to use."], [3, 1, 2, 0, "ub", "The upper bound on the constraints."]], "bayes_opt.constraint.ConstraintModel.allowed": [[3, 1, 2, 0, "constraint_values", "The values of the constraint function."]], "bayes_opt.constraint.ConstraintModel.approx": [[3, 1, 2, 0, "X", "Parameters for which to estimate the constraint function value."]], "bayes_opt.constraint.ConstraintModel.eval": [[3, 1, 2, "bayes_opt.constraint.ConstraintModel.eval", "kwargs", "Evaluate the constraint function."]], "bayes_opt.constraint.ConstraintModel.fit": [[3, 1, 2, 0, "X", "Parameters of the constraint function."], [3, 1, 2, 0, "Y", "Values of the constraint function."]], "bayes_opt.constraint.ConstraintModel.predict": [[3, 1, 2, 0, "X", "Parameters for which to predict the probability of constraint fulfilment."]], "bayes_opt.domain_reduction": [[3, 0, 1, 0, "SequentialDomainReductionTransformer", "Reduce the searchable space."]], "bayes_opt.domain_reduction.SequentialDomainReductionTransformer": [[3, 3, 1, 0, "initialize", "Initialize all of the parameters."], [3, 3, 1, 0, "transform", "Transform the bounds of the target space."]], "bayes_opt.domain_reduction.SequentialDomainReductionTransformer.__init__": [[3, 1, 2, 0, "eta", "Zooming parameter used to shrink the region of interest."], [3, 1, 2, 0, "gamma_osc", "Parameter used to scale (typically dampen) oscillations."], [3, 1, 2, 0, "gamma_pan", "Parameter used to scale (typically unitary) panning."], [3, 1, 2, 0, "minimum_window", "Minimum window size for each parameter."]], "bayes_opt.domain_reduction.SequentialDomainReductionTransformer.initialize": [[3, 1, 2, 0, "target_space", "TargetSpace this DomainTransformer operates on."]], "bayes_opt.domain_reduction.SequentialDomainReductionTransformer.transform": [[3, 1, 2, 0, "target_space", "TargetSpace this DomainTransformer operates on."]], "bayes_opt.target_space": [[3, 0, 1, 0, "TargetSpace", "Holds the param-space coordinates (X) and target values (Y)."]], "bayes_opt.target_space.TargetSpace": [[3, 3, 1, 0, "array_to_params", "Convert an array representation of parameters into a dict version."], [3, 2, 1, 0, "bounds", "Get the bounds of this TargetSpace."], [3, 2, 1, 0, "constraint", "Get the constraint model."], [3, 2, 1, 0, "constraint_values", "Get the constraint values registered to this TargetSpace."], [3, 2, 1, 0, "dim", "Get the number of parameter names."], [3, 2, 1, 0, "empty", "Check if anything has been registered."], [3, 2, 1, 0, "keys", "Get the keys (or parameter names)."], [3, 2, 1, 0, "mask", "Return a boolean array of valid points."], [3, 3, 1, 0, "max", "Get maximum target value found and corresponding parameters."], [3, 2, 1, 0, "params", "Get the parameter values registered to this TargetSpace."], [3, 3, 1, 0, "params_to_array", "Convert a dict representation of parameters into an array version."], [3, 3, 1, 0, "probe", "Evaluate the target function on a point and register the result."], [3, 3, 1, 0, "random_sample", "Sample a random point from within the bounds of the space."], [3, 3, 1, 0, "register", "Append a point and its target value to the known data."], [3, 3, 1, 0, "res", "Get all target values and constraint fulfillment for all parameters."], [3, 3, 1, 0, "set_bounds", "Change the lower and upper search bounds."], [3, 2, 1, 0, "target", "Get the target function values registered to this TargetSpace."]], "bayes_opt.target_space.TargetSpace.__init__": [[3, 1, 2, 0, "allow_duplicate_points", "If True, the optimizer will allow duplicate points to be registered. This behavior may be desired in high noise situations where repeatedly probing the same point will give different answers."], [3, 1, 2, "bayes_opt.target_space.TargetSpace", "constraint", "Holds the param-space coordinates (X) and target values (Y)."], [3, 1, 2, 0, "pbounds", "Dictionary with parameters names as keys and a tuple with minimum and maximum values."], [3, 1, 2, 0, "random_state", "optionally specify a seed for a random number generator"], [3, 1, 2, 0, "target_func", "Function to be maximized."]], "bayes_opt.target_space.TargetSpace.array_to_params": [[3, 1, 2, 0, "x", "a single point, with len(x) == self.dim."]], "bayes_opt.target_space.TargetSpace.params_to_array": [[3, 1, 2, 0, "params", "a single point, with len(x) == self.dim."]], "bayes_opt.target_space.TargetSpace.probe": [[3, 1, 2, 0, "params", "a single point, with len(x) == self.dim"]], "bayes_opt.target_space.TargetSpace.register": [[3, 1, 2, 0, "constraint_value", "Constraint function value"], [3, 1, 2, 0, "params", "a single point, with len(x) == self.dim."], [3, 1, 2, 0, "target", "target function value"]], "bayes_opt.target_space.TargetSpace.set_bounds": [[3, 1, 2, 0, "new_bounds", "A dictionary with the parameter name and its new bounds"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "parameter", "Python parameter"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "module", "Python module"]}, "objtypes": {"0": "py:class", "1": "py:parameter", "2": "py:property", "3": "py:method", "4": "py:module"}, "terms": {"": [0, 1, 3, 4, 5, 7, 8], "0": [0, 1, 2, 3, 4, 5, 9], "000000000116973": 4, "0002287496346898": 2, "0008684793556073": 4, "005532": 2, "0084": 2, "0087879313090253": 4, "01": [0, 9], "015": 2, "0154397119682423": 2, "016": [0, 2], "018": 1, "01894": 1, "019": 1, "02003": 1, "02025": 1, "021127762033562": 4, "022": 1, "02272": 2, "024": 0, "025": 0, "026": 0, "02617": 1, "02644400210430190": 8, "027": 0, "02816": 2, "0288343947238228": 2, "029": [1, 2], "034": 2, "0344": 1, "03683": 1, "039": 0, "043": [1, 2], "04359": 1, "045": 2, "04749": 2, "05": [1, 3], "057": 1, "05801": 1, "06": 8, "06199": 1, "065": 1, "069": 2, "06916": 2, "07374": 2, "076": 0, "07699": 1, "07993": 2, "08": [1, 3], "08078": 1, "0819533157901717": 1, "084": 1, "085": 1, "089": 1, "0929": 1, "093": [1, 2], "096": 1, "0x23439267280": 5, "0x23439267fd0": 5, "1": [0, 3, 5, 6, 9], "10": [0, 1, 2, 3, 4, 5, 8, 9], "100": [0, 3, 4], "1000": [0, 4], "10000": [0, 3, 7, 9], "1009": 3, "1052": 1, "1071": 1, "109": 9, "10_000": 3, "11": [1, 2, 4, 5, 9], "1108": 8, "1166": 2, "12": [1, 2, 4, 9], "13": [0, 1, 2, 4, 9], "132": 0, "133": [1, 9], "135": 2, "135455292718879": 2, "1372": 1, "1396": 2, "13961016009280103": 2, "14": [1, 2, 4, 9], "141": 9, "15": [0, 1, 2, 4, 9], "1501": 2, "153": 1, "1538": 1, "16": [0, 1, 2, 4, 7, 9], "168": 2, "17": [1, 2, 4], "173": 0, "175": 2, "18": [1, 2], "184": 1, "186": 2, "1860045642089614": 2, "1865": 1, "188": 1, "19": [1, 2, 8], "193": 2, "1_000": 0, "1d": 6, "1e": [0, 1, 3], "2": [0, 3, 5, 6, 7, 9], "20": [0, 1, 2, 5, 9], "2002": [5, 8], "2014": [4, 8], "202": 9, "21": [1, 2], "212": 9, "2165": 1, "2177": 1, "2187": 1, "22": 1, "22703572807626315": 1, "229": 2, "23": 1, "230305457787476": 4, "235835023240657": 2, "2361": 0, "237": 1, "24": [1, 2], "2488": 1, "25": [1, 3], "26": 1, "2606": 1, "266": 2, "267": 0, "269540259274744": 1, "27": [1, 9], "271": 2, "272": 1, "278": 1, "28": 1, "287": 1, "29": 1, "292": 1, "2948": 1, "296": 1, "2975037081163068": 4, "3": [0, 4, 5, 6, 7, 9], "30": [0, 1, 9], "301617813728339": 2, "302": 2, "307": 1, "3202": 1, "3219469606529486": [1, 2], "322": [1, 2], "3319": 1, "331911981189704": 1, "33253689": 3, "3338": 2, "337": 1, "339": 1, "35": 2, "353": 1, "378": 2, "385": 9, "39": [1, 2, 4], "397": 1, "398": 1, "4": [0, 1, 3, 4, 5, 6, 9], "406": 1, "4178": 2, "42": [0, 7], "4249238905875123": 1, "442": 1, "444": 1, "446": 2, "45": 0, "452": 1, "458": 1, "463": 1, "467": 1, "472": 1, "4758": 1, "477": 1, "48": 2, "4802": 1, "5": [0, 1, 2, 3, 4, 5, 7, 9], "50": [5, 7], "50219704520679": 1, "503835804889988": 1, "5044": 2, "511": 0, "512": 1, "514": 1, "518": 1, "523": 0, "525": 0, "534": 1, "535": 1, "5419": 3, "5426": 0, "54488318": 3, "55": 3, "556": 1, "558": 1, "562": 1, "565": 2, "5721": 0, "576": 3, "579": 1, "582": 2, "5822074982517598": 2, "59": 1, "599": 1, "6": [0, 1, 2, 3, 4, 5, 7, 9], "6032": 1, "612": 9, "615": 1, "616": 1, "6164": 2, "617": 0, "64727683929071": 4, "649": 1, "651": 2, "6535": 2, "658": 1, "66": 2, "6605": 2, "664242699361514": 1, "683": 1, "684": 1, "6926": 1, "694": 1, "7": [0, 1, 2, 3, 4, 5, 7, 9], "704": 1, "7146": 2, "7342": 0, "737": 1, "746": 9, "747604713731052": 1, "755": 1, "758": 2, "764": 1, "775": 9, "778": 1, "779531005607566": 2, "78": 2, "7821": 2, "783": 1, "7861845912690544": 1, "7862": 1, "7949": 1, "7971": 9, "7985": 0, "8": [0, 1, 2, 3, 4, 5, 7, 9], "80": 4, "801": 0, "813": 2, "8131": 1, "8198": 9, "82": 0, "83": [1, 2], "834": 2, "8340440094051482": 2, "8427": 2, "8458666395359906": 2, "846": [1, 2], "848": 9, "851": 1, "854": [1, 2], "857": 0, "8586": 1, "861": 1, "863": 1, "872282989383577": 1, "875": 0, "8809": 0, "8877": 0, "8917": 2, "9": [0, 1, 2, 3, 4, 5, 7, 9], "9135": 9, "917": 1, "919": 1, "9227": 0, "925": 1, "9266": 2, "928": 1, "931": 1, "9313": 1, "932": 0, "934": 0, "935": 1, "937": 8, "941": 1, "9421": 2, "943": 1, "9434": 2, "945": 8, "9471": 2, "9475": 1, "95": [0, 9], "953": 0, "953072105336": 1, "954": 0, "955": 0, "957": 1, "96": 1, "9600": [0, 9], "9609778030491904": 1, "961": 0, "962": 0, "964": 0, "966": 1, "966506881014352": 2, "967": 2, "9675": 9, "9682431497650823": 1, "969": 1, "971": 1, "973": 1, "9734131381980626": 4, "9737252084307952": 1, "974": 2, "975": 0, "9757": 2, "976": 2, "9778": 2, "9819": 2, "987": 1, "987234": 7, "988": 2, "99": 0, "9912": 2, "994467585936897": 1, "995": 2, "9958": 0, "997": 2, "9973": 0, "998": [1, 9], "9988": 2, "999": 9, "9991881984624875": 1, "99963711795217": 2, "9997": 2, "9999": 1, "9999891845990944": 4, "A": [3, 4, 9], "And": 1, "As": [0, 2, 8], "At": [2, 3, 8], "By": [1, 2], "For": [0, 1, 2, 3, 4, 8], "If": [0, 1, 2, 3, 8], "In": [0, 1, 3, 4, 9], "It": [2, 3, 5, 9], "NOT": 1, "On": [3, 5, 8], "One": [0, 1], "Or": 2, "That": 3, "The": [0, 2, 3, 4, 5, 9], "Then": 3, "There": [1, 2, 4, 5], "These": 5, "To": [2, 4, 8], "Will": 1, "_": 1, "__init__": 0, "_fit_gp": [0, 9], "_get_acq": [0, 9], "_gp": [0, 4, 7, 9], "_kei": 3, "_space": [0, 9], "a_": 4, "ab": 3, "abl": [2, 4, 9], "about": [2, 8], "abov": [1, 4], "absolut": 3, "abstract": 3, "accept": 0, "access": [0, 2, 3, 4], "accordingli": 4, "account": [2, 8], "acklei": 5, "acq": [0, 1, 4, 9], "acq_i": 3, "acquisit": [1, 2, 4, 6, 8, 9], "acquisition_funct": [0, 1, 3, 7, 9], "acquisition_function_": 0, "acquisitionfunct": [0, 1, 3], "acqusit": 3, "across": 7, "activ": 8, "actual": [4, 5], "ad": 0, "addit": [4, 8], "addition": [0, 4, 8, 9], "adequ": [1, 2, 8], "adjust": [0, 3], "admittedli": 4, "advanc": [2, 6, 8], "advantag": 5, "after": [0, 3, 5], "again": 3, "aid": 8, "al": [3, 4], "albeit": [2, 8], "alert": 2, "algorithm": [1, 2, 3, 6, 8], "all": [0, 1, 2, 3], "alloc": 3, "allow": [1, 2, 3, 4, 9], "allow_duplicate_point": [3, 4], "along": 4, "alpha": [0, 7, 9], "alphabet": 2, "alreadi": [3, 4], "also": [0, 2, 3], "alter": 2, "altern": 1, "alwai": [0, 3], "ambigu": 3, "amort": 3, "an": [0, 1, 2, 3, 4, 5, 8], "ani": [1, 2, 3, 8], "anoth": [1, 4], "answer": 3, "anyth": [3, 8], "append": 3, "appli": [3, 5], "applicap": 0, "approach": 4, "approx": [3, 4], "approxim": [3, 4], "ar": [0, 1, 2, 3, 4, 5, 7, 8], "area": 4, "arg": 3, "arg1": 5, "arg2": 5, "argmax": [0, 9], "argument": [0, 3, 4], "around": [1, 5, 7], "arrai": [0, 3, 4, 9], "array_to_param": 3, "articl": 8, "arxiv": 3, "assert": [0, 1, 3], "assess": 4, "associ": [1, 2, 3], "assum": [3, 4], "async_optim": 1, "asynchron": 3, "atleast_2d": 0, "atol": 3, "attempt": [2, 3, 8], "author": [5, 8], "automat": [3, 4], "avail": 2, "avoid": 4, "awai": 0, "awar": 2, "ax": [0, 4], "ax2": 0, "axi": [0, 5, 9], "b": [3, 5], "back": [1, 2], "background": 6, "bad": 4, "balanc": [2, 8, 9], "base": [0, 3, 4, 5, 8], "base_acq": [0, 3], "base_acquisit": 3, "basic": [6, 8], "basicobserv": 1, "bayes_opt": [0, 1, 2, 3, 4, 5, 7, 9], "bayesian": [4, 6, 9], "bayesianoptim": [0, 1, 2, 3, 4, 5, 6, 7, 8], "bbox_to_anchor": [0, 9], "becaus": 4, "becom": [0, 2, 8], "been": [3, 4], "befor": [2, 3, 4], "begin": 0, "behavior": [3, 4], "being": [1, 9], "below": [1, 2, 4, 8], "benefici": 1, "best": [0, 1, 2, 4, 8, 9], "better": 1, "between": [2, 4, 8, 9], "bewar": 2, "bfg": 3, "bit": 4, "black": 4, "black_box_funct": [1, 2], "black_box_function_no_constraint": 4, "black_box_function_with_constraint": 4, "blackbox": 1, "block": 8, "bo": [2, 7], "bold": 9, "booktitl": 8, "bool": [0, 3], "boolean": 3, "borderaxespad": [0, 9], "both": [3, 4, 5], "bottom": 4, "bound": [1, 3, 4, 5, 6, 8, 9], "bound_transform": 5, "boundari": 3, "bounds_transform": [3, 5], "bounds_transformers_iter": 5, "box": [0, 2], "brochu": 3, "brows": 2, "bug": 8, "build": 8, "built": [0, 2, 5, 8], "c": [0, 3, 4, 7, 8, 9], "c_": 4, "c_1": 4, "c_2": 4, "c_est": 4, "c_label": 4, "c_n": 4, "cach": 3, "calcul": [3, 5], "call": [0, 1, 2, 3, 4], "callabl": 3, "callback": 1, "can": [0, 1, 2, 3, 4, 5, 8, 9], "candid": 3, "carri": 1, "case": [0, 1, 2, 3, 4, 9], "catch_warn": 0, "categor": 8, "caveat": 2, "cdf": 3, "central": 8, "certain": [2, 4, 8], "chang": [0, 3, 8], "charg": 1, "cheap": [0, 4], "cheaper": [2, 8], "check": [3, 4, 8], "checkout": [1, 2], "chemistri": 1, "choos": 9, "chosen": 2, "cite": 8, "class": [0, 1, 3], "clear": [1, 2], "close": [2, 4, 8, 9], "cm": 4, "cmap": 4, "co": [4, 5], "code": 4, "codifi": 4, "color": [0, 9], "com": 8, "combin": [0, 1, 2, 4, 8], "come": 0, "common": [2, 8], "complet": [1, 5], "complex": 4, "comput": [0, 2, 4, 8], "concaten": [0, 9], "concurr": 1, "condit": [3, 4], "confid": [0, 2, 3, 6, 8, 9], "configur": 4, "consequ": 4, "conserv": 9, "consid": [0, 3, 4], "constant": 3, "constantliar": 3, "constitut": 4, "constrain": [0, 2, 6, 8], "constrained_layout": 4, "constraint": [0, 6, 8], "constraint_funct": 4, "constraint_function_2_dim": 4, "constraint_limit": 4, "constraint_low": 4, "constraint_upp": 4, "constraint_valu": 3, "constraint_vbound": 4, "constraintmodel": [3, 4], "constraintnotsupportederror": 0, "construct": [2, 4, 8, 9], "contain": 4, "continu": 6, "contour": 4, "contourf": 4, "contract": 5, "control": [1, 2, 8, 9], "converg": 5, "convert": 3, "coolwarm": 4, "coordin": 3, "copi": 3, "core": 1, "correct": 8, "correspond": [2, 3, 8, 9], "cost": [0, 2, 5, 8], "could": [0, 1, 2, 4], "cours": 2, "cov": 0, "cover": 2, "craig": [3, 5, 8], "creat": [3, 4, 5, 6], "cross": 8, "cumul": 3, "cunningham": 8, "current": [0, 9], "d": [0, 1, 9], "dampen": 3, "data": [3, 9], "date": 5, "dc": 3, "deal": [6, 8], "decai": 3, "decay_explor": 3, "deeper": 0, "def": [0, 1, 2, 3, 4, 5, 7, 9], "default": [0, 1, 2, 3, 4, 5], "default_ev": 1, "defin": [1, 4, 5], "definit": 0, "delai": 3, "demonstr": 4, "depend": [0, 1, 2], "describ": [2, 4, 8], "design": [2, 8], "desir": [3, 4], "detail": 8, "determin": [2, 8], "develop": 8, "deviat": [0, 3], "dict": 3, "dictat": 0, "dictionari": [2, 3], "differ": [0, 1, 3, 4, 9], "dim": [0, 3], "dimens": 3, "dimension": [3, 4], "directli": [0, 1, 4], "disallow": 4, "disclaim": 2, "discourag": 3, "discret": 6, "discuss": [2, 8], "disregard": 0, "distinct": 4, "distribut": [1, 2, 3, 8, 9], "diversifi": 2, "divid": 0, "do": [0, 1, 2, 4, 8], "doc": 1, "document": 5, "doe": [0, 1, 2, 3], "doesn": 1, "doi": 8, "domain": [4, 6, 8], "domain_reduct": 3, "domaintransform": 3, "don": [1, 2, 3], "dot": 4, "dtype": 5, "due": [4, 9], "dummi": 3, "duplic": [3, 4], "dure": 2, "dynam": 8, "e": [2, 4, 5, 9], "each": [2, 3, 4, 6, 8], "easi": [0, 1], "easiest": 2, "ec": [0, 9], "eddi": 8, "edgecolor": 4, "ei": [0, 2, 3, 8], "eipu": 0, "either": 9, "elimin": 3, "els": [0, 4], "embed": 4, "emploi": [2, 4, 8], "empti": 3, "encourag": 0, "end": 1, "endeavor": [2, 8], "eng": 8, "engin": 8, "enough": [0, 2], "enter": 9, "enumer": 2, "equal": [0, 4], "errat": 1, "error": [3, 4], "estim": [0, 3, 4], "et": [3, 4], "eta": [3, 5], "etc": 1, "eval": 3, "evalu": [0, 2, 3, 4, 6], "even": [0, 1, 4], "event": [1, 2], "everi": [2, 5], "exactli": 2, "exampl": [0, 1, 2, 3, 4, 5, 8, 9], "except": [4, 5], "execut": 1, "exemplifi": 8, "exist": 2, "exp": [0, 5, 7, 9], "expect": [0, 2, 3, 6, 8], "expectedimprov": [0, 3, 7], "expectedimprovementperunitcost": 0, "expens": [0, 2, 4, 5, 8], "experi": [0, 1], "explicitli": 4, "exploit": [2, 3, 6, 8, 9], "explor": [0, 2, 3, 6, 8, 9], "exploration_decai": [0, 3], "exploration_decay_delai": [0, 3], "extra": 1, "extract": 4, "f": [0, 1, 2, 3, 4, 5, 7, 9], "factor": 0, "fall": 4, "fals": [3, 4], "fashion": [1, 8], "fc": [0, 9], "feasibl": 4, "featur": [2, 8], "feel": 2, "fernando": 8, "few": [0, 2, 4, 8, 9], "fig": [0, 4, 9], "figsiz": [0, 4, 7, 9], "figur": [0, 4, 7, 9], "file": [2, 8], "fill": [0, 9], "fill_between": 7, "final": 8, "find": [0, 1, 2, 3, 4, 8], "fire": [1, 2], "first": 2, "fit": [2, 3, 8, 9], "fit_gp": [0, 3], "fix": 0, "flatten": [0, 7, 9], "flexibl": [1, 8], "float": [3, 5], "fly": 4, "folder": [1, 2], "follow": [0, 2, 4, 8, 9], "fontdict": [0, 9], "fontsiz": [0, 9], "form": 4, "format": [0, 1, 2, 9], "found": [1, 2, 3, 4, 5, 8], "frac": [3, 9], "free": [1, 9], "from": [0, 1, 2, 3, 4, 5, 7, 9], "fromit": 5, "fulfil": [0, 3, 4], "fun": [3, 4], "func_with_discrete_param": 1, "function": [1, 4, 5, 6, 8], "function_to_be_optim": 1, "fundament": 9, "further": [0, 9], "g": [0, 9], "gain": 3, "gamma_": 5, "gamma_osc": 3, "gamma_pan": 3, "gardner": [4, 8], "gardner2014bayesian": 8, "gaussian": [0, 2, 3, 4, 6, 8, 9], "gaussianprocessregressor": 3, "gener": [2, 3, 4], "get": [0, 1, 3, 4, 6, 9], "get_legend_handles_label": 0, "gif": [2, 8], "github": 8, "give": [1, 3, 9], "given": [1, 3, 4], "global": [2, 8], "go": [1, 4, 8, 9], "gold": [0, 9], "good": [2, 4], "got": 1, "govern": 3, "gp": [0, 3], "gphedg": 3, "gpr": 3, "gradient": 0, "greedi": 0, "greedyacquisit": 0, "green": 4, "grid": [0, 4, 9], "gridspec": [0, 9], "grow": [2, 8, 9], "gt": [4, 5], "guess": [0, 9], "guid": [1, 3, 4, 6], "guidanc": 2, "ha": [2, 3, 4, 5, 9], "handl": [1, 3, 4], "happen": 2, "hard": [2, 8], "hashabl": 1, "hasn": 1, "hault": 1, "have": [1, 2, 3, 4, 5, 9], "heavili": 5, "height_ratio": [0, 9], "help": 2, "here": [0, 1, 2, 4, 9], "high": [2, 3, 8], "higher": [0, 3], "hold": 3, "hone": 4, "how": [0, 1, 2, 4, 5, 9], "howev": [1, 2], "http": [3, 8], "hyper": 1, "i": [0, 1, 2, 3, 4, 5, 8, 9], "icml": 8, "idea": [2, 4, 8], "ident": 5, "ignor": [0, 1], "illustr": 4, "implement": [0, 2, 8], "impli": 4, "import": [0, 1, 2, 4, 5, 7, 8, 9], "imposs": 1, "improv": [0, 1, 2, 3, 6, 8], "includ": 3, "increas": 1, "independ": [3, 4], "individu": 3, "inequ": 8, "inf": 4, "infeas": 4, "infer": [2, 8], "inform": [2, 3, 5, 8, 9], "ingredi": [1, 2], "init_point": [0, 1, 2, 3, 4, 5, 9], "initi": [3, 5, 9], "inlin": 9, "inproceed": 8, "instanc": [1, 2, 4], "instanti": [1, 2], "int": [1, 3], "int_": 3, "integ": 3, "intent": 2, "interest": [0, 3, 4, 5, 9], "intern": [1, 2, 3, 4, 8], "interv": [0, 9], "interven": 0, "intuit": 1, "investig": 0, "invok": [1, 2], "isn": 4, "issu": 8, "iter": [0, 1, 2, 3, 5, 8, 9], "its": [0, 1, 2, 3, 8, 9], "j": [4, 8], "jacob": 8, "john": 8, "joint": 3, "journal": 8, "jsonlogg": 2, "just": [2, 9], "k": [0, 3, 5, 9], "kappa": [1, 3, 9], "kei": [2, 3], "kenneth": 8, "keyword": 4, "kick": 9, "kilian": 8, "know": [2, 4, 8], "known": [2, 3, 4, 8, 9], "kusner": 8, "kwarg": [3, 5], "l": 3, "label": [0, 4, 5, 9], "labels2": 0, "labels_bot": 4, "labels_top": 4, "lambda": [0, 3], "languag": 1, "larger": 9, "last": [1, 4], "last_x": 0, "later": 0, "lazi": [2, 3], "lazili": 2, "lb": [3, 4], "learn": [1, 4, 8], "left": [1, 3], "legend": [0, 5, 9], "len": [0, 2, 3, 5, 9], "leq": [3, 4], "less": [3, 9], "let": [0, 1, 4, 5, 8], "level": [0, 3], "liar": 3, "lie": [2, 4], "like": [0, 1, 2, 3, 4, 9], "lim": 4, "limit": [3, 4], "line": 0, "linear": 5, "lines2": 0, "linewidth": [0, 9], "linspac": [0, 4, 7, 9], "list": [1, 2, 3, 5], "listen": [1, 2], "literatur": 1, "ll": 5, "load": [0, 6], "load_log": 2, "loc": [0, 9], "local": 9, "log": [1, 2], "logger": 2, "long": 1, "look": [1, 2, 4, 8], "low": [3, 4], "lower": [3, 4, 5], "lt": 5, "machin": [1, 8], "magnitud": [3, 4], "mai": [1, 2, 3, 4], "main": 2, "make": 8, "mani": [0, 2], "markeredgecolor": [0, 9], "markeredgewidth": [0, 9], "markerfacecolor": [0, 9], "markers": [0, 9], "mask": [3, 4], "match": 3, "matern": 1, "mathcal": 3, "mathemat": 4, "matplotlib": [0, 4, 5, 7, 9], "matrix": 0, "matt": 8, "max": [0, 1, 2, 3, 4, 9], "max_": 4, "maxim": [0, 2, 3, 4, 5, 7, 9], "maxima": [4, 9], "maximum": [0, 2, 3, 4, 8, 9], "mayb": 1, "mean": [0, 1, 2, 3, 4, 7], "mechan": 0, "meshgrid": 4, "method": [0, 1, 2, 3, 5, 8], "might": [0, 1, 2, 4], "min": [3, 4], "minim": [2, 8], "minima": 9, "minimum": [2, 3, 4, 9], "minimum_window": [3, 5], "minut": 0, "misc": 8, "model": [3, 4, 8], "modifi": [3, 4], "moment": 3, "month": 8, "more": [0, 1, 2, 3, 5, 7, 8, 9], "most": [0, 2, 5, 7, 8], "msg": 0, "mu": [0, 3, 9], "much": [1, 2, 4], "multi": 4, "multipl": [3, 9], "multivari": 0, "multivariate_norm": 0, "must": [0, 2, 4], "mutat": 5, "mutating_optim": 5, "my_callback": 1, "my_observ": 1, "n": [2, 3, 4, 5], "n_constraint": [3, 4], "n_featur": 3, "n_iter": [0, 1, 2, 3, 4, 5, 7, 9], "n_l_bfgs_b": [0, 3], "n_plots_per_row": 4, "n_random": [0, 3], "n_restarts_optim": 1, "n_sampl": 3, "name": [3, 4], "nan": 4, "nativ": 2, "natur": [1, 2, 4], "ndarrai": 3, "ndarrrai": 3, "necess": 1, "necessari": 9, "need": [1, 2, 3, 4, 5, 8], "new": [2, 3], "new_bound": [2, 3], "new_optim": 2, "next": [0, 1, 3, 4, 6, 8, 9], "next_point": 1, "next_point_to_prob": 1, "nielen": 8, "nogueira": 8, "nois": [1, 3], "noisi": 0, "non": [4, 5], "none": [0, 1, 3, 9], "nonetheless": 2, "nonlinearconstraint": 4, "normal": [0, 3, 4], "note": [3, 4, 7], "notebook": [0, 2, 4, 8], "notic": [1, 9], "notuniqueerror": 3, "now": [1, 2, 4, 5], "np": [0, 3, 4, 5, 7, 9], "number": [2, 3, 4, 8, 9], "numpi": [0, 3, 4, 5, 7, 9], "nut": 1, "object": [1, 2, 4, 5, 6], "observ": [0, 2, 3, 4, 6, 8, 9], "obtain": [2, 9], "obviou": 5, "obvious": 2, "occasion": [3, 4], "off": [3, 9], "often": 2, "ok": [1, 4], "one": [0, 4, 5], "ones": 2, "onli": [1, 2, 4, 5, 9], "onto": [2, 5], "open": 8, "oper": [0, 3, 4], "opt": 0, "optim": [0, 5, 6, 9], "optimization_start": 1, "optimization_step": [1, 2], "option": [1, 3], "orang": 0, "order": [0, 2, 3, 4], "org": 3, "origin": 4, "osc": 5, "oscil": [3, 5], "other": [0, 2, 3, 4, 8], "otherwis": 3, "our": [0, 1, 2, 4, 5, 9], "out": [0, 1, 2, 7, 8], "output": 2, "over": [0, 1, 2, 3, 8], "overal": 3, "overwrit": 0, "own": 1, "p": [3, 8], "p1": 3, "p2": 3, "p_allow": 4, "p_c": 0, "packag": [0, 4, 5, 8, 9], "page": [3, 8], "pain": 4, "pan": [3, 5], "paper": 4, "paradigm": [2, 6], "param": [0, 1, 2, 3, 4, 5, 7, 9], "paramet": [0, 2, 3, 4, 6, 8, 9], "params_to_arrai": 3, "particular": [0, 1, 2], "particularli": [1, 2, 5, 8], "pass": 2, "path": 2, "pbound": [1, 2, 3, 4, 5, 7], "pdf": 3, "peak": 7, "per": 0, "perform": [0, 1, 2, 5], "phase": 5, "phi": 3, "pi": 5, "pictur": [2, 8], "place": 4, "pleas": [2, 8], "plot": [0, 4, 5, 6], "plot_bo": 7, "plot_constrained_opt": 4, "plot_gp": [0, 9], "plt": [0, 4, 5, 7, 9], "poi": 3, "point": [0, 1, 2, 3, 4, 5, 7, 8], "polici": 0, "portfolio": 3, "posit": 3, "possibl": [2, 8], "posterior": [0, 2, 8, 9], "pr": 3, "practic": [0, 9], "predict": [0, 1, 3, 4, 7, 9], "prefer": [3, 4], "present": [3, 8], "pretti": [4, 9], "previous": [2, 3, 8], "principl": 1, "print": [0, 1, 2, 4], "prior": 0, "probabilityofimprov": [3, 7], "probabl": [0, 3, 4, 6], "probe": [1, 2, 3, 4, 9], "problem": [1, 2, 4, 5, 8], "proce": 4, "procedur": 9, "process": [0, 2, 3, 4, 5, 6, 8, 9], "product": 3, "progress": 1, "project": 8, "promis": 3, "proper": [2, 8], "properti": [2, 3, 4], "provid": [3, 4], "proxi": [2, 8], "public": 8, "pure": 8, "purpl": [0, 9], "purpos": 2, "push": 0, "py": 1, "pyplot": [0, 4, 5, 7, 9], "python": 8, "q": 8, "quadrat": 4, "qualiti": 1, "quick": 5, "quickli": 4, "quit": [0, 5, 9], "r": [0, 4, 8, 9], "rais": [0, 3, 4], "random": [0, 1, 2, 3, 7], "random_sampl": 3, "random_st": [0, 1, 2, 3, 4, 5, 7, 9], "randomst": 3, "rang": [0, 1, 4, 5, 7, 9], "rate": 3, "re": [0, 1, 2, 3, 4, 9], "read": 4, "real": 2, "realiz": 2, "reason": [1, 4], "receiv": 0, "recent": [0, 5], "recreat": 1, "red": [4, 7], "reduc": [0, 3, 5], "reduct": [6, 8], "refer": [2, 4, 5, 8], "reformul": 4, "region": [2, 3, 4, 5, 8], "regist": [3, 4, 6], "regress": 1, "regressor": [3, 4], "rel": [3, 5], "remov": 0, "repeat": 1, "repeatedli": [3, 4], "report": 3, "represent": 3, "reproduc": 3, "requir": [0, 2, 5, 8], "rerun": 4, "research": 8, "reshap": [0, 4, 7, 9], "respect": [3, 4], "restart": 6, "restrict": 9, "result": [1, 3, 4], "return": [0, 1, 2, 3, 4, 5, 7, 9], "return_cov": 0, "return_std": [0, 7, 9], "reward": 3, "right": 3, "rightarrow": 1, "robust": [3, 5, 8], "routin": 5, "row": 4, "rtol": 3, "run": [0, 1, 3, 4], "sai": 0, "same": [3, 4], "sampl": [0, 2, 3, 4, 8], "satisfi": 3, "save": 6, "scale": 3, "scan": 3, "scatter": [4, 7], "scenario": 2, "scheme": [3, 5, 8], "scikit": 1, "scipi": 4, "script": [1, 8], "search": [3, 5, 8], "searchabl": 3, "section": 8, "see": [0, 2, 3, 4, 5, 8], "seed": [3, 7], "seem": 4, "seen": [2, 3, 5, 8], "select": [0, 3], "self": [0, 1, 3], "sens": [2, 8], "sequenti": [3, 6, 9], "sequentialdomainreductiontransform": [3, 5], "sequentialdomaintransform": 8, "serv": 2, "server": 1, "set": [0, 2, 3, 4, 5, 9], "set_aspect": 4, "set_bound": [2, 3], "set_gp_param": [1, 3], "set_titl": 4, "set_xlabel": [0, 9], "set_xlim": [0, 9], "set_ylabel": [0, 9], "set_ylim": [0, 9], "setup": 4, "sever": 0, "shape": [0, 3, 4], "shift": 5, "should": [1, 2, 3, 4, 8, 9], "shouldn": 2, "show": [3, 4, 7], "showcas": [0, 1], "shrink": [3, 5], "shrinkag": 5, "sigma": [0, 3, 7, 9], "sign": 4, "silent": [2, 4], "similar": [3, 4], "similarli": 4, "simpl": [0, 1, 3, 5, 6, 8], "simplefilt": 0, "simpli": [1, 3, 4], "simul": [1, 3, 5, 6, 8], "sin": 4, "sinc": [0, 1, 3, 4], "singl": [3, 6], "situat": [0, 1, 2, 3, 4, 8], "size": [0, 3, 4, 9], "skip": 0, "slightli": 4, "so": [1, 2, 4, 8], "softwar": 8, "sole": 0, "solut": [1, 4], "solv": 4, "some": [0, 1, 2, 4], "somewhat": 0, "sourc": [3, 8], "space": [0, 1, 2, 4, 5, 7, 8, 9], "special": 0, "specif": [0, 1, 2, 3, 4], "specifi": [1, 3, 6], "sped": 8, "sphinx": 3, "spread": 7, "sqrt": 5, "squar": 0, "squeez": 4, "standard": [0, 3, 4, 5], "standard_optim": 5, "stander": [3, 5, 8], "start": [1, 3, 4, 5, 6, 9], "state": 3, "statement": 0, "std": [0, 3], "step": [0, 1, 3, 5, 6, 8], "still": [2, 8], "stop": [1, 6], "store": [2, 4], "str": 3, "strategi": [2, 3, 8], "stuck": 9, "subj": 4, "submodul": 2, "subplot": [0, 4, 9], "subscrib": [1, 2], "subscript": 1, "succes": 9, "suggest": [0, 3, 6, 8], "suit": [2, 8], "super": 0, "super_acq": 0, "support": 0, "suptitl": [0, 9], "surfac": 1, "surrog": 4, "surrogate_object": 4, "swapax": 4, "switch": 4, "t": [1, 2, 3, 4], "take": [0, 1, 2, 3, 4, 8], "target": [0, 1, 2, 4, 5, 6, 8, 9], "target_func": 3, "target_funct": 4, "target_spac": [0, 3], "target_vbound": 4, "targetspac": 3, "techniqu": [2, 5, 8], "tell": 1, "test": 9, "text": [3, 4], "thei": [1, 3], "them": [2, 4], "therefor": [2, 5, 8], "thi": [0, 1, 2, 3, 4, 5, 8, 9], "thing": [0, 1], "think": [1, 2], "thompson": 0, "thompsonsampl": 0, "three": 5, "through": 0, "thu": 4, "tild": 3, "time": [1, 2, 3, 4, 5], "tip": [2, 8], "titl": [4, 5, 8], "toler": 3, "too": [0, 9], "tool": [2, 8], "top": 4, "tour": [6, 8], "trade": [3, 9], "tradeoff": 3, "transform": [3, 5], "tri": [3, 4], "true": [0, 2, 3, 4, 7, 9], "try": [3, 4, 9], "tune": [2, 6, 8], "tupl": 3, "twinx": 0, "two": [4, 5], "ty": 2, "type": [0, 1, 3], "typeerror": 3, "typic": [3, 4, 5], "u": [0, 8, 9], "ub": 3, "ucb": [2, 3, 8, 9], "uncertainti": [1, 9], "under": 8, "underli": 6, "understand": [1, 8], "unev": 9, "unfeas": 4, "unfortun": 1, "uniqu": 3, "unit": 0, "unitari": 3, "univari": 3, "unknown": [2, 8, 9], "unnecessari": 4, "unpack": 4, "unseed": 3, "until": 4, "up": [0, 3, 4, 5, 8], "updat": [1, 3, 4, 5], "upon": [2, 8], "upper": [2, 3, 5, 6, 8, 9], "upperconfidencebound": [1, 3, 7, 9], "url": 8, "us": [0, 1, 2, 3, 4, 5, 8, 9], "usag": [2, 8], "use": 2, "user": [2, 9], "usual": [0, 4], "util": [0, 2, 9], "utility_funct": 9, "v": 6, "valid": [3, 8], "valu": [0, 1, 2, 3, 4, 5, 8], "valueerror": 3, "variabl": [5, 9], "varianc": 3, "variou": 0, "verbos": [1, 2, 3, 4, 5, 7], "veri": [0, 1, 2, 8], "version": [0, 3], "via": [2, 4], "violat": 4, "visual": [4, 6, 8], "vmax": 4, "vmin": 4, "volum": 8, "w": 1, "wa": [1, 9], "wai": [1, 2, 4], "want": [1, 2, 4, 8], "warn": 0, "we": [0, 1, 2, 3, 4, 5, 8, 9], "weinberg": 8, "well": [3, 4], "were": 4, "what": [0, 1, 2, 4, 8], "whatev": 1, "when": [1, 2, 3, 4, 5, 8], "whenev": [1, 4], "where": [0, 1, 2, 3, 4, 5, 8], "wheter": 3, "whether": [3, 4], "which": [0, 2, 3, 4, 5, 8, 9], "while": [0, 1, 2], "white": 4, "whole": 7, "why": 1, "window": 3, "wish": 2, "within": 3, "without": 2, "word": 4, "work": [0, 1, 2, 3, 4, 9], "worker": 3, "wors": 4, "worst": 4, "worth": [2, 8], "would": [0, 4], "wrapper": 1, "write": [0, 4], "written": 1, "x": [0, 1, 2, 3, 4, 5, 7, 9], "x_": 4, "x_i": 4, "x_max_bound": 5, "x_min_bound": 5, "x_ob": [0, 9], "x_reduc": 0, "x_train_": 0, "xi": [0, 3], "xu": 8, "xy": 4, "y": [0, 1, 2, 3, 4, 5, 9], "y_": [3, 4], "y_cov": 0, "y_j": 4, "y_max": 3, "y_mean": 0, "y_ob": [0, 9], "y_sampl": 0, "y_sample_argmax": 0, "year": 8, "yet": [1, 3], "yield": 3, "you": [0, 1, 2, 4, 8], "your": [0, 1, 2, 4, 8], "yourself": 4, "z": 4, "z_est": 4, "z_mask": 4, "zhixiang": 8, "zoom": [3, 5], "zorder": 7}, "titles": ["Acquisition functions", "Advanced tour of the Bayesian Optimization package", "Basic tour of the Bayesian Optimization package", "Code Documentation", "Constrained Optimization", "Sequential Domain Reduction", "Examples", "Exploitation vs Exploration", "Bayesian Optimization", "Visualization"], "titleterms": {"": 9, "0": 7, "1": [1, 2, 4, 7], "10": 7, "1e": 7, "2": [1, 2, 4], "3": [1, 2], "4": [2, 7], "The": 1, "acquisit": [0, 3, 7], "advanc": [1, 4], "after": 9, "algorithm": 9, "alpha": 1, "background": 5, "basic": [2, 5], "bayesian": [1, 2, 3, 8], "bayesianoptim": 9, "bound": [2, 7], "chang": [1, 2], "citat": 8, "code": 3, "conda": 8, "confid": 7, "constrain": 4, "constraint": [3, 4], "continu": 1, "coupl": 9, "creat": 9, "deal": 1, "defin": 9, "discret": 1, "document": 3, "doe": 8, "domain": [3, 5], "each": 9, "easier": 9, "evalu": 1, "exampl": 6, "expect": 7, "exploit": 7, "explor": 7, "first": 9, "five": 9, "forg": 8, "four": 9, "function": [0, 2, 3, 7, 9], "gaussian": 1, "get": 2, "gp": [1, 9], "guid": 2, "how": 8, "improv": 7, "index": 8, "instal": 8, "kappa": 7, "kernel": 1, "let": 9, "load": 2, "loop": 1, "make": 9, "maxim": 1, "multipl": 4, "next": 2, "notebook": 6, "object": 9, "observ": 1, "one": 9, "optim": [1, 2, 3, 4, 8], "packag": [1, 2], "paradigm": 1, "paramet": [1, 5], "pass": 1, "pip": 8, "plot": [7, 9], "point": 9, "prefer": 7, "probabl": 7, "process": 1, "progress": 2, "pypi": 8, "quick": 8, "random": 9, "reduct": [3, 5], "regist": 1, "restart": 2, "save": 2, "sequenti": 5, "seven": 9, "simpl": 4, "simul": 4, "singl": 4, "six": 9, "space": 3, "specifi": 2, "start": 2, "step": [2, 9], "stop": 9, "suggest": 1, "target": [3, 7], "three": 9, "tour": [1, 2], "tune": 1, "two": 9, "underli": 1, "upper": 7, "util": 7, "v": 7, "via": 8, "visual": 9, "work": 8, "xi": 7}})